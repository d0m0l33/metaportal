{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/badge/BadgeRequirementsList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { getExplorerTransactionLink, useNotifications, useTransactions, getStoredTransactionState, shortenTransactionHash } from '@usedapp/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TextBold } from '../../typography/Text';\nimport { ContentBlock } from '../base/base';\nimport { CheckIcon, ClockIcon, ExclamationIcon, ShareIcon, UnwrapIcon, WalletIcon, WrapIcon, SpinnerIcon } from '../Transactions/Icons';\nimport { Colors, Shadows } from '../../global/styles';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { formatEther } from '@ethersproject/units';\nimport { BigNumber } from 'ethers';\nimport { Link } from '../base/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3\n});\n\nconst formatBalance = balance => formatter.format(parseFloat(formatEther(balance !== null && balance !== void 0 ? balance : BigNumber.from('0'))));\n\nconst TableWrapper = _ref => {\n  let {\n    children,\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(SmallContentBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleRow, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TableWrapper;\n\nconst DateCell = _ref2 => {\n  let {\n    date,\n    className\n  } = _ref2;\n  const dateObject = new Date(date);\n  const formattedDate = dateObject.toLocaleDateString();\n  const formattedTime = dateObject.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  return /*#__PURE__*/_jsxDEV(DateRow, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(DateDisplay, {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HourDisplay, {\n      children: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DateCell;\n\nconst TransactionLink = _ref3 => {\n  let {\n    transaction\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transaction && /*#__PURE__*/_jsxDEV(Link, {\n      href: getExplorerTransactionLink(transaction.hash, transaction.chainId),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: [\"View on Etherscan\", /*#__PURE__*/_jsxDEV(LinkIconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = TransactionLink;\nconst notificationContent = {\n  transactionFailed: {\n    title: 'Transaction failed',\n    icon: /*#__PURE__*/_jsxDEV(ExclamationIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 59\n    }, this)\n  },\n  transactionStarted: {\n    title: 'Transaction started',\n    icon: /*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 61\n    }, this)\n  },\n  transactionSucceed: {\n    title: 'Transaction succeed',\n    icon: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 61\n    }, this)\n  },\n  walletConnected: {\n    title: 'Wallet connected',\n    icon: /*#__PURE__*/_jsxDEV(WalletIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 55\n    }, this)\n  }\n};\n\nconst ListElement = _ref4 => {\n  let {\n    icon,\n    title\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(ListElementWrapper, {\n    layout: true,\n    initial: {\n      opacity: 0,\n      y: -50\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListIconContainer, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListDetailsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextBold, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = ListElement;\n\nfunction TransactionIcon(transaction) {\n  if (getStoredTransactionState(transaction) === 'Mining') {\n    return /*#__PURE__*/_jsxDEV(SpinnerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  } else if (getStoredTransactionState(transaction) === 'Fail') {\n    return /*#__PURE__*/_jsxDEV(ExclamationIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  } else if (transaction.transactionName === 'Unwrap') {\n    return /*#__PURE__*/_jsxDEV(UnwrapIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  } else if (transaction.transactionName === 'Wrap') {\n    return /*#__PURE__*/_jsxDEV(WrapIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(RequirmentCheck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c5 = TransactionIcon;\n\nfunction RequirementIcon() {\n  return /*#__PURE__*/_jsxDEV(RequirmentCheck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n}\n\n_c6 = RequirementIcon;\nexport const RequirementsList = props => {\n  _s();\n\n  const {\n    transactions\n  } = useTransactions(); // const badgeRequirements = [\n  //     {title: 'Create an ethereum account'},\n  //     {title: 'Be awesome'},\n  //   ]\n\n  return /*#__PURE__*/_jsxDEV(TableWrapper, {\n    title: \"Requirements\",\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      children: props.requirements && props.requirements.map((requirement, index) => /*#__PURE__*/_jsxDEV(ListElement, {\n        title: requirement,\n        icon: RequirementIcon()\n      }, `requirement-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequirementsList, \"KM2oTVMBjbrrMaP+IVSrht+dP2Y=\", false, function () {\n  return [useTransactions];\n});\n\n_c7 = RequirementsList;\n\nconst NotificationElement = _ref5 => {\n  let {\n    transaction,\n    icon,\n    title\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(NotificationWrapper, {\n    layout: true,\n    initial: {\n      opacity: 0,\n      y: -50\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(NotificationIconContainer, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationDetailsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationText, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionLink, {\n        transaction: transaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionDetails, {\n        children: transaction && `${shortenTransactionHash(transaction === null || transaction === void 0 ? void 0 : transaction.hash)} #${transaction.nonce}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), transaction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 'auto'\n      },\n      children: [\"- \", formatBalance(transaction.value), \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n_c8 = NotificationElement;\nexport const NotificationsList = () => {\n  _s2();\n\n  const {\n    notifications\n  } = useNotifications();\n  return /*#__PURE__*/_jsxDEV(NotificationsWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      children: notifications.map(notification => {\n        if ('transaction' in notification) return /*#__PURE__*/_jsxDEV(NotificationElement, {\n          icon: notificationContent[notification.type].icon,\n          title: notificationContent[notification.type].title,\n          transaction: notification.transaction,\n          date: Date.now()\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this);else return /*#__PURE__*/_jsxDEV(NotificationElement, {\n          icon: notificationContent[notification.type].icon,\n          title: notificationContent[notification.type].title,\n          date: Date.now()\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NotificationsList, \"IDDudNVOBPNqukqT2WKqtKHUOK8=\", false, function () {\n  return [useNotifications];\n});\n\n_c9 = NotificationsList;\nconst RequirmentCheck = styled(CheckIcon)`\n    color: blue;\n`;\n_c10 = RequirmentCheck;\nconst NotificationText = styled(TextBold)`\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n_c11 = NotificationText;\nconst TransactionDetails = styled.div`\n  font-size: 14px;\n`;\n_c12 = TransactionDetails;\nconst NotificationWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  background-color: ${Colors.White};\n  box-shadow: ${Shadows.notification};\n  width: 395px;\n  border-radius: 10px;\n  margin: 15px;\n  padding: 10px 20px 10px 20px;\n`;\n_c13 = NotificationWrapper;\nconst NotificationsWrapper = styled.div`\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`;\n_c14 = NotificationsWrapper;\nconst NotificationIconContainer = styled.div`\n  width: 60px;\n  height: 60px;\n  padding: 0px;\n  margin-right: 20px;\n`;\n_c15 = NotificationIconContainer;\nconst ListIconContainer = styled.div`\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  padding: 14px 16px 14px 12px;\n`;\n_c16 = ListIconContainer;\nconst ListElementWrapper = styled(motion.div)`\n  display: flex;\n`;\n_c17 = ListElementWrapper;\nconst NotificationDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 4px 0;\n`;\n_c18 = NotificationDetailsWrapper;\nconst ListDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 4px 0;\n`;\n_c19 = ListDetailsWrapper;\nconst Table = styled.div`\n  height: 300px;\n  overflow: scroll;\n  padding: 12px;\n\n  & > * + * {\n    margin-top: 12px;\n  }\n`;\n_c20 = Table;\nconst LinkIconWrapper = styled.div`\n  width: 12px;\n  height: 12px;\n  margin-left: 8px;\n`;\n_c21 = LinkIconWrapper;\nconst SmallContentBlock = styled(ContentBlock)`\n  padding: 0;\n`;\n_c22 = SmallContentBlock;\nconst TitleRow = styled(TextBold)`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n  font-size: 18px;\n`;\n_c23 = TitleRow;\nconst DateRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: end;\n  padding: 8px;\n`;\n_c24 = DateRow;\nconst NotificationDate = styled(DateCell)`\n  margin-left: auto;\n`;\nconst DateDisplay = styled.div`\n  font-size: 14px;\n`;\n_c25 = DateDisplay;\nconst HourDisplay = styled.div`\n  font-size: 12px;\n  color: ${Colors.Gray['600']};\n`;\n_c26 = HourDisplay;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26;\n\n$RefreshReg$(_c, \"TableWrapper\");\n$RefreshReg$(_c2, \"DateCell\");\n$RefreshReg$(_c3, \"TransactionLink\");\n$RefreshReg$(_c4, \"ListElement\");\n$RefreshReg$(_c5, \"TransactionIcon\");\n$RefreshReg$(_c6, \"RequirementIcon\");\n$RefreshReg$(_c7, \"RequirementsList\");\n$RefreshReg$(_c8, \"NotificationElement\");\n$RefreshReg$(_c9, \"NotificationsList\");\n$RefreshReg$(_c10, \"RequirmentCheck\");\n$RefreshReg$(_c11, \"NotificationText\");\n$RefreshReg$(_c12, \"TransactionDetails\");\n$RefreshReg$(_c13, \"NotificationWrapper\");\n$RefreshReg$(_c14, \"NotificationsWrapper\");\n$RefreshReg$(_c15, \"NotificationIconContainer\");\n$RefreshReg$(_c16, \"ListIconContainer\");\n$RefreshReg$(_c17, \"ListElementWrapper\");\n$RefreshReg$(_c18, \"NotificationDetailsWrapper\");\n$RefreshReg$(_c19, \"ListDetailsWrapper\");\n$RefreshReg$(_c20, \"Table\");\n$RefreshReg$(_c21, \"LinkIconWrapper\");\n$RefreshReg$(_c22, \"SmallContentBlock\");\n$RefreshReg$(_c23, \"TitleRow\");\n$RefreshReg$(_c24, \"DateRow\");\n$RefreshReg$(_c25, \"DateDisplay\");\n$RefreshReg$(_c26, \"HourDisplay\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/badge/BadgeRequirementsList.tsx"],"names":["getExplorerTransactionLink","useNotifications","useTransactions","getStoredTransactionState","shortenTransactionHash","React","styled","TextBold","ContentBlock","CheckIcon","ClockIcon","ExclamationIcon","ShareIcon","UnwrapIcon","WalletIcon","WrapIcon","SpinnerIcon","Colors","Shadows","AnimatePresence","motion","formatEther","BigNumber","Link","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","TableWrapper","children","title","DateCell","date","className","dateObject","Date","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","hour12","TransactionLink","transaction","hash","chainId","notificationContent","transactionFailed","icon","transactionStarted","transactionSucceed","walletConnected","ListElement","opacity","y","TransactionIcon","transactionName","RequirementIcon","RequirementsList","props","transactions","requirements","map","requirement","index","NotificationElement","nonce","marginLeft","value","NotificationsList","notifications","notification","type","now","id","RequirmentCheck","NotificationText","TransactionDetails","div","NotificationWrapper","White","NotificationsWrapper","NotificationIconContainer","ListIconContainer","ListElementWrapper","NotificationDetailsWrapper","ListDetailsWrapper","Table","LinkIconWrapper","SmallContentBlock","TitleRow","Gray","DateRow","NotificationDate","DateDisplay","HourDisplay"],"mappings":"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","sourcesContent":["import type { TransactionResponse } from '@ethersproject/providers'\nimport {\n  getExplorerTransactionLink,\n  Notification,\n  useNotifications,\n  useTransactions,\n  getStoredTransactionState,\n  StoredTransaction,\n  shortenTransactionHash,\n} from '@usedapp/core'\nimport React, { ReactElement, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { TextBold } from '../../typography/Text'\nimport { ContentBlock } from '../base/base'\nimport {\n  CheckIcon,\n  ClockIcon,\n  ExclamationIcon,\n  ShareIcon,\n  UnwrapIcon,\n  WalletIcon,\n  WrapIcon,\n  SpinnerIcon,\n} from '../Transactions/Icons'\nimport { Colors, Shadows } from '../../global/styles'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumber } from 'ethers'\nimport { Link } from '../base/Link'\n\ninterface TableWrapperProps {\n  children: ReactNode\n  title: string\n}\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\nconst TableWrapper = ({ children, title }: TableWrapperProps) => (\n  <SmallContentBlock>\n    <TitleRow>{title}</TitleRow>\n    <Table>{children}</Table>\n  </SmallContentBlock>\n)\n\ninterface DateProps {\n  date: number\n  className?: string\n}\n\nconst DateCell = ({ date, className }: DateProps) => {\n  const dateObject = new Date(date)\n  const formattedDate = dateObject.toLocaleDateString()\n  const formattedTime = dateObject.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  })\n\n  return (\n    <DateRow className={className}>\n      <DateDisplay>{formattedDate}</DateDisplay>\n      <HourDisplay>{formattedTime}</HourDisplay>\n    </DateRow>\n  )\n}\n\ninterface TransactionLinkProps {\n  transaction: TransactionResponse | undefined\n}\n\nconst TransactionLink = ({ transaction }: TransactionLinkProps) => (\n  <>\n    {transaction && (\n      <Link\n        href={getExplorerTransactionLink(transaction.hash, transaction.chainId)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        View on Etherscan\n        <LinkIconWrapper>\n          <ShareIcon />\n        </LinkIconWrapper>\n      </Link>\n    )}\n  </>\n)\n\nconst notificationContent: { [key in Notification['type']]: { title: string; icon: ReactElement } } = {\n  transactionFailed: { title: 'Transaction failed', icon: <ExclamationIcon /> },\n  transactionStarted: { title: 'Transaction started', icon: <ClockIcon /> },\n  transactionSucceed: { title: 'Transaction succeed', icon: <CheckIcon/> },\n  walletConnected: { title: 'Wallet connected', icon: <WalletIcon /> },\n}\n\ninterface ListElementProps {\n  icon: ReactElement\n  title: string | undefined\n  transaction?: TransactionResponse\n  date?: number\n}\n\nconst ListElement = ({icon, title }: ListElementProps) => {\n  return (\n    <ListElementWrapper layout initial={{ opacity: 0, y: -50 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0 }}>\n      <ListIconContainer>{icon}</ListIconContainer>\n      <ListDetailsWrapper>\n        <TextBold>{title}</TextBold>\n      </ListDetailsWrapper>\n    </ListElementWrapper>\n  )\n}\n\nfunction TransactionIcon(transaction: StoredTransaction) {\n  if (getStoredTransactionState(transaction) === 'Mining') {\n    return <SpinnerIcon />\n  } else if (getStoredTransactionState(transaction) === 'Fail') {\n    return <ExclamationIcon />\n  } else if (transaction.transactionName === 'Unwrap') {\n    return <UnwrapIcon />\n  } else if (transaction.transactionName === 'Wrap') {\n    return <WrapIcon />\n  } else {\n    return <RequirmentCheck/>\n  }\n}\n\n\nfunction RequirementIcon() {\n    return <RequirmentCheck/>\n}\n\ninterface RequirementsListProps {\n  requirements: (string[]| undefined);\n}\n\nexport const RequirementsList = (props: RequirementsListProps) => {\n  const { transactions } = useTransactions()\n  // const badgeRequirements = [\n  //     {title: 'Create an ethereum account'},\n  //     {title: 'Be awesome'},\n\n  //   ]\n  return (\n    <TableWrapper title=\"Requirements\">\n      <AnimatePresence initial={false}>\n        {  props.requirements &&  \n         props.requirements.map((requirement, index) =>\n          <ListElement\n            key={`requirement-${index}`}\n            title={requirement}\n            icon={RequirementIcon()}\n          />)\n        }\n        \n      </AnimatePresence>\n    </TableWrapper>\n  )\n}\n\nconst NotificationElement = ({ transaction, icon, title }: ListElementProps) => {\n  return (\n    <NotificationWrapper layout initial={{ opacity: 0, y: -50 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0 }}>\n      <NotificationIconContainer>{icon}</NotificationIconContainer>\n      <NotificationDetailsWrapper>\n        <NotificationText>{title}</NotificationText>\n        <TransactionLink transaction={transaction} />\n        <TransactionDetails>\n          {transaction && `${shortenTransactionHash(transaction?.hash)} #${transaction.nonce}`}\n        </TransactionDetails>\n      </NotificationDetailsWrapper>\n      {transaction && <div style={{ marginLeft: 'auto' }}>- {formatBalance(transaction.value)} ETH</div>}\n    </NotificationWrapper>\n  )\n}\n\nexport const NotificationsList = () => {\n  const { notifications } = useNotifications()\n  return (\n    <NotificationsWrapper>\n      <AnimatePresence initial={false}>\n        {notifications.map((notification) => {\n          if ('transaction' in notification)\n            return (\n              <NotificationElement\n                key={notification.id}\n                icon={notificationContent[notification.type].icon}\n                title={notificationContent[notification.type].title}\n                transaction={notification.transaction}\n                date={Date.now()}\n              />\n            )\n          else\n            return (\n              <NotificationElement\n                key={notification.id}\n                icon={notificationContent[notification.type].icon}\n                title={notificationContent[notification.type].title}\n                date={Date.now()}\n              />\n            )\n        })}\n      </AnimatePresence>\n    </NotificationsWrapper>\n  )\n}\n\nconst RequirmentCheck = styled(CheckIcon)`\n    color: blue;\n`\n\nconst NotificationText = styled(TextBold)`\n  font-size: 20px;\n  margin-bottom: 5px;\n`\n\nconst TransactionDetails = styled.div`\n  font-size: 14px;\n`\n\nconst NotificationWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  background-color: ${Colors.White};\n  box-shadow: ${Shadows.notification};\n  width: 395px;\n  border-radius: 10px;\n  margin: 15px;\n  padding: 10px 20px 10px 20px;\n`\n\nconst NotificationsWrapper = styled.div`\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`\n\nconst NotificationIconContainer = styled.div`\n  width: 60px;\n  height: 60px;\n  padding: 0px;\n  margin-right: 20px;\n`\n\nconst ListIconContainer = styled.div`\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  padding: 14px 16px 14px 12px;\n`\n\nconst ListElementWrapper = styled(motion.div)`\n  display: flex;\n`\n\nconst NotificationDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 4px 0;\n`\n\nconst ListDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 4px 0;\n`\n\nconst Table = styled.div`\n  height: 300px;\n  overflow: scroll;\n  padding: 12px;\n\n  & > * + * {\n    margin-top: 12px;\n  }\n`\n\nconst LinkIconWrapper = styled.div`\n  width: 12px;\n  height: 12px;\n  margin-left: 8px;\n`\n\nconst SmallContentBlock = styled(ContentBlock)`\n  padding: 0;\n`\n\nconst TitleRow = styled(TextBold)`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n  font-size: 18px;\n`\n\nconst DateRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: end;\n  padding: 8px;\n`\n\nconst NotificationDate = styled(DateCell)`\n  margin-left: auto;\n`\n\nconst DateDisplay = styled.div`\n  font-size: 14px;\n`\nconst HourDisplay = styled.div`\n  font-size: 12px;\n  color: ${Colors.Gray['600']};\n`\n"]},"metadata":{},"sourceType":"module"}