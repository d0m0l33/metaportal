{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10;import React,{useEffect,useState}from'react';import{formatEther}from'@ethersproject/units';import{BigNumber}from'ethers';import{TextBold}from'../../typography/Text';import{Colors,BorderRad,Transitions}from'../../global/styles';import styled from'styled-components';import{useEtherBalance,useEthers}from'@usedapp/core';import{Button}from'../base/Button';import{useSendTransaction}from'@usedapp/core';import{utils}from'ethers';import{StatusAnimation}from'../Transactions/TransactionForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formatter=new Intl.NumberFormat('en-us',{minimumFractionDigits:4,maximumFractionDigits:4});var formatBalance=function formatBalance(balance){return formatter.format(parseFloat(formatEther(balance!==null&&balance!==void 0?balance:BigNumber.from('0'))));};var InputComponent=function InputComponent(){var _useEthers=useEthers(),account=_useEthers.account;var _useState=useState('0'),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),disabled=_useState6[0],setDisabled=_useState6[1];var _useSendTransaction=useSendTransaction({transactionName:'Send Ethereum'}),sendTransaction=_useSendTransaction.sendTransaction,state=_useSendTransaction.state;var handleClick=function handleClick(){setDisabled(true);sendTransaction({to:address,value:utils.parseEther(amount)});};useEffect(function(){if(state.status!='Mining'){setDisabled(false);setAmount('0');setAddress('');}},[state]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(InputRow,{children:[/*#__PURE__*/_jsx(Input,{id:\"EthInput\",type:\"number\",step:\"0.01\",value:amount,onChange:function onChange(e){return setAmount(e.currentTarget.value);},min:\"0\",disabled:disabled}),/*#__PURE__*/_jsx(FormTicker,{children:\"ETH to:\"}),/*#__PURE__*/_jsx(AddressInput,{id:\"AddressInput\",type:\"text\",value:address,onChange:function onChange(e){return setAddress(e.currentTarget.value);},disabled:disabled}),/*#__PURE__*/_jsx(SmallButton,{disabled:!account||disabled,onClick:handleClick,children:\"Send\"})]}),/*#__PURE__*/_jsx(StatusAnimation,{transaction:state})]});};export var SendEthForm=function SendEthForm(){var _useEthers2=useEthers(),account=_useEthers2.account;var balance=useEtherBalance(account);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(TitleRow,{children:[/*#__PURE__*/_jsx(CellTitle,{children:\"Send transaction\"}),/*#__PURE__*/_jsxs(BalanceWrapper,{children:[\"Your ETH balance: \",formatBalance(balance)]})]}),/*#__PURE__*/_jsx(InputComponent,{})]});};var CellTitle=styled(TextBold)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n\"])));var LabelRow=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  margin: 32px 0 24px 0;\\n\"])));var Label=styled.label(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-weight: 700;\\n  cursor: pointer;\\n  transition: \",\";\\n\\n  &:hover,\\n  &:focus-within {\\n    color: \",\";\\n  }\\n\"])),Transitions.all,Colors.Yellow[500]);var TitleRow=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: baseline;\\n  justify-content: space-between;\\n  border-bottom: \",\" 1px solid;\\n  padding: 16px;\\n\"])),Colors.Gray['300']);var BalanceWrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),Colors.Gray['600']);var Input=styled.input(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 120px;\\n  padding: 0 0 0 24px;\\n  border: 0;\\n  border-radius: \",\";\\n  -moz-appearance: textfield;\\n  outline: none;\\n\\n  &::-webkit-outer-spin-button,\\n  &::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n  }\\n\\n  &:-webkit-autofill,\\n  &:-webkit-autofill:hover,\\n  &:-webkit-autofill:focus,\\n  &:-webkit-autofill:active {\\n    -webkit-background-clip: text;\\n  }\\n\"])),BorderRad.m);var AddressInput=styled(Input)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 0 0 0 38px;\\n\"])));var InputRow=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  color: \",\";\\n  border: \",\" 1px solid;\\n  border-radius: \",\";\\n  overflow: hidden;\\n  transition: \",\";\\n  padding:10px;\\n\\n  &:hover,\\n  &:focus-within {\\n    border-color: \",\";\\n  }\\n\"])),Colors.Gray['600'],Colors.Gray['300'],BorderRad.m,Transitions.all,Colors.Black[900]);var FormTicker=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  padding: 0 8px;\\n\"])));var SmallButton=styled(Button)(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  height: 100%;\\n  padding: 8px 24px;\\n  margin-top:10px;\\n\\n  &:disabled {\\n    color: \",\";\\n    cursor: unset;\\n  }\\n\\n  &:disabled:hover,\\n  &:disabled:focus {\\n    background-color: unset;\\n    color: unset;\\n  }\\n\"])),Colors.Gray['600']);","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/SendEthForm/SendEthForm.tsx"],"names":["React","useEffect","useState","formatEther","BigNumber","TextBold","Colors","BorderRad","Transitions","styled","useEtherBalance","useEthers","Button","useSendTransaction","utils","StatusAnimation","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","InputComponent","account","amount","setAmount","address","setAddress","disabled","setDisabled","transactionName","sendTransaction","state","handleClick","to","value","parseEther","status","display","flexDirection","e","currentTarget","SendEthForm","CellTitle","LabelRow","div","Label","label","all","Yellow","TitleRow","Gray","BalanceWrapper","Input","input","m","AddressInput","InputRow","Black","FormTicker","SmallButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumber } from 'ethers'\nimport { ContentBlock } from '../base/base'\nimport { TextBold } from '../../typography/Text'\nimport { Colors, BorderRad, Transitions } from '../../global/styles'\nimport styled from 'styled-components'\nimport { useEtherBalance, useEthers } from '@usedapp/core'\nimport { Button } from '../base/Button'\nimport { useSendTransaction } from '@usedapp/core'\nimport { utils } from 'ethers'\nimport { StatusAnimation } from '../Transactions/TransactionForm'\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\nconst InputComponent = () => {\n  const { account } = useEthers()\n\n  const [amount, setAmount] = useState('0')\n  const [address, setAddress] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const { sendTransaction, state } = useSendTransaction({ transactionName: 'Send Ethereum' })\n\n  const handleClick = () => {\n    setDisabled(true)\n    sendTransaction({ to: address, value: utils.parseEther(amount) })\n  }\n\n  useEffect(() => {\n    if (state.status != 'Mining') {\n      setDisabled(false)\n      setAmount('0')\n      setAddress('')\n    }\n  }, [state])\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <InputRow>\n        <Input\n          id={`EthInput`}\n          type=\"number\"\n          step=\"0.01\"\n          value={amount}\n          onChange={(e) => setAmount(e.currentTarget.value)}\n          min=\"0\"\n          disabled={disabled}\n        />\n        <FormTicker>ETH to:</FormTicker>\n        <AddressInput\n          id={`AddressInput`}\n          type=\"text\"\n          value={address}\n          onChange={(e) => setAddress(e.currentTarget.value)}\n          disabled={disabled}\n        />\n        <SmallButton disabled={!account || disabled} onClick={handleClick}>\n          Send\n        </SmallButton>\n      </InputRow>\n      <StatusAnimation transaction={state} />\n    </div>\n  )\n}\n\nexport const SendEthForm = () => {\n  const { account } = useEthers()\n  const balance = useEtherBalance(account)\n  return (\n    <div>\n      <TitleRow>\n        <CellTitle>Send transaction</CellTitle>\n        <BalanceWrapper>Your ETH balance: {formatBalance(balance)}</BalanceWrapper>\n      </TitleRow>\n      {/* <LabelRow>\n        <Label style={{ marginLeft: '58px' }} htmlFor={'EthInput'}>\n          How much?\n        </Label>\n        <Label style={{ marginLeft: '240px' }} htmlFor={'AddressInput'}>\n          To whom?\n        </Label>\n      </LabelRow> */}\n      <InputComponent />\n      </div>\n  )\n}\n\nconst CellTitle = styled(TextBold)`\n  font-size: 18px;\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  margin: 32px 0 24px 0;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n  cursor: pointer;\n  transition: ${Transitions.all};\n\n  &:hover,\n  &:focus-within {\n    color: ${Colors.Yellow[500]};\n  }\n`\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n`\n\nconst BalanceWrapper = styled.div`\n  color: ${Colors.Gray['600']};\n  font-size: 14px;\n`\n\nconst Input = styled.input`\n  width: 120px;\n  padding: 0 0 0 24px;\n  border: 0;\n  border-radius: ${BorderRad.m};\n  -moz-appearance: textfield;\n  outline: none;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-background-clip: text;\n  }\n`\n\nconst AddressInput = styled(Input)`\n  width: 100%;\n  padding: 0 0 0 38px;\n`\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${Colors.Gray['600']};\n  border: ${Colors.Gray['300']} 1px solid;\n  border-radius: ${BorderRad.m};\n  overflow: hidden;\n  transition: ${Transitions.all};\n  padding:10px;\n\n  &:hover,\n  &:focus-within {\n    border-color: ${Colors.Black[900]};\n  }\n`\n\nconst FormTicker = styled.div`\n  padding: 0 8px;\n`\n\nconst SmallButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  height: 100%;\n  padding: 8px 24px;\n  margin-top:10px;\n\n  &:disabled {\n    color: ${Colors.Gray['600']};\n    cursor: unset;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: unset;\n    color: unset;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}