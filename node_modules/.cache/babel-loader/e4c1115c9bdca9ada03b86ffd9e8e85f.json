{"ast":null,"code":"import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/useAnimations.js"],"names":["React","Object3D","AnimationMixer","useFrame","useAnimations","clips","root","ref","useRef","actualRef","useState","current","mixer","undefined","lazyActions","api","actions","forEach","clip","Object","defineProperty","name","enumerable","get","clipAction","names","map","c","state","delta","update","useEffect","currentRoot","values","action","uncacheAction"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,QAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,EAAZ;AACA,QAAM,CAACC,SAAD,IAAcT,KAAK,CAACU,QAAN,CAAe,MAAMJ,IAAI,GAAGA,IAAI,YAAYL,QAAhB,GAA2B;AACzEU,IAAAA,OAAO,EAAEL;AADgE,GAA3B,GAE5CA,IAFyC,GAElCC,GAFS,CAApB,CAFkC,CAIjB;;AAEjB,QAAM,CAACK,KAAD,IAAUZ,KAAK,CAACU,QAAN,CAAe,MAAM,IAAIR,cAAJ,CAAmBW,SAAnB,CAArB,CAAhB;AACA,QAAMC,WAAW,GAAGd,KAAK,CAACQ,MAAN,CAAa,EAAb,CAApB;AACA,QAAM,CAACO,GAAD,IAAQf,KAAK,CAACU,QAAN,CAAe,MAAM;AACjC,UAAMM,OAAO,GAAG,EAAhB;AACAX,IAAAA,KAAK,CAACY,OAAN,CAAcC,IAAI,IAAIC,MAAM,CAACC,cAAP,CAAsBJ,OAAtB,EAA+BE,IAAI,CAACG,IAApC,EAA0C;AAC9DC,MAAAA,UAAU,EAAE,IADkD;;AAG9DC,MAAAA,GAAG,GAAG;AACJ,YAAId,SAAS,CAACE,OAAd,EAAuB;AACrB,iBAAOG,WAAW,CAACH,OAAZ,CAAoBO,IAAI,CAACG,IAAzB,MAAmCP,WAAW,CAACH,OAAZ,CAAoBO,IAAI,CAACG,IAAzB,IAAiCT,KAAK,CAACY,UAAN,CAAiBN,IAAjB,EAAuBT,SAAS,CAACE,OAAjC,CAApE,CAAP;AACD;AACF;;AAP6D,KAA1C,CAAtB;AAUA,WAAO;AACLJ,MAAAA,GAAG,EAAEE,SADA;AAELJ,MAAAA,KAFK;AAGLW,MAAAA,OAHK;AAILS,MAAAA,KAAK,EAAEpB,KAAK,CAACqB,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACN,IAAjB,CAJF;AAKLT,MAAAA;AALK,KAAP;AAOD,GAnBa,CAAd;AAoBAT,EAAAA,QAAQ,CAAC,CAACyB,KAAD,EAAQC,KAAR,KAAkBjB,KAAK,CAACkB,MAAN,CAAaD,KAAb,CAAnB,CAAR;AACA7B,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,MAAM;AACpB,UAAMC,WAAW,GAAGvB,SAAS,CAACE,OAA9B;AACA,WAAO,MAAM;AACX;AACAG,MAAAA,WAAW,CAACH,OAAZ,GAAsB,EAAtB;AACAQ,MAAAA,MAAM,CAACc,MAAP,CAAclB,GAAG,CAACC,OAAlB,EAA2BC,OAA3B,CAAmCiB,MAAM,IAAI;AAC3C,YAAIF,WAAJ,EAAiB;AACfpB,UAAAA,KAAK,CAACuB,aAAN,CAAoBD,MAApB,EAA4BF,WAA5B;AACD;AACF,OAJD;AAKD,KARD,CAFoB,CAUjB;AACJ,GAXD,EAWG,CAAC3B,KAAD,CAXH;AAYA,SAAOU,GAAP;AACD;;AAED,SAASX,aAAT","sourcesContent":["import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };\n"]},"metadata":{},"sourceType":"module"}