{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\n\nclass Pass {\n  constructor() {\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"needsSwap\", true);\n\n    _defineProperty(this, \"clear\", false);\n\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n\n  setSize(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  width, height) {}\n\n  render(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\n  }\n\n} // Helper for passes that need to fill the viewport with a single quad.\n\n\nclass FullScreenQuad {\n  constructor(material) {\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    this.mesh = new Mesh(this.geometry, material);\n  }\n\n  get material() {\n    return this.mesh.material;\n  }\n\n  set material(value) {\n    this.mesh.material = value;\n  }\n\n  dispose() {\n    this.mesh.geometry.dispose();\n  }\n\n  render(renderer) {\n    renderer.render(this.mesh, this.camera);\n  }\n\n}\n\nexport { FullScreenQuad, Pass };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportalpublic/node_modules/three-stdlib/postprocessing/Pass.js"],"names":["_defineProperty","OrthographicCamera","PlaneGeometry","Mesh","Pass","constructor","setSize","width","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","FullScreenQuad","material","mesh","geometry","value","dispose","camera"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,IAA5C,QAAwD,OAAxD;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,GAAG;AACZL,IAAAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,KAAzB,CAAf;AACD;;AAEDM,EAAAA,OAAO;AACP;;AAEA;AACAC,EAAAA,KAJO,EAIAC,MAJA,EAIQ,CAAE;;AAEjBC,EAAAA,MAAM;AACN;;AAEA;AACAC,EAAAA,QAJM,EAIIC,WAJJ,EAIiBC,UAJjB,EAI6BC,SAJ7B,EAIwCC,UAJxC,EAIoD;AACxDC,IAAAA,OAAO,CAACC,KAAR,CAAc,4DAAd;AACD;;AAvBQ,C,CAyBT;;;AAGF,MAAMC,cAAN,CAAqB;AACnBZ,EAAAA,WAAW,CAACa,QAAD,EAAW;AACpBlB,IAAAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAIC,kBAAJ,CAAuB,CAAC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,CAAjB,CAAf;;AAEAD,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,IAAIE,aAAJ,CAAkB,CAAlB,EAAqB,CAArB,CAAnB,CAAf;;AAEAF,IAAAA,eAAe,CAAC,IAAD,EAAO,MAAP,EAAe,KAAK,CAApB,CAAf;;AAEA,SAAKmB,IAAL,GAAY,IAAIhB,IAAJ,CAAS,KAAKiB,QAAd,EAAwBF,QAAxB,CAAZ;AACD;;AAEW,MAARA,QAAQ,GAAG;AACb,WAAO,KAAKC,IAAL,CAAUD,QAAjB;AACD;;AAEW,MAARA,QAAQ,CAACG,KAAD,EAAQ;AAClB,SAAKF,IAAL,CAAUD,QAAV,GAAqBG,KAArB;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,SAAKH,IAAL,CAAUC,QAAV,CAAmBE,OAAnB;AACD;;AAEDb,EAAAA,MAAM,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACD,MAAT,CAAgB,KAAKU,IAArB,EAA2B,KAAKI,MAAhC;AACD;;AAzBkB;;AA6BrB,SAASN,cAAT,EAAyBb,IAAzB","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\n\nclass Pass {\n  constructor() {\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"needsSwap\", true);\n\n    _defineProperty(this, \"clear\", false);\n\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n\n  setSize(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  width, height) {}\n\n  render(\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* eslint-disable no-unused-vars */\n  renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\n  }\n\n} // Helper for passes that need to fill the viewport with a single quad.\n\n\nclass FullScreenQuad {\n  constructor(material) {\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    this.mesh = new Mesh(this.geometry, material);\n  }\n\n  get material() {\n    return this.mesh.material;\n  }\n\n  set material(value) {\n    this.mesh.material = value;\n  }\n\n  dispose() {\n    this.mesh.geometry.dispose();\n  }\n\n  render(renderer) {\n    renderer.render(this.mesh, this.camera);\n  }\n\n}\n\nexport { FullScreenQuad, Pass };\n"]},"metadata":{},"sourceType":"module"}