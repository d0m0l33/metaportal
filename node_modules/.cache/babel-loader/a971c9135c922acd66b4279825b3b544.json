{"ast":null,"code":"import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nconst DepthBuffer = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    size = 256\n  } = _ref;\n  React.useEffect(() => {\n    console.warn('DepthBuffer has been deprecated and will be removed next major. Replace it with useDepthBuffer(size)!');\n  }, []);\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  const depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, () => depthFBO == null ? void 0 : depthFBO.depthTexture);\n  return useFrame(state => {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\nexport { DepthBuffer };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/DepthBuffer.js"],"names":["DepthTexture","DepthFormat","UnsignedShortType","React","useThree","useFrame","useFBO","DepthBuffer","forwardRef","ref","size","useEffect","console","warn","dpr","state","viewport","width","height","w","h","depthConfig","useMemo","depthTexture","format","type","depthFBO","useImperativeHandle","gl","setRenderTarget","render","scene","camera"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,iBAApC,QAA6D,OAA7D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,MAAMC,WAAW,GAAG,aAAaJ,KAAK,CAACK,UAAN,CAAiB,OAE/CC,GAF+C,KAEvC;AAAA,MAFwC;AACjDC,IAAAA,IAAI,GAAG;AAD0C,GAExC;AACTP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,IAAR,CAAa,uGAAb;AACD,GAFD,EAEG,EAFH;AAGA,QAAMC,GAAG,GAAGV,QAAQ,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,GAAzB,CAApB;AACA,QAAM;AACJG,IAAAA,KADI;AAEJC,IAAAA;AAFI,MAGFd,QAAQ,CAACW,KAAK,IAAIA,KAAK,CAACL,IAAhB,CAHZ;AAIA,QAAMS,CAAC,GAAGT,IAAI,IAAIO,KAAK,GAAGH,GAA1B;AACA,QAAMM,CAAC,GAAGV,IAAI,IAAIQ,MAAM,GAAGJ,GAA3B;AACA,QAAMO,WAAW,GAAGlB,KAAK,CAACmB,OAAN,CAAc,MAAM;AACtC,UAAMC,YAAY,GAAG,IAAIvB,YAAJ,CAAiBmB,CAAjB,EAAoBC,CAApB,CAArB;AACAG,IAAAA,YAAY,CAACC,MAAb,GAAsBvB,WAAtB;AACAsB,IAAAA,YAAY,CAACE,IAAb,GAAoBvB,iBAApB;AACA,WAAO;AACLqB,MAAAA;AADK,KAAP;AAGD,GAPmB,EAOjB,CAACJ,CAAD,EAAIC,CAAJ,CAPiB,CAApB;AAQA,QAAMM,QAAQ,GAAGpB,MAAM,CAACa,CAAD,EAAIC,CAAJ,EAAOC,WAAP,CAAvB;AACAlB,EAAAA,KAAK,CAACwB,mBAAN,CAA0BlB,GAA1B,EAA+B,MAAMiB,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACH,YAA1E;AACA,SAAOlB,QAAQ,CAACU,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACa,EAAN,CAASC,eAAT,CAAyBH,QAAzB;AACAX,IAAAA,KAAK,CAACa,EAAN,CAASE,MAAT,CAAgBf,KAAK,CAACgB,KAAtB,EAA6BhB,KAAK,CAACiB,MAAnC;AACAjB,IAAAA,KAAK,CAACa,EAAN,CAASC,eAAT,CAAyB,IAAzB;AACD,GAJc,CAAf;AAKD,CA5BgC,CAAjC;AA8BA,SAAStB,WAAT","sourcesContent":["import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst DepthBuffer = /*#__PURE__*/React.forwardRef(({\n  size = 256\n}, ref) => {\n  React.useEffect(() => {\n    console.warn('DepthBuffer has been deprecated and will be removed next major. Replace it with useDepthBuffer(size)!');\n  }, []);\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  const depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, () => depthFBO == null ? void 0 : depthFBO.depthTexture);\n  return useFrame(state => {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\n\nexport { DepthBuffer };\n"]},"metadata":{},"sourceType":"module"}