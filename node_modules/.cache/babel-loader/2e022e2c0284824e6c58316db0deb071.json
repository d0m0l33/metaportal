{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ContainerCustom, ContentBlock, MainContent, Section } from '../components/base/base';\nimport { useEthers } from '@usedapp/core';\nimport { useBadgeList } from '../portalHooks/useBadgeList';\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice';\nimport { useAppDispatch } from '../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tokens() {\n  _s();\n\n  const {\n    chainId,\n    account,\n    library\n  } = useEthers();\n  const badges = useBadgeList(account);\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar = index => {\n    dispatch(updatedSelectedItem({\n      index: index,\n      balance: 0,\n      holders: 0,\n      name: 'noname',\n      address: 'noaddress',\n      color: null\n    }));\n  };\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n  }, [account, chainId]);\n  return /*#__PURE__*/_jsxDEV(MainContent, {\n    children: /*#__PURE__*/_jsxDEV(ContainerCustom, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Coming Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tokens, \"qljtPg4p1m/2t4gcqVF80aOaCO4=\", false, function () {\n  return [useEthers, useBadgeList, useAppDispatch];\n});\n\n_c = Tokens;\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`;\nconst SignerXp = styled.p`\n  font-size:18px;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx"],"names":["React","useEffect","styled","ContainerCustom","ContentBlock","MainContent","Section","useEthers","useBadgeList","updatedSelectedItem","useAppDispatch","Tokens","chainId","account","library","badges","dispatch","handleApplyBadgeToAvatar","index","balance","holders","name","address","color","ItemsContentBlock","SignerXp","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAgEC,WAAhE,EAA6EC,OAA7E,QAAmM,yBAAnM;AAUA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAGA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAIA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAgCP,SAAS,EAA/C;AACA,QAAMQ,MAA8B,GAAGP,YAAY,CAACK,OAAD,CAAnD;AAEA,QAAMG,QAAQ,GAAGN,cAAc,EAA/B;;AAEA,QAAMO,wBAAwB,GAAGC,KAAD,IAAoB;AAClDF,IAAAA,QAAQ,CAAEP,mBAAmB,CAC3B;AACES,MAAAA,KAAK,EAAEA,KADT;AAEEC,MAAAA,OAAO,EAAE,CAFX;AAGEC,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,IAAI,EAAE,QAJR;AAKEC,MAAAA,OAAO,EAAE,WALX;AAMEC,MAAAA,KAAK,EAAE;AANT,KAD2B,CAArB,CAAR;AAUD,GAXD;;AAaAtB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAgB,IAAAA,wBAAwB,CAAC,CAAD,CAAxB;AAED,GALQ,EAKN,CAACJ,OAAD,EAASD,OAAT,CALM,CAAT;AAOA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,eAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApCeD,M;UACwBJ,S,EACCC,Y,EAEtBE,c;;;KAJHC,M;AAsChB,MAAMa,iBAAiB,GAAGtB,MAAM,CAACE,YAAD,CAAe;AAC/C;AACA,CAFA;AAIA,MAAMqB,QAAQ,GAAGvB,MAAM,CAACwB,CAAE;AAC1B;AACA,CAFA","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ContainerCustom, ContentBlock, ContentBlockBackground, MainContent, Section, SectionRow, SignedOutContainer,ContainerCustomTokenListSections,ItemListSection, ItemSelectionSection } from '../components/base/base'\nimport { TokensList } from '../components/TokensList/TokensList'\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection'\n\nimport { Title, DomainTitle } from '../typography/Title'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\nimport { DomainSelectBoxContainer } from '../components/base/base'\nimport { DomainTitleContainer } from '../components/base/base'\nimport { useEthers } from '@usedapp/core'\nimport { useBadgeList } from '../portalHooks/useBadgeList'\nimport { MetaBadge } from '../portalHooks/BadgeHelperTypes'\nimport {Form} from 'react-bootstrap'\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice'\nimport { useAppDispatch } from '../hooks'\nimport { RANDOM_VISOR_COLORS } from '../portalHooks/BadgeHelper'\nimport {Badge } from 'react-bootstrap'\n\nexport function Tokens() {\n  const { chainId, account, library } = useEthers();\n  const badges: MetaBadge[]| undefined = useBadgeList(account);\n\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar =(index: number) =>  {  \n    dispatch (updatedSelectedItem(\n      {\n        index: index,\n        balance: 0,\n        holders: 0,\n        name: 'noname',\n        address: 'noaddress',\n        color: null,\n      }\n    ))\n  }\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n\n  }, [account,chainId])\n\n  return (\n    <MainContent>\n      <ContainerCustom>\n        <Section>\n        <h2> Coming Soon...</h2>\n\n        </Section>\n      </ContainerCustom>\n    </MainContent>\n  )\n}\n\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`\n\nconst SignerXp = styled.p`\n  font-size:18px;\n`\n"]},"metadata":{},"sourceType":"module"}