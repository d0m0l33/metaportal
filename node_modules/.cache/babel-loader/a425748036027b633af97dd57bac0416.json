{"ast":null,"code":"import { Loader, FileLoader } from 'three';\nimport * as Nodes from '../nodes/Nodes.js';\n\nclass NodeMaterialLoader extends Loader {\n  constructor(manager) {\n    let library = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(manager);\n    this.nodes = {};\n    this.materials = {};\n    this.passes = {};\n    this.names = {};\n    this.library = library;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n    return this;\n  }\n\n  getObjectByName(uuid) {\n    return this.names[uuid];\n  }\n\n  getObjectById(uuid) {\n    return this.library[uuid] || this.nodes[uuid] || this.materials[uuid] || this.passes[uuid] || this.names[uuid];\n  }\n\n  getNode(uuid) {\n    const object = this.getObjectById(uuid);\n\n    if (!object) {\n      console.warn('Node \"' + uuid + '\" not found.');\n    }\n\n    return object;\n  }\n\n  resolve(json) {\n    switch (typeof json) {\n      case 'boolean':\n      case 'number':\n        return json;\n\n      case 'string':\n        if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i.test(json) || this.library[json]) {\n          return this.getNode(json);\n        }\n\n        return json;\n\n      default:\n        if (Array.isArray(json)) {\n          for (let i = 0; i < json.length; i++) {\n            json[i] = this.resolve(json[i]);\n          }\n        } else {\n          for (const prop in json) {\n            if (prop === 'uuid') continue;\n            json[prop] = this.resolve(json[prop]);\n          }\n        }\n\n    }\n\n    return json;\n  }\n\n  declare(json) {\n    let uuid, node, object;\n\n    for (uuid in json.nodes) {\n      node = json.nodes[uuid];\n      object = new Nodes[node.nodeType + 'Node']();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.nodes[uuid] = object;\n    }\n\n    for (uuid in json.materials) {\n      node = json.materials[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.materials[uuid] = object;\n    }\n\n    for (uuid in json.passes) {\n      node = json.passes[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.passes[uuid] = object;\n    }\n\n    if (json.material) this.material = this.materials[json.material];\n    if (json.pass) this.pass = this.passes[json.pass];\n    return json;\n  }\n\n  parse(json) {\n    let uuid;\n    json = this.resolve(this.declare(json));\n\n    for (uuid in json.nodes) {\n      this.nodes[uuid].copy(json.nodes[uuid]);\n    }\n\n    for (uuid in json.materials) {\n      this.materials[uuid].copy(json.materials[uuid]);\n    }\n\n    for (uuid in json.passes) {\n      this.passes[uuid].copy(json.passes[uuid]);\n    }\n\n    return this.material || this.pass || this;\n  }\n\n}\n\nclass NodeMaterialLoaderUtils {\n  static replaceUUIDObject(object, uuid, value, recursive) {\n    recursive = recursive !== undefined ? recursive : true;\n    if (typeof uuid === 'object') uuid = uuid.uuid;\n\n    if (typeof object === 'object') {\n      const keys = Object.keys(object);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (recursive) {\n          object[key] = this.replaceUUIDObject(object[key], uuid, value);\n        }\n\n        if (key === uuid) {\n          object[uuid] = object[key];\n          delete object[key];\n        }\n      }\n    }\n\n    return object === uuid ? value : object;\n  }\n\n  static replaceUUID(json, uuid, value) {\n    this.replaceUUIDObject(json, uuid, value, false);\n    this.replaceUUIDObject(json.nodes, uuid, value);\n    this.replaceUUIDObject(json.materials, uuid, value);\n    this.replaceUUIDObject(json.passes, uuid, value);\n    this.replaceUUIDObject(json.library, uuid, value, false);\n    return json;\n  }\n\n}\n\nexport { NodeMaterialLoader, NodeMaterialLoaderUtils };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/three-stdlib/loaders/NodeMaterialLoader.js"],"names":["Loader","FileLoader","Nodes","NodeMaterialLoader","constructor","manager","library","nodes","materials","passes","names","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","text","parse","JSON","getObjectByName","uuid","getObjectById","getNode","object","console","warn","resolve","json","test","Array","isArray","i","length","prop","declare","node","nodeType","name","type","material","pass","copy","NodeMaterialLoaderUtils","replaceUUIDObject","value","recursive","undefined","keys","Object","key","replaceUUID"],"mappings":"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","sourcesContent":["import { Loader, FileLoader } from 'three';\nimport * as Nodes from '../nodes/Nodes.js';\n\nclass NodeMaterialLoader extends Loader {\n  constructor(manager, library = {}) {\n    super(manager);\n    this.nodes = {};\n    this.materials = {};\n    this.passes = {};\n    this.names = {};\n    this.library = library;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n    return this;\n  }\n\n  getObjectByName(uuid) {\n    return this.names[uuid];\n  }\n\n  getObjectById(uuid) {\n    return this.library[uuid] || this.nodes[uuid] || this.materials[uuid] || this.passes[uuid] || this.names[uuid];\n  }\n\n  getNode(uuid) {\n    const object = this.getObjectById(uuid);\n\n    if (!object) {\n      console.warn('Node \"' + uuid + '\" not found.');\n    }\n\n    return object;\n  }\n\n  resolve(json) {\n    switch (typeof json) {\n      case 'boolean':\n      case 'number':\n        return json;\n\n      case 'string':\n        if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i.test(json) || this.library[json]) {\n          return this.getNode(json);\n        }\n\n        return json;\n\n      default:\n        if (Array.isArray(json)) {\n          for (let i = 0; i < json.length; i++) {\n            json[i] = this.resolve(json[i]);\n          }\n        } else {\n          for (const prop in json) {\n            if (prop === 'uuid') continue;\n            json[prop] = this.resolve(json[prop]);\n          }\n        }\n\n    }\n\n    return json;\n  }\n\n  declare(json) {\n    let uuid, node, object;\n\n    for (uuid in json.nodes) {\n      node = json.nodes[uuid];\n      object = new Nodes[node.nodeType + 'Node']();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.nodes[uuid] = object;\n    }\n\n    for (uuid in json.materials) {\n      node = json.materials[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.materials[uuid] = object;\n    }\n\n    for (uuid in json.passes) {\n      node = json.passes[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.passes[uuid] = object;\n    }\n\n    if (json.material) this.material = this.materials[json.material];\n    if (json.pass) this.pass = this.passes[json.pass];\n    return json;\n  }\n\n  parse(json) {\n    let uuid;\n    json = this.resolve(this.declare(json));\n\n    for (uuid in json.nodes) {\n      this.nodes[uuid].copy(json.nodes[uuid]);\n    }\n\n    for (uuid in json.materials) {\n      this.materials[uuid].copy(json.materials[uuid]);\n    }\n\n    for (uuid in json.passes) {\n      this.passes[uuid].copy(json.passes[uuid]);\n    }\n\n    return this.material || this.pass || this;\n  }\n\n}\n\nclass NodeMaterialLoaderUtils {\n  static replaceUUIDObject(object, uuid, value, recursive) {\n    recursive = recursive !== undefined ? recursive : true;\n    if (typeof uuid === 'object') uuid = uuid.uuid;\n\n    if (typeof object === 'object') {\n      const keys = Object.keys(object);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (recursive) {\n          object[key] = this.replaceUUIDObject(object[key], uuid, value);\n        }\n\n        if (key === uuid) {\n          object[uuid] = object[key];\n          delete object[key];\n        }\n      }\n    }\n\n    return object === uuid ? value : object;\n  }\n\n  static replaceUUID(json, uuid, value) {\n    this.replaceUUIDObject(json, uuid, value, false);\n    this.replaceUUIDObject(json.nodes, uuid, value);\n    this.replaceUUIDObject(json.materials, uuid, value);\n    this.replaceUUIDObject(json.passes, uuid, value);\n    this.replaceUUIDObject(json.library, uuid, value, false);\n    return json;\n  }\n\n}\n\nexport { NodeMaterialLoader, NodeMaterialLoaderUtils };\n"]},"metadata":{},"sourceType":"module"}