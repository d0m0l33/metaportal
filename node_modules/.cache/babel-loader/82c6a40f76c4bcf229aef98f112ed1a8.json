{"ast":null,"code":"import _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"speed\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nvar DistortMaterialImpl = /*#__PURE__*/function (_MeshPhysicalMaterial) {\n  _inherits(DistortMaterialImpl, _MeshPhysicalMaterial);\n\n  var _super = _createSuper(DistortMaterialImpl);\n\n  function DistortMaterialImpl() {\n    var _this;\n\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DistortMaterialImpl);\n\n    _this = _super.call(this, parameters);\n\n    _this.setValues(parameters);\n\n    _this._time = {\n      value: 0\n    };\n    _this._distort = {\n      value: 0.4\n    };\n    _this._radius = {\n      value: 1\n    };\n    return _this;\n  }\n\n  _createClass(DistortMaterialImpl, [{\n    key: \"onBeforeCompile\",\n    value: function onBeforeCompile(shader) {\n      shader.uniforms.time = this._time;\n      shader.uniforms.radius = this._radius;\n      shader.uniforms.distort = this._distort;\n      shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \".concat(distort, \"\\n      \").concat(shader.vertexShader, \"\\n    \");\n      shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      return this._time.value;\n    },\n    set: function set(v) {\n      this._time.value = v;\n    }\n  }, {\n    key: \"distort\",\n    get: function get() {\n      return this._distort.value;\n    },\n    set: function set(v) {\n      this._distort.value = v;\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this._radius.value;\n    },\n    set: function set(v) {\n      this._radius.value = v;\n    }\n  }]);\n\n  return DistortMaterialImpl;\n}(MeshPhysicalMaterial);\n\nvar MeshDistortMaterial = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$speed = _ref.speed,\n      speed = _ref$speed === void 0 ? 1 : _ref$speed,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(function () {\n    return new DistortMaterialImpl();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      material = _React$useState2[0];\n\n  useFrame(function (state) {\n    return material && (material.time = state.clock.getElapsedTime() * speed);\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"names":["_extends","React","MeshPhysicalMaterial","useFrame","distort","DistortMaterialImpl","parameters","setValues","_time","value","_distort","_radius","shader","uniforms","time","radius","vertexShader","replace","v","MeshDistortMaterial","forwardRef","ref","speed","props","useState","material","state","clock","getElapsedTime","createElement","dispose","undefined","object","attach"],"mappings":";;;;;;;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,sCAApB;;IAEMC,mB;;;;;AACJ,iCAA6B;AAAA;;AAAA,QAAjBC,UAAiB,uEAAJ,EAAI;;AAAA;;AAC3B,8BAAMA,UAAN;;AACA,UAAKC,SAAL,CAAeD,UAAf;;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,UAAKC,QAAL,GAAgB;AACdD,MAAAA,KAAK,EAAE;AADO,KAAhB;AAGA,UAAKE,OAAL,GAAe;AACbF,MAAAA,KAAK,EAAE;AADM,KAAf;AAT2B;AAY5B;;;;WAED,yBAAgBG,MAAhB,EAAwB;AACtBA,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,KAAKN,KAA5B;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAAyB,KAAKJ,OAA9B;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBT,OAAhB,GAA0B,KAAKM,QAA/B;AACAE,MAAAA,MAAM,CAACI,YAAP,2GAIIZ,OAJJ,qBAKIQ,MAAM,CAACI,YALX;AAOAJ,MAAAA,MAAM,CAACI,YAAP,GAAsBJ,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4B,yBAA5B,mNAAtB;AAKD;;;SAED,eAAW;AACT,aAAO,KAAKT,KAAL,CAAWC,KAAlB;AACD,K;SAED,aAASS,CAAT,EAAY;AACV,WAAKV,KAAL,CAAWC,KAAX,GAAmBS,CAAnB;AACD;;;SAED,eAAc;AACZ,aAAO,KAAKR,QAAL,CAAcD,KAArB;AACD,K;SAED,aAAYS,CAAZ,EAAe;AACb,WAAKR,QAAL,CAAcD,KAAd,GAAsBS,CAAtB;AACD;;;SAED,eAAa;AACX,aAAO,KAAKP,OAAL,CAAaF,KAApB;AACD,K;SAED,aAAWS,CAAX,EAAc;AACZ,WAAKP,OAAL,CAAaF,KAAb,GAAqBS,CAArB;AACD;;;;EAvD+BhB,oB;;AA2DlC,IAAMiB,mBAAmB,GAAG,aAAalB,KAAK,CAACmB,UAAN,CAAiB,gBAGvDC,GAHuD,EAG/C;AAAA,wBAFTC,KAES;AAAA,MAFTA,KAES,2BAFD,CAEC;AAAA,MADNC,KACM;;AACT,wBAAmBtB,KAAK,CAACuB,QAAN,CAAe;AAAA,WAAM,IAAInB,mBAAJ,EAAN;AAAA,GAAf,CAAnB;AAAA;AAAA,MAAOoB,QAAP;;AACAtB,EAAAA,QAAQ,CAAC,UAAAuB,KAAK;AAAA,WAAID,QAAQ,KAAKA,QAAQ,CAACX,IAAT,GAAgBY,KAAK,CAACC,KAAN,CAAYC,cAAZ,KAA+BN,KAApD,CAAZ;AAAA,GAAN,CAAR;AACA,SAAO,aAAarB,KAAK,CAAC4B,aAAN,CAAoB,WAApB,EAAiC7B,QAAQ,CAAC;AAC5D8B,IAAAA,OAAO,EAAEC,SADmD;AAE5DC,IAAAA,MAAM,EAAEP,QAFoD;AAG5DJ,IAAAA,GAAG,EAAEA,GAHuD;AAI5DY,IAAAA,MAAM,EAAE;AAJoD,GAAD,EAK1DV,KAL0D,CAAzC,CAApB;AAMD,CAZwC,CAAzC;AAcA,SAASJ,mBAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"]},"metadata":{},"sourceType":"module"}