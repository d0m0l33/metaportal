{"ast":null,"code":"import _classCallCheck from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Loader, FileLoader } from 'three';\nimport { parse as _parse } from 'opentype.js';\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(TTFLoader, _Loader);\n\n  var _super = _createSuper(TTFLoader);\n\n  function TTFLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, TTFLoader);\n\n    _this = _super.call(this, manager);\n    _this.reversed = false;\n    return _this;\n  }\n\n  _createClass(TTFLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (buffer) {\n        try {\n          onLoad(_parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(arraybuffer) {\n      function convert(font, reversed) {\n        var round = Math.round;\n        var glyphs = {};\n        var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n        var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n        var unicodes = Object.keys(glyphIndexMap);\n\n        for (var i = 0; i < unicodes.length; i++) {\n          var unicode = unicodes[i];\n          var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n          if (unicode !== undefined) {\n            (function () {\n              var token = {\n                ha: round(glyph.advanceWidth * scale),\n                x_min: round(glyph.xMin * scale),\n                x_max: round(glyph.xMax * scale),\n                o: ''\n              };\n\n              if (reversed) {\n                glyph.path.commands = reverseCommands(glyph.path.commands);\n              }\n\n              glyph.path.commands.forEach(function (command) {\n                if (command.type.toLowerCase() === 'c') {\n                  command.type = 'b';\n                }\n\n                token.o += command.type.toLowerCase() + ' ';\n\n                if (command.x !== undefined && command.y !== undefined) {\n                  token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n                }\n\n                if (command.x1 !== undefined && command.y1 !== undefined) {\n                  token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n                }\n\n                if (command.x2 !== undefined && command.y2 !== undefined) {\n                  token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n                }\n              });\n              glyphs[String.fromCodePoint(glyph.unicode)] = token;\n            })();\n          }\n        }\n\n        return {\n          glyphs: glyphs,\n          familyName: font.getEnglishName('fullName'),\n          ascender: round(font.ascender * scale),\n          descender: round(font.descender * scale),\n          underlinePosition: font.tables.post.underlinePosition,\n          underlineThickness: font.tables.post.underlineThickness,\n          boundingBox: {\n            xMin: font.tables.head.xMin,\n            xMax: font.tables.head.xMax,\n            yMin: font.tables.head.yMin,\n            yMax: font.tables.head.yMax\n          },\n          resolution: 1000,\n          original_font_information: font.tables.name\n        };\n      }\n\n      function reverseCommands(commands) {\n        var paths = [];\n        var path;\n        commands.forEach(function (c) {\n          if (c.type.toLowerCase() === 'm') {\n            path = [c];\n            paths.push(path);\n          } else if (c.type.toLowerCase() !== 'z') {\n            path.push(c);\n          }\n        });\n        var reversed = [];\n        paths.forEach(function (p) {\n          var result = {\n            type: 'm',\n            x: p[p.length - 1].x,\n            y: p[p.length - 1].y\n          };\n          reversed.push(result);\n\n          for (var i = p.length - 1; i > 0; i--) {\n            var command = p[i];\n            var _result = {\n              type: command.type\n            };\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              _result.x1 = command.x2;\n              _result.y1 = command.y2;\n              _result.x2 = command.x1;\n              _result.y2 = command.y1;\n            } else if (command.x1 !== undefined && command.y1 !== undefined) {\n              _result.x1 = command.x1;\n              _result.y1 = command.y1;\n            }\n\n            _result.x = p[i - 1].x;\n            _result.y = p[i - 1].y;\n            reversed.push(_result);\n          }\n        });\n        return reversed;\n      }\n\n      return convert(_parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n    }\n  }]);\n\n  return TTFLoader;\n}(Loader);\n\nexport { TTFLoader };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/three-stdlib/loaders/TTFLoader.js"],"names":["Loader","FileLoader","parse","TTFLoader","manager","reversed","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","buffer","e","console","error","itemError","arraybuffer","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","Object","keys","i","length","unicode","glyph","undefined","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","forEach","command","type","toLowerCase","x","y","x1","y1","x2","y2","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","paths","c","push","p","result"],"mappings":"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","sourcesContent":["import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nclass TTFLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.reversed = false;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(arraybuffer) {\n    function convert(font, reversed) {\n      const round = Math.round;\n      const glyphs = {};\n      const scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      const glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      const unicodes = Object.keys(glyphIndexMap);\n\n      for (let i = 0; i < unicodes.length; i++) {\n        const unicode = unicodes[i];\n        const glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          const token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      const paths = [];\n      let path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      const reversed = [];\n      paths.forEach(function (p) {\n        const result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (let i = p.length - 1; i > 0; i--) {\n          const command = p[i];\n          const result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n\n}\n\nexport { TTFLoader };\n"]},"metadata":{},"sourceType":"module"}