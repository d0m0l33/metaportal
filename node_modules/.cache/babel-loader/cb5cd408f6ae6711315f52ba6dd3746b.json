{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import{formatUnits}from'@ethersproject/units';import uniswapToken from'@uniswap/default-token-list';import{useContractFunction,useEthers}from'@usedapp/core';import React,{useEffect,useState}from'react';import styled from'styled-components';import{Colors}from'../../global/styles';import{TextBold}from'../../typography/Text';import{Col,Container,Row}from'react-bootstrap';import{TokenSVGIcon}from'./TokenSVGIcon';import{useAppSelector,useAppDispatch}from'../../hooks';import{updatedSelectedItem}from'./SelectedItemSlice';import{ethers,utils}from'ethers';import axios from'axios';import{Contract}from'@ethersproject/contracts';// import { useContractFunction } from '../../workarounds/useContractFunction'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RANDOM_VISOR_COLORS=['black','white','grey','green','blue','hot-pink','purple','silver','bronze','gold'];var ALL_BADGES={metaPortal:{accountCreation:{greaterThan:[{value:0,badgeName:'Space Cadet'},{value:0,badgeName:'WAGMI Rank 1'}]},successfulTransactions:{greaterThan:[{value:25,badgeName:'Explorer Rank 1'},{value:50,badgeName:'Explorer Rank 2'},{value:75,badgeName:'Explorer Rank 3'},{value:100,badgeName:'Sky Captain Rank 1'}]}}};var initBadges=[];export var getTransactionsFor=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(signerAddress){var COVALENT_API_KEY,COVALENT_MAINNET,transactionsForAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('signer address : ',signerAddress);COVALENT_API_KEY=\"ckey_4aed01d0d6e248a7a4ab27acb8a\";COVALENT_MAINNET={url:\"https://api.covalenthq.com/v1/1/\"};transactionsForAddress=\"\".concat(COVALENT_MAINNET.url,\"address/\").concat(signerAddress,\"/transactions_v2/?key=\").concat(COVALENT_API_KEY);// Make a request for a user with a given ID\nreturn _context.abrupt(\"return\",axios.get(transactionsForAddress).then(function(response){// handle success\nreturn response;}).catch(function(error){// handle error\nconsole.log(error);return null;}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function getTransactionsFor(_x){return _ref.apply(this,arguments);};}();export var VisorsABI=[\"function requestMint(uint256 visorId) public\"];export var parseResponseForItems=function parseResponseForItems(response){if(!response||!response.data||!response.data.data){return null;}return response.data.data.items;};export var getSuccessfulTransactionCount=function getSuccessfulTransactionCount(items){var successCount=0;items.forEach(function(item){if(item.successful===true){successCount++;}});return successCount;};export var parseForBadgesForTypes=function parseForBadgesForTypes(values){return[].concat(_toConsumableArray(extractBadgesForBadgeCriteria('successfulTransactions',values[0])),_toConsumableArray(extractBadgesForBadgeCriteria('accountCreation',1)));};export var extractBadgesForBadgeCriteria=function extractBadgesForBadgeCriteria(badgeType,valueAchieved){var successCount=0;var extractedBadges=[];ALL_BADGES['metaPortal'][badgeType]['greaterThan'].forEach(function(badgeItem){if(valueAchieved>badgeItem.value){extractedBadges.push(badgeItem);}});return extractedBadges;};function getTokenList(chainId){return uniswapToken.tokens.filter(function(token){return token.chainId==chainId;});}export function TokensList(){var provider=new ethers.providers.Web3Provider(window.ethereum);var signer=provider.getSigner();var _useEthers=useEthers(),chainId=_useEthers.chainId,account=_useEthers.account;console.log('chainId : ',chainId);// const balances = useTokensBalance(tokenList, account);\nvar _useState=useState(initBadges),_useState2=_slicedToArray(_useState,2),badges=_useState2[0],setBadges=_useState2[1];var mountedRef=true;var visorInterface=new utils.Interface(VisorsABI);var VisorsContractAddress='0x2f72199e3721c3b1eeb2913089c14c72ee9036b0';var contract=new Contract(VisorsContractAddress,visorInterface);var _useContractFunction=useContractFunction(contract,'requestMint',{transactionName:'requestMint'}),send=_useContractFunction.send,state=_useContractFunction.state,events=_useContractFunction.events;// const { sendTransaction, state } = useSendTransaction({ transactionName: 'Send Ethereum' })\nvar doMint=function doMint(visorId){console.log('mint.... : ',visorId);send({value:utils.parseEther('1'),arguments:['1']});// sendTransaction({ to: '0xa284A4F80E8367391fddDBCFb820c7d98f112b28', value: utils.parseEther(visorId.toString()) })\n};useEffect(function(){var doAsync=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:init();case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function doAsync(){return _ref2.apply(this,arguments);};}();if(mountedRef){doAsync();}return function(){mountedRef=false;};},[mountedRef]);var init=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,items,successCount,badges;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log('account : ',account);if(!(!account||account===undefined)){_context3.next=3;break;}return _context3.abrupt(\"return\");case 3:console.log('awaiting response....');_context3.next=6;return getTransactionsFor(account);case 6:response=_context3.sent;console.log('axios : ',response);if(response){_context3.next=10;break;}return _context3.abrupt(\"return\");case 10:items=parseResponseForItems(response);if(items){_context3.next=13;break;}return _context3.abrupt(\"return\");case 13:successCount=getSuccessfulTransactionCount(items);console.log('successes : ',successCount);badges=parseForBadgesForTypes([successCount]);console.log('badges : ',badges);loadBadges(badges);case 18:case\"end\":return _context3.stop();}}},_callee3);}));return function init(){return _ref3.apply(this,arguments);};}();var selectedItemIndex=useAppSelector(function(state){return state.selectedItem.index;});var dispatch=useAppDispatch();var handleItemSelect=function handleItemSelect(index,balance,holders,name,address){dispatch(updatedSelectedItem({index:index,balance:balance,holders:holders,name:name,address:address,color:index>=0?RANDOM_VISOR_COLORS[index]:null}));};var loadBadges=function loadBadges(transactionItems){setBadges(transactionItems);};return/*#__PURE__*/_jsx(\"div\",{children:badges.length===0?/*#__PURE__*/_jsx(\"div\",{children:\"Not badges available...\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Row,{children:badges.map(function(badge,idx){return/*#__PURE__*/_jsx(Col,{sm:4,md:2,lg:2,children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(TokenItem,{children:[/*#__PURE__*/_jsxs(TokenIconContainer,{onClick:function onClick(){return handleItemSelect(idx,idx,11,\"Element \".concat(idx),'address');},children:[/*#__PURE__*/_jsx(TokenSVGIcon,{src:'',alt:''}),/*#__PURE__*/_jsx(TokenBalance,{children:formatUnits(0,0)})]}),/*#__PURE__*/_jsx(TokenName,{children:badge.badgeName}),/*#__PURE__*/_jsx(MintButton,{onClick:function onClick(){return doMint(idx);},children:\"Mint\"})]})},\"SubSection-\".concat(idx))})})},\"parentSection-\".concat(idx));})})})});}export var Button=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-flow: column;\\n  grid-column-gap: 8px;\\n  align-items: center;\\n  width: fit-content;\\n  height: 40px;\\n  font-size: 14px;\\n  line-height: 24px;\\n  font-weight: 700;\\n  text-transform: uppercase;\\n  letter-spacing: 0.1em;\\n  color: \",\";\\n  border: 1px solid \",\";\\n  background-color: transparent;\\n  cursor: pointer;\\n\\n  &:hover,\\n  &:focus {\\n    background-color: \",\";\\n    color: \",\";\\n  }\\n\"])),Colors.Black[900],Colors.Black[900],Colors.Black[900],Colors.Yellow[100]);var MintButton=styled(Button)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"])),Colors.Yellow[100]);var List=styled.ul(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n\"])));var ListItem=styled.li(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n\"])));var TokenItem=styled.li(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));var TokenIconContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  width: 120px;\\n  height:120px;\\n  margin: 0.2em;\\n  border: 1px solid #ebebeb};\\n  background: rgb(60, 60, 60);\\n  background: rgba(149, 149, 149, 0.4);\\n  position: relative;\\n\\n  &:hover,\\n  &:focus, \\n  &:active {\\n    color: \",\";\\n    border-width: medium;\\n    border-color: \",\";\\n  }\\n\"])),Colors.Yellow[100],Colors.Yellow[100]);var TokenName=styled(TextBold)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-left: 4px;\\n  font-size: 12px;\\n\\n\"])));var TokenTicker=styled(TextBold)(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  grid-area: ticker;\\n  color: \",\";\\n\"])),Colors.Gray[600]);var TokenBalance=styled(TextBold)(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  padding:0.25em;\\n  font-size: 15px;\\n\"])));","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/TokensList/TokensList.tsx"],"names":["formatUnits","uniswapToken","useContractFunction","useEthers","React","useEffect","useState","styled","Colors","TextBold","Col","Container","Row","TokenSVGIcon","useAppSelector","useAppDispatch","updatedSelectedItem","ethers","utils","axios","Contract","RANDOM_VISOR_COLORS","ALL_BADGES","metaPortal","accountCreation","greaterThan","value","badgeName","successfulTransactions","initBadges","getTransactionsFor","signerAddress","console","log","COVALENT_API_KEY","COVALENT_MAINNET","url","transactionsForAddress","get","then","response","catch","error","VisorsABI","parseResponseForItems","data","items","getSuccessfulTransactionCount","successCount","forEach","item","successful","parseForBadgesForTypes","values","extractBadgesForBadgeCriteria","badgeType","valueAchieved","extractedBadges","badgeItem","push","getTokenList","chainId","tokens","filter","token","TokensList","provider","providers","Web3Provider","window","ethereum","signer","getSigner","account","badges","setBadges","mountedRef","visorInterface","Interface","VisorsContractAddress","contract","transactionName","send","state","events","doMint","visorId","parseEther","arguments","doAsync","init","undefined","loadBadges","selectedItemIndex","selectedItem","index","dispatch","handleItemSelect","balance","holders","name","address","color","transactionItems","length","map","badge","idx","Button","button","Black","Yellow","MintButton","List","ul","ListItem","li","TokenItem","TokenIconContainer","div","TokenName","TokenTicker","Gray","TokenBalance"],"mappings":"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","sourcesContent":["import { formatUnits } from '@ethersproject/units'\nimport uniswapToken from '@uniswap/default-token-list'\nimport { ChainId, ERC20Interface, useContractCall, useContractCalls, useContractFunction, useEthers, useSendTransaction } from '@usedapp/core'\nimport React, { useEffect, useState } from 'react'\nimport { ERC1155Interface, VISORSInterface } from '../../interfaces/interfaces'\nimport styled from 'styled-components'\nimport { Colors } from '../../global/styles'\nimport { TextBold } from '../../typography/Text'\nimport { TokenIcon } from './TokenIcon'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { TokenSVGIcon } from './TokenSVGIcon'\nimport { useAppSelector, useAppDispatch } from '../../hooks'\nimport { increment } from '../../features/counter/counterSlice'\nimport { updatedSelectedItem } from './SelectedItemSlice'\n\nimport { ContractFactory, ethers, utils } from 'ethers'\nimport axios, { AxiosResponse } from 'axios'\nimport {Contract} from '@ethersproject/contracts'\n\n// import { useContractFunction } from '../../workarounds/useContractFunction'\n\ndeclare const window: any;\n\n\n\n\nconst RANDOM_VISOR_COLORS = [\n  'black',\n  'white',\n  'grey',\n  'green',\n  'blue',\n  'hot-pink',\n  'purple',\n  'silver',\n  'bronze',\n  'gold'\n]\n\n\nconst ALL_BADGES: any = {\n  metaPortal : {\n    accountCreation : {\n      greaterThan: [\n        {\n          value: 0,\n          badgeName: 'Space Cadet',\n        },\n        {\n          value: 0,\n          badgeName: 'WAGMI Rank 1',\n        },\n      ]\n    },\n    successfulTransactions : {\n\n      greaterThan: [\n        {\n          value: 25,\n          badgeName: 'Explorer Rank 1',\n        },\n        {\n          value: 50,\n          badgeName: 'Explorer Rank 2',\n        },\n        {\n          value: 75,\n          badgeName: 'Explorer Rank 3',\n        },\n        {\n          value: 100,\n          badgeName: 'Sky Captain Rank 1',\n        }\n      ]\n    }\n  }\n\n}\n\nconst initBadges: any[] = [];\n\nexport const getTransactionsFor = async (signerAddress: string): Promise<AxiosResponse|null>=> {\n  console.log('signer address : ',signerAddress)\n  const COVALENT_API_KEY = \"ckey_4aed01d0d6e248a7a4ab27acb8a\"\n  const COVALENT_MAINNET = {\n    url: \"https://api.covalenthq.com/v1/1/\",\n  }\n\n  const transactionsForAddress = \n  `${COVALENT_MAINNET.url}address/${signerAddress}/transactions_v2/?key=${COVALENT_API_KEY}`\n\n\n  // Make a request for a user with a given ID\n  return axios.get(transactionsForAddress)\n    .then(function (response) {\n      // handle success\n      return response\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n\n      return null;\n    });\n}\n\nexport const VisorsABI = [\n  \"function requestMint(uint256 visorId) public\",\n];\n\nexport const parseResponseForItems =(response: AxiosResponse): (any[]|null) => {\n  if(!response || !response.data || !response.data.data) {\n    return null;\n  }\n  return response.data.data.items;\n}\n\nexport const getSuccessfulTransactionCount =(items: any[]): number => {\n  let successCount = 0;\n  items.forEach((item) => {\n    if(item.successful === true) {\n      successCount++;\n    }\n  });\n  return successCount;\n}\n\n\nexport const parseForBadgesForTypes =(values: number[]): any[] => {\n  return [\n    ...extractBadgesForBadgeCriteria('successfulTransactions',values[0]),\n    ...extractBadgesForBadgeCriteria('accountCreation',1)\n  ]\n}\n\n\nexport const extractBadgesForBadgeCriteria = (badgeType: string, valueAchieved: number): any[] => {\n  let successCount = 0;\n  let extractedBadges: any[] = [];\n  \n  ALL_BADGES['metaPortal'][badgeType]['greaterThan'].forEach((badgeItem: any) => {\n    if(valueAchieved > badgeItem.value ) {\n      extractedBadges.push(badgeItem);\n    }\n  });\n  return extractedBadges;\n}\n\nfunction getTokenList(chainId?: ChainId) {\n  return uniswapToken.tokens.filter((token) => token.chainId == chainId)\n}\n\n\n\nexport function TokensList() {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner()\n\n  const { chainId, account, } = useEthers();\n  console.log('chainId : ',chainId)\n  // const balances = useTokensBalance(tokenList, account);\n  const [badges, setBadges] = useState(initBadges);\n  let mountedRef = true;\n  const visorInterface = new utils.Interface(VisorsABI)\n\n  const VisorsContractAddress = '0x2f72199e3721c3b1eeb2913089c14c72ee9036b0'\n  const contract = new Contract(VisorsContractAddress, visorInterface);\n  const { send, state, events } = useContractFunction(contract, 'requestMint', { transactionName: 'requestMint' })\n  // const { sendTransaction, state } = useSendTransaction({ transactionName: 'Send Ethereum' })\n\n\n\n  const doMint = (visorId: number) => {\n    \n    console.log('mint.... : ',visorId)\n    send({ value: utils.parseEther('1'), arguments: ['1']});\n    // sendTransaction({ to: '0xa284A4F80E8367391fddDBCFb820c7d98f112b28', value: utils.parseEther(visorId.toString()) })\n\n  }  \n  \n\n\n  useEffect(() => {\n    const doAsync = async () => {\n      init();\n    }\n    if(mountedRef) {\n      doAsync();\n    }\n    return () => {\n      mountedRef = false;\n    }; \n\n\n  }, [mountedRef]);\n\n  const init = async () => {\n    console.log('account : ',account);\n    if(!account || account === undefined){\n      return;\n    }\n    console.log('awaiting response....')\n   const response =  await getTransactionsFor(account);  \n   console.log('axios : ',response);\n\n    if(!response){\n      return;\n    }\n\n    const items = parseResponseForItems(response);\n    if(!items) {\n      return;\n    }\n    const successCount = getSuccessfulTransactionCount(items);\n\n    console.log('successes : ',successCount);\n    const badges = parseForBadgesForTypes([successCount]);\n    console.log('badges : ',badges);\n    loadBadges(badges);\n  }\n\n    const selectedItemIndex = useAppSelector((state) => {\n      return state.selectedItem.index;\n    })\n    const dispatch = useAppDispatch();\n\n    const handleItemSelect =(index: number, balance: number, holders: number,name: string, address: string) =>  {\n    \n      dispatch (updatedSelectedItem(\n        {\n          index: index,\n          balance: balance,\n          holders: holders,\n          name: name,\n          address: address,\n          color: index >= 0 ? RANDOM_VISOR_COLORS[index] : null,\n        }\n      ))\n\n    }\n\n\n    const loadBadges =(transactionItems: any[]): void => {\n      setBadges(transactionItems);\n    }\n\n\n  return (\n    <div>\n      {badges.length === 0 ? (<div>Not badges available...</div> ): (\n        <div>\n        <Row>\n        {badges.map((badge: any, idx:number) => {\n              return (\n              <Col sm={4} md={2} lg={2} key={`parentSection-${idx}`}> \n              <Container>\n              <Row>\n                  <Col key={`SubSection-${idx}`}>\n                    <TokenItem > \n                    <TokenIconContainer onClick={() => handleItemSelect(idx,idx ,11,`Element ${idx}`,'address')}>\n                      <TokenSVGIcon src={''} alt={''}></TokenSVGIcon>\n                      <TokenBalance> \n                        {formatUnits(0,0)}\n                      </TokenBalance>\n                    </TokenIconContainer>\n                    <TokenName>{badge.badgeName}</TokenName>\n                    <MintButton \n\n                      onClick={() => doMint(idx)}\n                    \n                    >Mint</MintButton>\n                  </TokenItem>\n                  </Col>\n              </Row>\n              </Container>\n              </Col>\n          )})}\n        </Row>\n      </div>\n    )}\n    </div>\n  )\n}\n\n\nexport const Button = styled.button`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 8px;\n  align-items: center;\n  width: fit-content;\n  height: 40px;\n  font-size: 14px;\n  line-height: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  color: ${Colors.Black[900]};\n  border: 1px solid ${Colors.Black[900]};\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${Colors.Black[900]};\n    color: ${Colors.Yellow[100]};\n  }\n`\n\nconst MintButton = styled(Button)`\n  background-color: ${Colors.Yellow[100]};\n`\n\nconst List = styled.ul`\n`\n\nconst ListItem = styled.li`\n`\n\nconst TokenItem = styled.li`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TokenIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 120px;\n  height:120px;\n  margin: 0.2em;\n  border: 1px solid #ebebeb};\n  background: rgb(60, 60, 60);\n  background: rgba(149, 149, 149, 0.4);\n  position: relative;\n\n  &:hover,\n  &:focus, \n  &:active {\n    color: ${Colors.Yellow[100]};\n    border-width: medium;\n    border-color: ${Colors.Yellow[100]};\n  }\n`\n\nconst TokenName = styled(TextBold)`\n  margin-left: 4px;\n  font-size: 12px;\n\n`\n\nconst TokenTicker = styled(TextBold)`\n  grid-area: ticker;\n  color: ${Colors.Gray[600]};\n`\n\nconst TokenBalance = styled(TextBold)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding:0.25em;\n  font-size: 15px;\n`"]},"metadata":{},"sourceType":"module"}