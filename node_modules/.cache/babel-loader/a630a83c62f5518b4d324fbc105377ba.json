{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17;import{getExplorerTransactionLink,useNotifications,useTransactions,getStoredTransactionState,shortenTransactionHash}from'@usedapp/core';import React from'react';import styled from'styled-components';import{TextBold}from'../../typography/Text';import{ContentBlock}from'../base/base';import{CheckIcon,ClockIcon,ExclamationIcon,ShareIcon,UnwrapIcon,WalletIcon,WrapIcon,SpinnerIcon}from'./Icons';import{Colors,Shadows}from'../../global/styles';import{AnimatePresence,motion}from'framer-motion';import{formatEther}from'@ethersproject/units';import{BigNumber}from'ethers';import{Link}from'../base/Link';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var formatter=new Intl.NumberFormat('en-us',{minimumFractionDigits:0,maximumFractionDigits:3});var formatBalance=function formatBalance(balance){return formatter.format(parseFloat(formatEther(balance!==null&&balance!==void 0?balance:BigNumber.from('0'))));};var TableWrapper=function TableWrapper(_ref){var children=_ref.children,title=_ref.title;return/*#__PURE__*/_jsxs(SmallContentBlock,{children:[/*#__PURE__*/_jsx(TitleRow,{children:title}),/*#__PURE__*/_jsx(Table,{children:children})]});};var DateCell=function DateCell(_ref2){var date=_ref2.date,className=_ref2.className;var dateObject=new Date(date);var formattedDate=dateObject.toLocaleDateString();var formattedTime=dateObject.toLocaleTimeString('en-US',{hour:'numeric',minute:'numeric',hour12:true});return/*#__PURE__*/_jsxs(DateRow,{className:className,children:[/*#__PURE__*/_jsx(DateDisplay,{children:formattedDate}),/*#__PURE__*/_jsx(HourDisplay,{children:formattedTime})]});};var TransactionLink=function TransactionLink(_ref3){var transaction=_ref3.transaction;return/*#__PURE__*/_jsx(_Fragment,{children:transaction&&/*#__PURE__*/_jsxs(Link,{href:getExplorerTransactionLink(transaction.hash,transaction.chainId),target:\"_blank\",rel:\"noopener noreferrer\",children:[\"View on Etherscan\",/*#__PURE__*/_jsx(LinkIconWrapper,{children:/*#__PURE__*/_jsx(ShareIcon,{})})]})});};var notificationContent={transactionFailed:{title:'Transaction failed',icon:/*#__PURE__*/_jsx(ExclamationIcon,{})},transactionStarted:{title:'Transaction started',icon:/*#__PURE__*/_jsx(ClockIcon,{})},transactionSucceed:{title:'Transaction succeed',icon:/*#__PURE__*/_jsx(CheckIcon,{})},walletConnected:{title:'Wallet connected',icon:/*#__PURE__*/_jsx(WalletIcon,{})}};var ListElement=function ListElement(_ref4){var transaction=_ref4.transaction,icon=_ref4.icon,title=_ref4.title,date=_ref4.date;return/*#__PURE__*/_jsxs(ListElementWrapper,{layout:true,initial:{opacity:0,y:-50},animate:{opacity:1,y:0},exit:{opacity:0},children:[/*#__PURE__*/_jsx(ListIconContainer,{children:icon}),/*#__PURE__*/_jsxs(ListDetailsWrapper,{children:[/*#__PURE__*/_jsx(TextBold,{children:title}),/*#__PURE__*/_jsx(TransactionLink,{transaction:transaction})]}),/*#__PURE__*/_jsx(NotificationDate,{date:date})]});};function TransactionIcon(transaction){if(getStoredTransactionState(transaction)==='Mining'){return/*#__PURE__*/_jsx(SpinnerIcon,{});}else if(getStoredTransactionState(transaction)==='Fail'){return/*#__PURE__*/_jsx(ExclamationIcon,{});}else if(transaction.transactionName==='Unwrap'){return/*#__PURE__*/_jsx(UnwrapIcon,{});}else if(transaction.transactionName==='Wrap'){return/*#__PURE__*/_jsx(WrapIcon,{});}else{return/*#__PURE__*/_jsx(CheckIcon,{});}}export var TransactionsList=function TransactionsList(){var _useTransactions=useTransactions(),transactions=_useTransactions.transactions;return/*#__PURE__*/_jsx(TableWrapper,{title:\"Transactions history\",children:/*#__PURE__*/_jsx(AnimatePresence,{initial:false,children:transactions.map(function(transaction){return/*#__PURE__*/_jsx(ListElement,{transaction:transaction.transaction,title:transaction.transactionName,icon:TransactionIcon(transaction),date:transaction.submittedAt},transaction.transaction.hash);})})});};var NotificationElement=function NotificationElement(_ref5){var transaction=_ref5.transaction,icon=_ref5.icon,title=_ref5.title;return/*#__PURE__*/_jsxs(NotificationWrapper,{layout:true,initial:{opacity:0,y:-50},animate:{opacity:1,y:0},exit:{opacity:0},children:[/*#__PURE__*/_jsx(NotificationIconContainer,{children:icon}),/*#__PURE__*/_jsxs(NotificationDetailsWrapper,{children:[/*#__PURE__*/_jsx(NotificationText,{children:title}),/*#__PURE__*/_jsx(TransactionLink,{transaction:transaction}),/*#__PURE__*/_jsx(TransactionDetails,{children:transaction&&\"\".concat(shortenTransactionHash(transaction===null||transaction===void 0?void 0:transaction.hash),\" #\").concat(transaction.nonce)})]}),transaction&&/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:'auto'},children:[\"- \",formatBalance(transaction.value),\" ETH\"]})]});};export var NotificationsList=function NotificationsList(){var _useNotifications=useNotifications(),notifications=_useNotifications.notifications;return/*#__PURE__*/_jsx(NotificationsWrapper,{children:/*#__PURE__*/_jsx(AnimatePresence,{initial:false,children:notifications.map(function(notification){if('transaction'in notification)return/*#__PURE__*/_jsx(NotificationElement,{icon:notificationContent[notification.type].icon,title:notificationContent[notification.type].title,transaction:notification.transaction,date:Date.now()},notification.id);else return/*#__PURE__*/_jsx(NotificationElement,{icon:notificationContent[notification.type].icon,title:notificationContent[notification.type].title,date:Date.now()},notification.id);})})});};var NotificationText=styled(TextBold)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 20px;\\n  margin-bottom: 5px;\\n\"])));var TransactionDetails=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n\"])));var NotificationWrapper=styled(motion.div)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  background-color: \",\";\\n  box-shadow: \",\";\\n  width: 395px;\\n  border-radius: 10px;\\n  margin: 15px;\\n  padding: 10px 20px 10px 20px;\\n\"])),Colors.White,Shadows.notification);var NotificationsWrapper=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  right: 24px;\\n  bottom: 24px;\\n\"])));var NotificationIconContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: 60px;\\n  height: 60px;\\n  padding: 0px;\\n  margin-right: 20px;\\n\"])));var ListIconContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 48px;\\n  height: 48px;\\n  padding: 12px;\\n  padding: 14px 16px 14px 12px;\\n\"])));var ListElementWrapper=styled(motion.div)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"])));var NotificationDetailsWrapper=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 4px 0;\\n\"])));var ListDetailsWrapper=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  padding: 4px 0;\\n\"])));var Table=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  height: 300px;\\n  overflow: scroll;\\n  padding: 12px;\\n\\n  & > * + * {\\n    margin-top: 12px;\\n  }\\n\"])));var LinkIconWrapper=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  width: 12px;\\n  height: 12px;\\n  margin-left: 8px;\\n\"])));var SmallContentBlock=styled(ContentBlock)(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 0;\\n\"])));var TitleRow=styled(TextBold)(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: baseline;\\n  justify-content: space-between;\\n  border-bottom: \",\" 1px solid;\\n  padding: 16px;\\n  font-size: 18px;\\n\"])),Colors.Gray['300']);var DateRow=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  text-align: end;\\n  padding: 8px;\\n\"])));var NotificationDate=styled(DateCell)(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n\"])));var DateDisplay=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n\"])));var HourDisplay=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: \",\";\\n\"])),Colors.Gray['600']);","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/Transactions/History.tsx"],"names":["getExplorerTransactionLink","useNotifications","useTransactions","getStoredTransactionState","shortenTransactionHash","React","styled","TextBold","ContentBlock","CheckIcon","ClockIcon","ExclamationIcon","ShareIcon","UnwrapIcon","WalletIcon","WrapIcon","SpinnerIcon","Colors","Shadows","AnimatePresence","motion","formatEther","BigNumber","Link","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","TableWrapper","children","title","DateCell","date","className","dateObject","Date","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","hour12","TransactionLink","transaction","hash","chainId","notificationContent","transactionFailed","icon","transactionStarted","transactionSucceed","walletConnected","ListElement","opacity","y","TransactionIcon","transactionName","TransactionsList","transactions","map","submittedAt","NotificationElement","nonce","marginLeft","value","NotificationsList","notifications","notification","type","now","id","NotificationText","TransactionDetails","div","NotificationWrapper","White","NotificationsWrapper","NotificationIconContainer","ListIconContainer","ListElementWrapper","NotificationDetailsWrapper","ListDetailsWrapper","Table","LinkIconWrapper","SmallContentBlock","TitleRow","Gray","DateRow","NotificationDate","DateDisplay","HourDisplay"],"mappings":"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","sourcesContent":["import type { TransactionResponse } from '@ethersproject/providers'\nimport {\n  getExplorerTransactionLink,\n  Notification,\n  useNotifications,\n  useTransactions,\n  getStoredTransactionState,\n  StoredTransaction,\n  shortenTransactionHash,\n} from '@usedapp/core'\nimport React, { ReactElement, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { TextBold } from '../../typography/Text'\nimport { ContentBlock } from '../base/base'\nimport {\n  CheckIcon,\n  ClockIcon,\n  ExclamationIcon,\n  ShareIcon,\n  UnwrapIcon,\n  WalletIcon,\n  WrapIcon,\n  SpinnerIcon,\n} from './Icons'\nimport { Colors, Shadows } from '../../global/styles'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumber } from 'ethers'\nimport { Link } from '../base/Link'\n\ninterface TableWrapperProps {\n  children: ReactNode\n  title: string\n}\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\nconst TableWrapper = ({ children, title }: TableWrapperProps) => (\n  <SmallContentBlock>\n    <TitleRow>{title}</TitleRow>\n    <Table>{children}</Table>\n  </SmallContentBlock>\n)\n\ninterface DateProps {\n  date: number\n  className?: string\n}\n\nconst DateCell = ({ date, className }: DateProps) => {\n  const dateObject = new Date(date)\n  const formattedDate = dateObject.toLocaleDateString()\n  const formattedTime = dateObject.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  })\n\n  return (\n    <DateRow className={className}>\n      <DateDisplay>{formattedDate}</DateDisplay>\n      <HourDisplay>{formattedTime}</HourDisplay>\n    </DateRow>\n  )\n}\n\ninterface TransactionLinkProps {\n  transaction: TransactionResponse | undefined\n}\n\nconst TransactionLink = ({ transaction }: TransactionLinkProps) => (\n  <>\n    {transaction && (\n      <Link\n        href={getExplorerTransactionLink(transaction.hash, transaction.chainId)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        View on Etherscan\n        <LinkIconWrapper>\n          <ShareIcon />\n        </LinkIconWrapper>\n      </Link>\n    )}\n  </>\n)\n\nconst notificationContent: { [key in Notification['type']]: { title: string; icon: ReactElement } } = {\n  transactionFailed: { title: 'Transaction failed', icon: <ExclamationIcon /> },\n  transactionStarted: { title: 'Transaction started', icon: <ClockIcon /> },\n  transactionSucceed: { title: 'Transaction succeed', icon: <CheckIcon /> },\n  walletConnected: { title: 'Wallet connected', icon: <WalletIcon /> },\n}\n\ninterface ListElementProps {\n  icon: ReactElement\n  title: string | undefined\n  transaction?: TransactionResponse\n  date: number\n}\n\nconst ListElement = ({ transaction, icon, title, date }: ListElementProps) => {\n  return (\n    <ListElementWrapper layout initial={{ opacity: 0, y: -50 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0 }}>\n      <ListIconContainer>{icon}</ListIconContainer>\n      <ListDetailsWrapper>\n        <TextBold>{title}</TextBold>\n        <TransactionLink transaction={transaction} />\n      </ListDetailsWrapper>\n      <NotificationDate date={date} />\n    </ListElementWrapper>\n  )\n}\n\nfunction TransactionIcon(transaction: StoredTransaction) {\n  if (getStoredTransactionState(transaction) === 'Mining') {\n    return <SpinnerIcon />\n  } else if (getStoredTransactionState(transaction) === 'Fail') {\n    return <ExclamationIcon />\n  } else if (transaction.transactionName === 'Unwrap') {\n    return <UnwrapIcon />\n  } else if (transaction.transactionName === 'Wrap') {\n    return <WrapIcon />\n  } else {\n    return <CheckIcon />\n  }\n}\n\nexport const TransactionsList = () => {\n  const { transactions } = useTransactions()\n  return (\n    <TableWrapper title=\"Transactions history\">\n      <AnimatePresence initial={false}>\n        {transactions.map((transaction) => (\n          <ListElement\n            transaction={transaction.transaction}\n            title={transaction.transactionName}\n            icon={TransactionIcon(transaction)}\n            key={transaction.transaction.hash}\n            date={transaction.submittedAt}\n          />\n        ))}\n      </AnimatePresence>\n    </TableWrapper>\n  )\n}\n\nconst NotificationElement = ({ transaction, icon, title }: ListElementProps) => {\n  return (\n    <NotificationWrapper layout initial={{ opacity: 0, y: -50 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0 }}>\n      <NotificationIconContainer>{icon}</NotificationIconContainer>\n      <NotificationDetailsWrapper>\n        <NotificationText>{title}</NotificationText>\n        <TransactionLink transaction={transaction} />\n        <TransactionDetails>\n          {transaction && `${shortenTransactionHash(transaction?.hash)} #${transaction.nonce}`}\n        </TransactionDetails>\n      </NotificationDetailsWrapper>\n      {transaction && <div style={{ marginLeft: 'auto' }}>- {formatBalance(transaction.value)} ETH</div>}\n    </NotificationWrapper>\n  )\n}\n\nexport const NotificationsList = () => {\n  const { notifications } = useNotifications()\n  return (\n    <NotificationsWrapper>\n      <AnimatePresence initial={false}>\n        {notifications.map((notification) => {\n          if ('transaction' in notification)\n            return (\n              <NotificationElement\n                key={notification.id}\n                icon={notificationContent[notification.type].icon}\n                title={notificationContent[notification.type].title}\n                transaction={notification.transaction}\n                date={Date.now()}\n              />\n            )\n          else\n            return (\n              <NotificationElement\n                key={notification.id}\n                icon={notificationContent[notification.type].icon}\n                title={notificationContent[notification.type].title}\n                date={Date.now()}\n              />\n            )\n        })}\n      </AnimatePresence>\n    </NotificationsWrapper>\n  )\n}\n\nconst NotificationText = styled(TextBold)`\n  font-size: 20px;\n  margin-bottom: 5px;\n`\n\nconst TransactionDetails = styled.div`\n  font-size: 14px;\n`\n\nconst NotificationWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  background-color: ${Colors.White};\n  box-shadow: ${Shadows.notification};\n  width: 395px;\n  border-radius: 10px;\n  margin: 15px;\n  padding: 10px 20px 10px 20px;\n`\n\nconst NotificationsWrapper = styled.div`\n  position: fixed;\n  right: 24px;\n  bottom: 24px;\n`\n\nconst NotificationIconContainer = styled.div`\n  width: 60px;\n  height: 60px;\n  padding: 0px;\n  margin-right: 20px;\n`\n\nconst ListIconContainer = styled.div`\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  padding: 14px 16px 14px 12px;\n`\n\nconst ListElementWrapper = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst NotificationDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 4px 0;\n`\n\nconst ListDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 4px 0;\n`\n\nconst Table = styled.div`\n  height: 300px;\n  overflow: scroll;\n  padding: 12px;\n\n  & > * + * {\n    margin-top: 12px;\n  }\n`\n\nconst LinkIconWrapper = styled.div`\n  width: 12px;\n  height: 12px;\n  margin-left: 8px;\n`\n\nconst SmallContentBlock = styled(ContentBlock)`\n  padding: 0;\n`\n\nconst TitleRow = styled(TextBold)`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n  font-size: 18px;\n`\n\nconst DateRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: end;\n  padding: 8px;\n`\n\nconst NotificationDate = styled(DateCell)`\n  margin-left: auto;\n`\n\nconst DateDisplay = styled.div`\n  font-size: 14px;\n`\nconst HourDisplay = styled.div`\n  font-size: 12px;\n  color: ${Colors.Gray['600']};\n`\n"]},"metadata":{},"sourceType":"module"}