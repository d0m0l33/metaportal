{"ast":null,"code":"import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from 'three';\n\nconst AnimationClipCreator = () => {};\n\nAnimationClipCreator.CreateRotationAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 360];\n  axis = axis || 'x';\n  const trackName = `.rotation[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateScaleAxisAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 1];\n  axis = axis || 'x';\n  const trackName = `.scale[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateShakeAnimation = (duration, shakeScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    tmp.set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0).multiply(shakeScale).toArray(values, values.length);\n  }\n\n  const trackName = '.position';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreatePulsationAnimation = (duration, pulseScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    const scaleFactor = Math.random() * pulseScale;\n    tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n  }\n\n  const trackName = '.scale';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateVisibilityAnimation = duration => {\n  const times = [0, duration / 2, duration],\n        values = [true, false, true];\n  const trackName = '.visible';\n  const track = new BooleanKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateMaterialColorAnimation = (duration, colors) => {\n  const times = [],\n        values = [],\n        timeStep = duration / colors.length;\n\n  for (let i = 0; i <= colors.length; i++) {\n    times.push(i * timeStep);\n    values.push(colors[i % colors.length]);\n  }\n\n  const trackName = '.material[0].color';\n  const track = new ColorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nexport { AnimationClipCreator };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportalpublic/node_modules/three-stdlib/animation/AnimationClipCreator.js"],"names":["NumberKeyframeTrack","AnimationClip","Vector3","VectorKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","AnimationClipCreator","CreateRotationAnimation","period","axis","times","values","trackName","track","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","tmp","i","push","set","Math","random","multiply","toArray","length","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","CreateMaterialColorAnimation","colors","timeStep"],"mappings":"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","sourcesContent":["import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from 'three';\n\nconst AnimationClipCreator = () => {};\n\nAnimationClipCreator.CreateRotationAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 360];\n  axis = axis || 'x';\n  const trackName = `.rotation[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateScaleAxisAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 1];\n  axis = axis || 'x';\n  const trackName = `.scale[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateShakeAnimation = (duration, shakeScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    tmp.set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0).multiply(shakeScale).toArray(values, values.length);\n  }\n\n  const trackName = '.position';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreatePulsationAnimation = (duration, pulseScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    const scaleFactor = Math.random() * pulseScale;\n    tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n  }\n\n  const trackName = '.scale';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateVisibilityAnimation = duration => {\n  const times = [0, duration / 2, duration],\n        values = [true, false, true];\n  const trackName = '.visible';\n  const track = new BooleanKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateMaterialColorAnimation = (duration, colors) => {\n  const times = [],\n        values = [],\n        timeStep = duration / colors.length;\n\n  for (let i = 0; i <= colors.length; i++) {\n    times.push(i * timeStep);\n    values.push(colors[i % colors.length]);\n  }\n\n  const trackName = '.material[0].color';\n  const track = new ColorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nexport { AnimationClipCreator };\n"]},"metadata":{},"sourceType":"module"}