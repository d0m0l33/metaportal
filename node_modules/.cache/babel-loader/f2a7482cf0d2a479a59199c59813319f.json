{"ast":null,"code":"import _objectWithoutProperties from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"makeDefault\", \"manual\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nvar OrthographicCamera = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var makeDefault = _ref.makeDefault,\n      manual = _ref.manual,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var set = useThree(function (_ref2) {\n    var set = _ref2.set;\n    return set;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var size = useThree(function (_ref4) {\n    var size = _ref4.size;\n    return size;\n  });\n  var cameraRef = React.useRef();\n  React.useLayoutEffect(function () {\n    if (cameraRef.current && !manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(function () {\n    if (makeDefault && cameraRef.current) {\n      var oldCam = camera;\n      set(function () {\n        return {\n          camera: cameraRef.current\n        };\n      });\n      return function () {\n        return set(function () {\n          return {\n            camera: oldCam\n          };\n        });\n      };\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\nexport { OrthographicCamera };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/OrthographicCamera.js"],"names":["_extends","React","useThree","mergeRefs","OrthographicCamera","forwardRef","ref","makeDefault","manual","props","set","camera","size","cameraRef","useRef","useLayoutEffect","current","updateProjectionMatrix","oldCam","createElement","left","width","right","top","height","bottom"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAMC,kBAAkB,GAAG,aAAaH,KAAK,CAACI,UAAN,CAAiB,gBAItDC,GAJsD,EAI9C;AAAA,MAHTC,WAGS,QAHTA,WAGS;AAAA,MAFTC,MAES,QAFTA,MAES;AAAA,MADNC,KACM;;AACT,MAAMC,GAAG,GAAGR,QAAQ,CAAC;AAAA,QACnBQ,GADmB,SACnBA,GADmB;AAAA,WAEfA,GAFe;AAAA,GAAD,CAApB;AAGA,MAAMC,MAAM,GAAGT,QAAQ,CAAC;AAAA,QACtBS,MADsB,SACtBA,MADsB;AAAA,WAElBA,MAFkB;AAAA,GAAD,CAAvB;AAGA,MAAMC,IAAI,GAAGV,QAAQ,CAAC;AAAA,QACpBU,IADoB,SACpBA,IADoB;AAAA,WAEhBA,IAFgB;AAAA,GAAD,CAArB;AAGA,MAAMC,SAAS,GAAGZ,KAAK,CAACa,MAAN,EAAlB;AACAb,EAAAA,KAAK,CAACc,eAAN,CAAsB,YAAM;AAC1B,QAAIF,SAAS,CAACG,OAAV,IAAqB,CAACR,MAA1B,EAAkC;AAChCK,MAAAA,SAAS,CAACG,OAAV,CAAkBC,sBAAlB;AACD;AACF,GAJD,EAIG,CAACL,IAAD,EAAOH,KAAP,CAJH;AAKAR,EAAAA,KAAK,CAACc,eAAN,CAAsB,YAAM;AAC1B,QAAIR,WAAW,IAAIM,SAAS,CAACG,OAA7B,EAAsC;AACpC,UAAME,MAAM,GAAGP,MAAf;AACAD,MAAAA,GAAG,CAAC;AAAA,eAAO;AACTC,UAAAA,MAAM,EAAEE,SAAS,CAACG;AADT,SAAP;AAAA,OAAD,CAAH;AAGA,aAAO;AAAA,eAAMN,GAAG,CAAC;AAAA,iBAAO;AACtBC,YAAAA,MAAM,EAAEO;AADc,WAAP;AAAA,SAAD,CAAT;AAAA,OAAP;AAGD;AACF,GAVD,EAUG,CAACP,MAAD,EAASE,SAAT,EAAoBN,WAApB,EAAiCG,GAAjC,CAVH;AAWA,SAAO,aAAaT,KAAK,CAACkB,aAAN,CAAoB,oBAApB,EAA0CnB,QAAQ,CAAC;AACrEoB,IAAAA,IAAI,EAAER,IAAI,CAACS,KAAL,GAAa,CAAC,CADiD;AAErEC,IAAAA,KAAK,EAAEV,IAAI,CAACS,KAAL,GAAa,CAFiD;AAGrEE,IAAAA,GAAG,EAAEX,IAAI,CAACY,MAAL,GAAc,CAHkD;AAIrEC,IAAAA,MAAM,EAAEb,IAAI,CAACY,MAAL,GAAc,CAAC,CAJ8C;AAKrElB,IAAAA,GAAG,EAAEH,SAAS,CAAC,CAACU,SAAD,EAAYP,GAAZ,CAAD;AALuD,GAAD,EAMnEG,KANmE,CAAlD,CAApB;AAOD,CAtCuC,CAAxC;AAwCA,SAASL,kBAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst OrthographicCamera = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  manual,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (cameraRef.current && !manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nexport { OrthographicCamera };\n"]},"metadata":{},"sourceType":"module"}