{"ast":null,"code":"import _objectSpread from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return /*#__PURE__*/function (_THREE$ShaderMaterial) {\n    _inherits(_class, _THREE$ShaderMaterial);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      var entries = Object.entries(uniforms); // Create unforms and shaders\n\n      _this = _super.call(this, {\n        uniforms: entries.reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              name = _ref2[0],\n              value = _ref2[1];\n\n          var uniform = THREE.UniformsUtils.clone(_defineProperty({}, name, {\n            value: value\n          }));\n          return _objectSpread(_objectSpread({}, acc), uniform);\n        }, {}),\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            name = _ref4[0];\n\n        return Object.defineProperty(_assertThisInitialized(_this), name, {\n          get: function get() {\n            return _this.uniforms[name].value;\n          },\n          set: function set(v) {\n            return _this.uniforms[name].value = v;\n          }\n        });\n      });\n      if (onInit) onInit(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return _class;\n  }(THREE.ShaderMaterial);\n}\n\nexport { shaderMaterial };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/shaderMaterial.js"],"names":["THREE","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","entries","Object","reduce","acc","name","value","uniform","UniformsUtils","clone","forEach","defineProperty","get","set","v","ShaderMaterial"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,YAAlC,EAAgDC,cAAhD,EAAgEC,MAAhE,EAAwE;AACtE;AAAA;;AAAA;;AACE,sBAAc;AAAA;;AAAA;;AACZ,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeJ,QAAf,CAAhB,CADY,CAC8B;;AAE1C,gCAAM;AACJA,QAAAA,QAAQ,EAAEI,OAAO,CAACE,MAAR,CAAe,UAACC,GAAD,QAAwB;AAAA;AAAA,cAAjBC,IAAiB;AAAA,cAAXC,KAAW;;AAC/C,cAAMC,OAAO,GAAGZ,KAAK,CAACa,aAAN,CAAoBC,KAApB,qBACbJ,IADa,EACN;AACNC,YAAAA,KAAK,EAALA;AADM,WADM,EAAhB;AAKA,iDAAYF,GAAZ,GACKG,OADL;AAGD,SATS,EASP,EATO,CADN;AAWJT,QAAAA,YAAY,EAAZA,YAXI;AAYJC,QAAAA,cAAc,EAAdA;AAZI,OAAN,EAHY,CAgBR;;AAEJE,MAAAA,OAAO,CAACS,OAAR,CAAgB;AAAA;AAAA,YAAEL,IAAF;;AAAA,eAAYH,MAAM,CAACS,cAAP,gCAA4BN,IAA5B,EAAkC;AAC5DO,UAAAA,GAAG,EAAE;AAAA,mBAAM,MAAKf,QAAL,CAAcQ,IAAd,EAAoBC,KAA1B;AAAA,WADuD;AAE5DO,UAAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,mBAAI,MAAKjB,QAAL,CAAcQ,IAAd,EAAoBC,KAApB,GAA4BQ,CAAhC;AAAA;AAFsD,SAAlC,CAAZ;AAAA,OAAhB;AAIA,UAAId,MAAJ,EAAYA,MAAM,+BAAN;AAtBA;AAuBb;;AAxBH;AAAA,IAAqBL,KAAK,CAACoB,cAA3B;AA2BD;;AAED,SAASnB,cAAT","sourcesContent":["import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends THREE.ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return { ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };\n"]},"metadata":{},"sourceType":"module"}