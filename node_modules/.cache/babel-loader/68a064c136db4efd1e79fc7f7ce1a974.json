{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useBlockNumber } from '@usedapp/core';\nimport { getCoingeckoPrice } from './simple_price';\nimport { getCoingeckoTokenPrice } from './simple_token_price';\nexport const useCoingeckoPrice = function (base) {\n  let quote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'usd';\n  const [price, setPrice] = useState(undefined);\n  const blockNo = useBlockNumber();\n  useEffect(() => {\n    async function getPrice() {\n      const tokenPrice = await getCoingeckoPrice(base, quote);\n      setPrice(tokenPrice);\n    }\n\n    getPrice();\n  }, [base, quote, blockNo]);\n  return price;\n};\nexport const useCoingeckoTokenPrice = function (contract) {\n  let quote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'usd';\n  let platform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ethereum';\n  const [price, setPrice] = useState(undefined);\n  const blockNo = useBlockNumber();\n  useEffect(() => {\n    async function getPrice() {\n      const tokenPrice = await getCoingeckoTokenPrice(contract, quote, platform);\n      setPrice(tokenPrice);\n    }\n\n    getPrice();\n  }, [contract, quote, platform, blockNo]);\n  return price;\n};","map":{"version":3,"sources":["../../../src/index.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,cAAT,QAA+B,eAA/B;AAEA,SAAS,iBAAT,QAAkC,gBAAlC;AACA,SAAS,sBAAT,QAAuC,sBAAvC;AAEA,OAAO,MAAM,iBAAiB,GAAG,UAAC,IAAD,EAAoD;AAAA,MAArC,KAAqC,uEAA7B,KAA6B;AACnF,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAqB,SAArB,CAAlC;AACA,QAAM,OAAO,GAAG,cAAc,EAA9B;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,mBAAe,QAAf,GAAuB;AACrB,YAAM,UAAU,GAAG,MAAM,iBAAiB,CAAC,IAAD,EAAO,KAAP,CAA1C;AACA,MAAA,QAAQ,CAAC,UAAD,CAAR;AACD;;AAED,IAAA,QAAQ;AACT,GAPQ,EAON,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,CAPM,CAAT;AASA,SAAO,KAAP;AACD,CAdM;AAgBP,OAAO,MAAM,sBAAsB,GAAG,UAAC,QAAD,EAA+E;AAAA,MAA5D,KAA4D,uEAApD,KAAoD;AAAA,MAA7C,QAA6C,uEAAlC,UAAkC;AACnH,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAqB,SAArB,CAAlC;AACA,QAAM,OAAO,GAAG,cAAc,EAA9B;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,mBAAe,QAAf,GAAuB;AACrB,YAAM,UAAU,GAAG,MAAM,sBAAsB,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,CAA/C;AACA,MAAA,QAAQ,CAAC,UAAD,CAAR;AACD;;AAED,IAAA,QAAQ;AACT,GAPQ,EAON,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,EAA4B,OAA5B,CAPM,CAAT;AASA,SAAO,KAAP;AACD,CAdM","sourceRoot":"","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useBlockNumber } from '@usedapp/core';\nimport { getCoingeckoPrice } from './simple_price';\nimport { getCoingeckoTokenPrice } from './simple_token_price';\nexport const useCoingeckoPrice = (base, quote = 'usd') => {\n    const [price, setPrice] = useState(undefined);\n    const blockNo = useBlockNumber();\n    useEffect(() => {\n        async function getPrice() {\n            const tokenPrice = await getCoingeckoPrice(base, quote);\n            setPrice(tokenPrice);\n        }\n        getPrice();\n    }, [base, quote, blockNo]);\n    return price;\n};\nexport const useCoingeckoTokenPrice = (contract, quote = 'usd', platform = 'ethereum') => {\n    const [price, setPrice] = useState(undefined);\n    const blockNo = useBlockNumber();\n    useEffect(() => {\n        async function getPrice() {\n            const tokenPrice = await getCoingeckoTokenPrice(contract, quote, platform);\n            setPrice(tokenPrice);\n        }\n        getPrice();\n    }, [contract, quote, platform, blockNo]);\n    return price;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}