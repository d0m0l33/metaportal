{"ast":null,"code":"import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr(_ref) {\n  let {\n    pixelated\n  } = _ref;\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr); // Restore initial pixelratio on unmount\n\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Set adaptive pixelratio\n\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated'; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/AdaptiveDpr.js"],"names":["React","useThree","AdaptiveDpr","pixelated","gl","state","active","internal","current","performance","initialDpr","viewport","setDpr","useEffect","domElement","style","imageRendering"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,WAAT,OAEG;AAAA,MAFkB;AACnBC,IAAAA;AADmB,GAElB;AACD,QAAMC,EAAE,GAAGH,QAAQ,CAACI,KAAK,IAAIA,KAAK,CAACD,EAAhB,CAAnB;AACA,QAAME,MAAM,GAAGL,QAAQ,CAACI,KAAK,IAAIA,KAAK,CAACE,QAAN,CAAeD,MAAzB,CAAvB;AACA,QAAME,OAAO,GAAGP,QAAQ,CAACI,KAAK,IAAIA,KAAK,CAACI,WAAN,CAAkBD,OAA5B,CAAxB;AACA,QAAME,UAAU,GAAGT,QAAQ,CAACI,KAAK,IAAIA,KAAK,CAACM,QAAN,CAAeD,UAAzB,CAA3B;AACA,QAAME,MAAM,GAAGX,QAAQ,CAACI,KAAK,IAAIA,KAAK,CAACO,MAAhB,CAAvB,CALC,CAK+C;;AAEhDZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,UAAU,GAAGV,EAAE,CAACU,UAAtB;AACA,WAAO,MAAM;AACX,UAAIR,MAAJ,EAAYM,MAAM,CAACF,UAAD,CAAN;AACZ,UAAIP,SAAS,IAAIW,UAAjB,EAA6BA,UAAU,CAACC,KAAX,CAAiBC,cAAjB,GAAkC,MAAlC;AAC9B,KAHD,CAFoB,CAKjB;AACJ,GAND,EAMG,EANH,EAPC,CAaO;;AAERhB,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBD,IAAAA,MAAM,CAACJ,OAAO,GAAGE,UAAX,CAAN;AACA,QAAIP,SAAS,IAAIC,EAAE,CAACU,UAApB,EAAgCV,EAAE,CAACU,UAAH,CAAcC,KAAd,CAAoBC,cAApB,GAAqCR,OAAO,KAAK,CAAZ,GAAgB,MAAhB,GAAyB,WAA9D,CAFZ,CAEuF;AAC5G,GAHD,EAGG,CAACA,OAAD,CAHH;AAIA,SAAO,IAAP;AACD;;AAED,SAASN,WAAT","sourcesContent":["import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr({\n  pixelated\n}) {\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr); // Restore initial pixelratio on unmount\n\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Set adaptive pixelratio\n\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated'; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };\n"]},"metadata":{},"sourceType":"module"}