{"ast":null,"code":"import _objectSpread from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import{ContentBlock,MainContent,Section}from'../components/base/base';import{useFrame}from'@react-three/fiber';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var STAKING_CONTRACT='0x00000000219ab540356cBB839Cbe05303d7705Fa';export function Balance(){return/*#__PURE__*/_jsx(MainContent,{children:/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsx(ContentBlock,{})})});}function Box(props){var mesh=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHover=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),active=_useState4[0],setActive=_useState4[1];useFrame(function(state,delta){return mesh.current.rotation.x+=0.01;});return/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({},props),{},{ref:mesh,scale:active?1.5:1,onClick:function onClick(event){return setActive(!active);},onPointerOver:function onPointerOver(event){return setHover(true);},onPointerOut:function onPointerOut(event){return setHover(false);},children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[1,1,1]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:hovered?'hotpink':'orange'})]}));}export function BasicBox(props){return/*#__PURE__*/_jsxs(\"mesh\",{children:[/*#__PURE__*/_jsx(\"boxBufferGeometry\",{args:[1,1,1],attach:\"geometry\"}),/*#__PURE__*/_jsx(\"meshLambertMaterial\",{attach:\"geometry\",color:\"hotpink\"})]});}","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Balance.tsx"],"names":["React","useRef","useState","ContentBlock","MainContent","Section","useFrame","STAKING_CONTRACT","Balance","Box","props","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","x","event","BasicBox"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,QAAvB,KAAuC,OAAvC,CAIA,OAA0BC,YAA1B,CAAoDC,WAApD,CAAiEC,OAAjE,KAA4F,yBAA5F,CASA,OAAiBC,QAAjB,KAAiC,oBAAjC,C,wFAOA,GAAMC,CAAAA,gBAAgB,CAAG,4CAAzB,CAEA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CAGxB,mBACE,KAAC,WAAD,wBACA,KAAC,OAAD,wBACE,KAAC,YAAD,IADF,EADA,EADF,CAUD,CAED,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAmD,CACjD,GAAMC,CAAAA,IAAI,CAAGV,MAAM,CAAa,IAAb,CAAnB,CACA,cAA4BC,QAAQ,CAAC,KAAD,CAApC,wCAAOU,OAAP,eAAgBC,QAAhB,eACA,eAA4BX,QAAQ,CAAC,KAAD,CAApC,yCAAOY,MAAP,eAAeC,SAAf,eACAT,QAAQ,CAAC,SAACU,KAAD,CAAQC,KAAR,QAAmBN,CAAAA,IAAI,CAACO,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,EAA2B,IAA9C,EAAD,CAAR,CACA,mBACE,4CACMV,KADN,MAEE,GAAG,CAAEC,IAFP,CAGE,KAAK,CAAEG,MAAM,CAAG,GAAH,CAAS,CAHxB,CAIE,OAAO,CAAE,iBAACO,KAAD,QAAWN,CAAAA,SAAS,CAAC,CAACD,MAAF,CAApB,EAJX,CAKE,aAAa,CAAE,uBAACO,KAAD,QAAWR,CAAAA,QAAQ,CAAC,IAAD,CAAnB,EALjB,CAME,YAAY,CAAE,sBAACQ,KAAD,QAAWR,CAAAA,QAAQ,CAAC,KAAD,CAAnB,EANhB,wBAQE,oBAAa,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAnB,EARF,cASE,6BAAsB,KAAK,CAAED,OAAO,CAAG,SAAH,CAAe,QAAnD,EATF,IADF,CAaD,CAED,MAAO,SAASU,CAAAA,QAAT,CAAkBZ,KAAlB,CAA8B,CACnC,mBACE,qCACE,0BAAmB,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAzB,CAAoC,MAAM,CAAC,UAA3C,EADF,cAEE,4BAAqB,MAAM,CAAC,UAA5B,CAAuC,KAAK,CAAC,SAA7C,EAFF,GADF,CAMD","sourcesContent":["import React, {useRef, useState } from 'react'\n\nimport { formatEther } from '@ethersproject/units'\nimport { useEtherBalance, useEthers } from '@usedapp/core'\nimport { ContainerCustom, ContentBlock, ContentRow, MainContent, Section, SectionRow } from '../components/base/base'\nimport { Label } from '../typography/Label'\nimport { TextInline } from '../typography/Text'\nimport { Title } from '../typography/Title'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\n\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nimport {SoldierModel} from '../models/soldierModel';\nimport { OrbitControls } from '@react-three/drei'\n\n\n\nconst STAKING_CONTRACT = '0x00000000219ab540356cBB839Cbe05303d7705Fa'\n\nexport function Balance() {\n\n\n  return (\n    <MainContent>\n    <Section>\n      <ContentBlock>\n\n    </ContentBlock>\n    </Section>\n    </MainContent>\n\n  )\n}\n\nfunction Box(props: JSX.IntrinsicElements['mesh']) {\n  const mesh = useRef<THREE.Mesh>(null!)\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nexport function BasicBox(props: any) {\n  return (\n    <mesh>\n      <boxBufferGeometry args={[1, 1, 1]} attach=\"geometry\" />\n      <meshLambertMaterial attach=\"geometry\" color=\"hotpink\"/>\n    </mesh>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}