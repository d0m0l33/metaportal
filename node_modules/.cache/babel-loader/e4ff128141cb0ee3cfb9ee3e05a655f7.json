{"ast":null,"code":"import { addressEqual } from '../..';\nexport function callsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_CALLS') {\n    return [...state, ...action.calls];\n  } else {\n    let finalState = state;\n\n    for (const call of action.calls) {\n      const index = finalState.findIndex(x => addressEqual(x.address, call.address) && x.data === call.data);\n\n      if (index !== -1) {\n        finalState = finalState.filter((_, i) => i !== index);\n      }\n    }\n\n    return finalState;\n  }\n}","map":{"version":3,"sources":["../../../../../src/providers/chainState/callsReducer.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAA6B,OAA7B;AAmBA,OAAM,SAAU,YAAV,GAA8D;AAAA,MAAvC,KAAuC,uEAAlB,EAAkB;AAAA,MAAd,MAAc;;AAClE,MAAI,MAAM,CAAC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO,CAAC,GAAG,KAAJ,EAAW,GAAG,MAAM,CAAC,KAArB,CAAP;AACD,GAFD,MAEO;AACL,QAAI,UAAU,GAAG,KAAjB;;AACA,SAAK,MAAM,IAAX,IAAmB,MAAM,CAAC,KAA1B,EAAiC;AAC/B,YAAM,KAAK,GAAG,UAAU,CAAC,SAAX,CAAsB,CAAD,IAAO,YAAY,CAAC,CAAC,CAAC,OAAH,EAAY,IAAI,CAAC,OAAjB,CAAZ,IAAyC,CAAC,CAAC,IAAF,KAAW,IAAI,CAAC,IAArF,CAAd;;AACA,UAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,QAAA,UAAU,GAAG,UAAU,CAAC,MAAX,CAAkB,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,KAAK,KAAlC,CAAb;AACD;AACF;;AACD,WAAO,UAAP;AACD;AACF","sourceRoot":"","sourcesContent":["import { addressEqual } from '../..';\nexport function callsReducer(state = [], action) {\n    if (action.type === 'ADD_CALLS') {\n        return [...state, ...action.calls];\n    }\n    else {\n        let finalState = state;\n        for (const call of action.calls) {\n            const index = finalState.findIndex((x) => addressEqual(x.address, call.address) && x.data === call.data);\n            if (index !== -1) {\n                finalState = finalState.filter((_, i) => i !== index);\n            }\n        }\n        return finalState;\n    }\n}\n//# sourceMappingURL=callsReducer.js.map"]},"metadata":{},"sourceType":"module"}