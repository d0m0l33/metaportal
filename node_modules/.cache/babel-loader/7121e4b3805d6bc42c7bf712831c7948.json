{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/account/AccountButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useEthers, shortenAddress, useLookupAddress } from '@usedapp/core';\nimport { Button } from '../base/Button';\nimport { Colors } from '../../global/styles';\nimport styled from 'styled-components';\nimport { AccountModal } from './AccountModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccountButton = () => {\n  _s();\n\n  const {\n    account,\n    deactivate,\n    activateBrowserWallet\n  } = useEthers();\n  const ens = useLookupAddress();\n  const [showModal, setShowModal] = useState(false);\n  const [activateError, setActivateError] = useState('');\n  const {\n    error\n  } = useEthers();\n  useEffect(() => {\n    if (error) {\n      setActivateError(error.message);\n    }\n  }, [error]);\n\n  const activate = async () => {\n    setActivateError('');\n    activateBrowserWallet();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Account, {\n    children: [activateError && /*#__PURE__*/_jsxDEV(ErrorWrapper, {\n      children: activateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AccountModal, {\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), account ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AccountLabel, {\n        onClick: () => setShowModal(!showModal),\n        children: ens !== null && ens !== void 0 ? ens : shortenAddress(account)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: () => deactivate(),\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: activate,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountButton, \"DBjxBmxsr6O+3OK4XvWtTx69EL8=\", false, function () {\n  return [useEthers, useLookupAddress, useEthers];\n});\n\n_c = AccountButton;\nconst ErrorWrapper = styled.div`\n  color: #ff3960;\n  margin-right: 40px;\n  margin-left: 40px;\n  overflow: auto;\n`;\n_c2 = ErrorWrapper;\nconst Account = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Account;\nconst LoginButton = styled(Button)`\n  background-color: ${Colors.Yellow[100]};\n`;\n_c4 = LoginButton;\nconst AccountLabel = styled(Button)`\n  height: 32px;\n  margin-right: -40px;\n  padding-right: 40px;\n  padding-left: 8px;\n  background-color: ${Colors.Yellow[100]};\n  font-size: 12px;\n`;\n_c5 = AccountLabel;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AccountButton\");\n$RefreshReg$(_c2, \"ErrorWrapper\");\n$RefreshReg$(_c3, \"Account\");\n$RefreshReg$(_c4, \"LoginButton\");\n$RefreshReg$(_c5, \"AccountLabel\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/account/AccountButton.tsx"],"names":["React","useEffect","useState","useEthers","shortenAddress","useLookupAddress","Button","Colors","styled","AccountModal","AccountButton","account","deactivate","activateBrowserWallet","ens","showModal","setShowModal","activateError","setActivateError","error","message","activate","ErrorWrapper","div","Account","LoginButton","Yellow","AccountLabel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,gBAApC,QAA4D,eAA5D;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAiDV,SAAS,EAAhE;AACA,QAAMW,GAAG,GAAGT,gBAAgB,EAA5B;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAYhB,SAAS,EAA3B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,KAAJ,EAAW;AACTD,MAAAA,gBAAgB,CAACC,KAAK,CAACC,OAAP,CAAhB;AACD;AACF,GAJQ,EAIN,CAACD,KAAD,CAJM,CAAT;;AAMA,QAAME,QAAQ,GAAG,YAAY;AAC3BH,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAL,IAAAA,qBAAqB;AACtB,GAHD;;AAKA,sBACE,QAAC,OAAD;AAAA,eACGI,aAAa,iBAAI,QAAC,YAAD;AAAA,gBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,YADpB,EAEGF,SAAS,iBAAI,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGL,OAAO,gBACN;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMK,YAAY,CAAC,CAACD,SAAF,CAAzC;AAAA,kBAAwDD,GAAxD,aAAwDA,GAAxD,cAAwDA,GAAxD,GAA+DV,cAAc,CAACO,OAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMC,UAAU,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADM,gBAMN,QAAC,WAAD;AAAa,MAAA,OAAO,EAAES,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhCM;;GAAMX,a;UAC4CP,S,EAC3CE,gB,EAIMF,S;;;KANPO,a;AAkCb,MAAMY,YAAY,GAAGd,MAAM,CAACe,GAAI;AAChC;AACA;AACA;AACA;AACA,CALA;MAAMD,Y;AAON,MAAME,OAAO,GAAGhB,MAAM,CAACe,GAAI;AAC3B;AACA;AACA,CAHA;MAAMC,O;AAKN,MAAMC,WAAW,GAAGjB,MAAM,CAACF,MAAD,CAAS;AACnC,sBAAsBC,MAAM,CAACmB,MAAP,CAAc,GAAd,CAAmB;AACzC,CAFA;MAAMD,W;AAIN,MAAME,YAAY,GAAGnB,MAAM,CAACF,MAAD,CAAS;AACpC;AACA;AACA;AACA;AACA,sBAAsBC,MAAM,CAACmB,MAAP,CAAc,GAAd,CAAmB;AACzC;AACA,CAPA;MAAMC,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useEthers, shortenAddress, useLookupAddress } from '@usedapp/core'\nimport { Button } from '../base/Button'\nimport { Colors } from '../../global/styles'\nimport styled from 'styled-components'\n\nimport { AccountModal } from './AccountModal'\n\nexport const AccountButton = () => {\n  const { account, deactivate, activateBrowserWallet } = useEthers()\n  const ens = useLookupAddress()\n  const [showModal, setShowModal] = useState(false)\n\n  const [activateError, setActivateError] = useState('');\n  const { error } = useEthers()\n  useEffect(() => {\n    if (error) {\n      setActivateError(error.message)\n    }\n  }, [error])\n\n  const activate = async () => {\n    setActivateError('')\n    activateBrowserWallet()\n  }\n\n  return (\n    <Account>\n      {activateError && <ErrorWrapper>{activateError}</ErrorWrapper>}\n      {showModal && <AccountModal setShowModal={setShowModal} />}\n      {account ? (\n        <>\n          <AccountLabel onClick={() => setShowModal(!showModal)}>{ens ?? shortenAddress(account)}</AccountLabel>\n          <LoginButton onClick={() => deactivate()}>Disconnect</LoginButton>\n        </>\n      ) : (\n        <LoginButton onClick={activate}>Connect</LoginButton>\n      )}\n    </Account>\n  )\n}\n\nconst ErrorWrapper = styled.div`\n  color: #ff3960;\n  margin-right: 40px;\n  margin-left: 40px;\n  overflow: auto;\n`\n\nconst Account = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst LoginButton = styled(Button)`\n  background-color: ${Colors.Yellow[100]};\n`\n\nconst AccountLabel = styled(Button)`\n  height: 32px;\n  margin-right: -40px;\n  padding-right: 40px;\n  padding-left: 8px;\n  background-color: ${Colors.Yellow[100]};\n  font-size: 12px;\n`\n"]},"metadata":{},"sourceType":"module"}