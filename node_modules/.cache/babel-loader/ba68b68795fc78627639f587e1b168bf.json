{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: `\n      varying vec3 vColor;\n      void main() {\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n        float r = dot(cxy, cxy);\n        float delta = fwidth(r);\n        vec3 color = vColor;\n        #ifdef TONE_MAPPING\n          color = toneMapping(color);\n        #endif\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\n      }`,\n      vertexColors: true\n    });\n  }\n\n  get scale() {\n    return this.uniforms.size.value;\n  }\n\n  set scale(v) {\n    this.uniforms.size.value = v;\n  }\n\n}\n\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { PointMaterial, PointMaterialImpl };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportalpublic/node_modules/@react-three/drei/core/PointMaterial.js"],"names":["_extends","THREE","React","PointMaterialImpl","ShaderMaterial","constructor","transparent","uniforms","size","value","vertexShader","ShaderLib","points","fragmentShader","vertexColors","scale","v","PointMaterial","forwardRef","props","ref","material","useState","createElement","object","attach"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,cAAtC,CAAqD;AACnDC,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE;AADH;AADE,OAFN;AAOJC,MAAAA,YAAY,EAAET,KAAK,CAACU,SAAN,CAAgBC,MAAhB,CAAuBF,YAPjC;AAQJG,MAAAA,cAAc,EAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAnBU;AAoBJC,MAAAA,YAAY,EAAE;AApBV,KAAN;AAsBD;;AAEQ,MAALC,KAAK,GAAG;AACV,WAAO,KAAKR,QAAL,CAAcC,IAAd,CAAmBC,KAA1B;AACD;;AAEQ,MAALM,KAAK,CAACC,CAAD,EAAI;AACX,SAAKT,QAAL,CAAcC,IAAd,CAAmBC,KAAnB,GAA2BO,CAA3B;AACD;;AAhCkD;;AAmCrD,MAAMC,aAAa,GAAG,aAAaf,KAAK,CAACgB,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClE,QAAM,CAACC,QAAD,IAAanB,KAAK,CAACoB,QAAN,CAAe,MAAM,IAAInB,iBAAJ,EAArB,CAAnB;AACA,SAAO,aAAaD,KAAK,CAACqB,aAAN,CAAoB,WAApB,EAAiCvB,QAAQ,CAAC;AAC5DwB,IAAAA,MAAM,EAAEH,QADoD;AAE5DD,IAAAA,GAAG,EAAEA,GAFuD;AAG5DK,IAAAA,MAAM,EAAE;AAHoD,GAAD,EAI1DN,KAJ0D,CAAzC,CAApB;AAKD,CAPkC,CAAnC;AASA,SAASF,aAAT,EAAwBd,iBAAxB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: `\n      varying vec3 vColor;\n      void main() {\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n        float r = dot(cxy, cxy);\n        float delta = fwidth(r);\n        vec3 color = vColor;\n        #ifdef TONE_MAPPING\n          color = toneMapping(color);\n        #endif\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\n      }`,\n      vertexColors: true\n    });\n  }\n\n  get scale() {\n    return this.uniforms.size.value;\n  }\n\n  set scale(v) {\n    this.uniforms.size.value = v;\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n"]},"metadata":{},"sourceType":"module"}