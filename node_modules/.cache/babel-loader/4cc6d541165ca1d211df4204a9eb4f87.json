{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContentAssist = void 0;\n\nvar interpreter_1 = require(\"../../grammar/interpreter\");\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar ContentAssist =\n/** @class */\nfunction () {\n  function ContentAssist() {}\n\n  ContentAssist.prototype.initContentAssist = function () {};\n\n  ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n    var startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if ((0, utils_1.isUndefined)(startRuleGast)) {\n      throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n    }\n\n    return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n  }; // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n\n\n  ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n    var topRuleName = (0, utils_1.first)(grammarPath.ruleStack);\n    var gastProductions = this.getGAstProductions();\n    var topProduction = gastProductions[topRuleName];\n    var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n    return nextPossibleTokenTypes;\n  };\n\n  return ContentAssist;\n}();\n\nexports.ContentAssist = ContentAssist;","map":{"version":3,"sources":["../../../../../src/parse/parser/traits/context_assist.ts"],"names":[],"mappings":";;;;;;;AAMA,IAAA,aAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAIA,IAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAGA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CAqCC;;AApCC,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA,CAAsB,CAAtB;;AAEO,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,UAEE,aAFF,EAGE,cAHF,EAG0B;AAExB,QAAM,aAAa,GAAG,KAAK,oBAAL,CAA0B,aAA1B,CAAtB;;AAEA,QAAI,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,aAAZ,CAAJ,EAAgC;AAC9B,YAAM,KAAK,CAAC,YAAU,aAAV,GAAuB,oCAAxB,CAAX;AACD;;AAED,WAAO,CAAA,GAAA,aAAA,CAAA,uBAAA,EACL,CAAC,aAAD,CADK,EAEL,cAFK,EAGL,KAAK,YAHA,EAIL,KAAK,YAJA,CAAP;AAMD,GAjBM,CAHT,CAsBE;AACA;;;AACO,EAAA,aAAA,CAAA,SAAA,CAAA,yBAAA,GAAP,UAEE,WAFF,EAEgC;AAE9B,QAAM,WAAW,GAAG,CAAA,GAAA,OAAA,CAAA,KAAA,EAAM,WAAW,CAAC,SAAlB,CAApB;AACA,QAAM,eAAe,GAAG,KAAK,kBAAL,EAAxB;AACA,QAAM,aAAa,GAAG,eAAe,CAAC,WAAD,CAArC;AACA,QAAM,sBAAsB,GAAG,IAAI,aAAA,CAAA,oBAAJ,CAC7B,aAD6B,EAE7B,WAF6B,EAG7B,YAH6B,EAA/B;AAIA,WAAO,sBAAP;AACD,GAZM;;AAaT,SAAA,aAAA;AAAC,CArCD,EAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContentAssist = void 0;\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar utils_1 = require(\"@chevrotain/utils\");\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache[startRuleName];\n        if ((0, utils_1.isUndefined)(startRuleGast)) {\n            throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n        }\n        return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = (0, utils_1.first)(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions[topRuleName];\n        var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\nexports.ContentAssist = ContentAssist;\n//# sourceMappingURL=context_assist.js.map"]},"metadata":{},"sourceType":"script"}