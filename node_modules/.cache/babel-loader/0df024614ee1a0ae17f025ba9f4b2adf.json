{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10;import{formatUnits}from'@ethersproject/units';import{CHAIN_NAMES,useEthers}from'@usedapp/core';import React,{useState}from'react';import{Spinner}from'react-bootstrap';import styled from'styled-components';import{Colors}from'../../global/styles';import{useBadgeList}from'../../portalHooks/useBadgeList';import{TextBold}from'../../typography/Text';import{BadgeOverviewModal}from'../badge/BadgeOverviewModal';import{TokenSVGIcon}from'./TokenSVGIcon';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function TokensList(){var _useEthers=useEthers(),chainId=_useEthers.chainId,account=_useEthers.account,library=_useEthers.library;var badges=useBadgeList(account);console.log('badges : ',badges);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedBadgeParams=_useState4[0],setSelectedBadgeParams=_useState4[1];var handleShowModal=function handleShowModal(index,badge){if(!badge||!badge.ui){return;}var chainId=badge.ui.onChain?badge.ui.onChain.chainId:0;setSelectedBadgeParams({domainName:'Meta Portal',name:badge.ui.name,description:badge.ui.description,requirements:badge.ui.requirements,address:badge.ui.onChain?badge.ui.onChain.address:null,tokenId:badge.ui.onChain?badge.ui.onChain.tokenId:0,chainName:CHAIN_NAMES[chainId],chainId:chainId,index:index});setShowModal(!showModal);};var item=useSelector(function(state){return{index:state.selectedItem.index,balance:state.selectedItem.balance,holders:state.selectedItem.holders,name:state.selectedItem.name,address:state.selectedItem.address,color:state.selectedItem.color,tokenId:state.selectedItem.tokenId};});return/*#__PURE__*/_jsxs(\"div\",{children:[showModal&&selectedBadgeParams&&/*#__PURE__*/_jsx(BadgeOverviewModal,{setShowModal:setShowModal,badgeParams:selectedBadgeParams}),!badges?/*#__PURE__*/_jsx(Spinner,{animation:\"grow\"}):/*#__PURE__*/_jsx(BadgeContainer,{children:badges&&badges.map(function(badge,idx){return/*#__PURE__*/_jsxs(TokenItem,{children:[/*#__PURE__*/_jsxs(TokenIconContainer,{onClick:function onClick(){return handleShowModal(idx,badge);},children:[/*#__PURE__*/_jsx(BadgeCreatorLogo,{children:\"MPL\"}),item.color&&item.index===idx&&/*#__PURE__*/_jsx(BadgeApplied,{children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"20\",height:\"20\",fill:\"currentColor\",color:\"#FFF4D4\",className:\"bi bi-check-square\",viewBox:\"0 0 16 16\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z\"})]})}),/*#__PURE__*/_jsx(TokenSVGIcon,{src:'',alt:''}),/*#__PURE__*/_jsxs(TokenBalance,{children:[formatUnits(10,0),\"xp\"]})]}),badge.ui&&/*#__PURE__*/_jsx(TokenName,{children:badge.ui.name})]},\"SubSection-\".concat(idx));})})]});}var BadgeContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\ndisplay: flex;\\nflex-flow: row wrap;\\nheight: 100%;\\n\"])));export var Button=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-flow: column;\\n  grid-column-gap: 8px;\\n  align-items: center;\\n  width: fit-content;\\n  height: 40px;\\n  font-size: 14px;\\n  line-height: 24px;\\n  font-weight: 700;\\n  text-transform: uppercase;\\n  letter-spacing: 0.1em;\\n  color: \",\";\\n  border: 1px solid \",\";\\n  background-color: transparent;\\n  cursor: pointer;\\n\\n  &:hover,\\n  &:focus {\\n    background-color: \",\";\\n    color: \",\";\\n  }\\n\"])),Colors.Black[900],Colors.Black[900],Colors.Black[900],Colors.Yellow[100]);var MintButton=styled(Button)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"])),Colors.Yellow[100]);var TokenItem=styled.li(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));var TokenIconContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  width: 120px;\\n  height:120px;\\n  margin: 0.2em;\\n  border: 1px solid #ebebeb};\\n  background: rgb(60, 60, 60);\\n  background: rgba(149, 149, 149, 0.4);\\n  position: relative;\\n\\n  &:hover,\\n  &:focus, \\n  &:active {\\n    color: \",\";\\n    border-width: medium;\\n    border-color: \",\";\\n  }\\n\"])),Colors.Yellow[100],Colors.Yellow[100]);var TokenName=styled(TextBold)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-left: 4px;\\n  font-size: 12px;\\n\"])));var TokenTicker=styled(TextBold)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  grid-area: ticker;\\n  color: \",\";\\n\"])),Colors.Gray[600]);var TokenBalance=styled(TextBold)(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  padding:0.25em;\\n  font-size: 12px;\\n\"])));var BadgeApplied=styled(TextBold)(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  padding:0.25em;\\n  font-size: 12px;\\n\"])));var BadgeCreatorLogo=styled(TextBold)(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  padding:0.25em;\\n  font-size: 12px;\\n\"])));","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/TokensList/TokensList.tsx"],"names":["formatUnits","CHAIN_NAMES","useEthers","React","useState","Spinner","styled","Colors","useBadgeList","TextBold","BadgeOverviewModal","TokenSVGIcon","useSelector","TokensList","chainId","account","library","badges","console","log","showModal","setShowModal","selectedBadgeParams","setSelectedBadgeParams","handleShowModal","index","badge","ui","onChain","domainName","name","description","requirements","address","tokenId","chainName","item","state","selectedItem","balance","holders","color","map","idx","BadgeContainer","div","Button","button","Black","Yellow","MintButton","TokenItem","li","TokenIconContainer","TokenName","TokenTicker","Gray","TokenBalance","BadgeApplied","BadgeCreatorLogo"],"mappings":"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","sourcesContent":["import { formatUnits } from '@ethersproject/units'\nimport { ChainId, CHAIN_NAMES, useEthers } from '@usedapp/core'\nimport React, { useState } from 'react'\nimport { Row,Spinner } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Colors } from '../../global/styles'\nimport { MetaBadge } from '../../portalHooks/BadgeHelperTypes'\nimport { useBadgeList } from '../../portalHooks/useBadgeList'\nimport { TextBold } from '../../typography/Text'\nimport { BadgeOverviewModal, BadgeParams } from '../badge/BadgeOverviewModal'\nimport { TokenSVGIcon } from './TokenSVGIcon'\nimport { useSelector } from 'react-redux'\n\n\ndeclare const window: any;\n\nexport function TokensList() {\n\n  const { chainId, account, library } = useEthers();\n  const badges: MetaBadge[]| undefined = useBadgeList(account);\n\n  console.log('badges : ',badges)\n  const [showModal, setShowModal] = useState(false)\n  const [selectedBadgeParams, setSelectedBadgeParams] = useState<BadgeParams>()\n\n    const handleShowModal =(index: number, badge: MetaBadge) =>  {\n      if(!badge || !badge.ui){\n        return;\n      }\n      const chainId: ChainId = badge.ui.onChain ? badge.ui.onChain.chainId : 0;\n      setSelectedBadgeParams({\n        domainName: 'Meta Portal',\n        name: badge.ui.name,\n        description: badge.ui.description,\n        requirements: badge.ui.requirements,\n        address: badge.ui.onChain ? badge.ui.onChain.address : null,\n        tokenId: badge.ui.onChain ? badge.ui.onChain.tokenId : 0,\n        chainName: CHAIN_NAMES[chainId],\n        chainId: chainId,\n        index: index,\n      });\n\n      setShowModal(!showModal);\n    }\n\n    const item = useSelector((state: any) => {\n      return{\n      index: state.selectedItem.index,\n      balance: state.selectedItem.balance,\n      holders: state.selectedItem.holders,\n      name: state.selectedItem.name,\n      address: state.selectedItem.address,\n      color: state.selectedItem.color,\n      tokenId: state.selectedItem.tokenId,\n    }\n    })\n\n\n  return (\n    <div>\n      {\n      (showModal && selectedBadgeParams) && <BadgeOverviewModal setShowModal={setShowModal} badgeParams={selectedBadgeParams} />\n      }\n      {!badges ? (<Spinner animation=\"grow\" /> ): (\n        <BadgeContainer>\n        {badges && badges.map((badge: MetaBadge, idx:number) => {\n              return (\n         \n                    <TokenItem key={`SubSection-${idx}`}> \n                    <TokenIconContainer onClick={() => handleShowModal(idx, badge)}>\n                      <BadgeCreatorLogo>\n                        MPL\n                      </BadgeCreatorLogo>\n                      {(item.color && item.index === idx) && <BadgeApplied> \n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" color=\"#FFF4D4\" className=\"bi bi-check-square\" viewBox=\"0 0 16 16\">\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n  <path d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z\"/>\n</svg>\n                      </BadgeApplied>}\n                      <TokenSVGIcon src={''} alt={''}></TokenSVGIcon>\n                      <TokenBalance> \n                        {formatUnits(10,0)}xp\n                      </TokenBalance>\n                    </TokenIconContainer>\n                        {badge.ui && <TokenName>{badge.ui.name}</TokenName>}                    \n                  </TokenItem>\n           \n          )})}\n        </BadgeContainer>\n    )}\n    </div>\n  )\n}\n\n\nconst BadgeContainer = styled.div`\ndisplay: flex;\nflex-flow: row wrap;\nheight: 100%;\n`\n\n\nexport const Button = styled.button`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 8px;\n  align-items: center;\n  width: fit-content;\n  height: 40px;\n  font-size: 14px;\n  line-height: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  color: ${Colors.Black[900]};\n  border: 1px solid ${Colors.Black[900]};\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${Colors.Black[900]};\n    color: ${Colors.Yellow[100]};\n  }\n`\n\nconst MintButton = styled(Button)`\n  background-color: ${Colors.Yellow[100]};\n`\n\nconst TokenItem = styled.li`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TokenIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 120px;\n  height:120px;\n  margin: 0.2em;\n  border: 1px solid #ebebeb};\n  background: rgb(60, 60, 60);\n  background: rgba(149, 149, 149, 0.4);\n  position: relative;\n\n  &:hover,\n  &:focus, \n  &:active {\n    color: ${Colors.Yellow[100]};\n    border-width: medium;\n    border-color: ${Colors.Yellow[100]};\n  }\n`\n\nconst TokenName = styled(TextBold)`\n  margin-left: 4px;\n  font-size: 12px;\n`\n\nconst TokenTicker = styled(TextBold)`\n  grid-area: ticker;\n  color: ${Colors.Gray[600]};\n`\n\nconst TokenBalance = styled(TextBold)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding:0.25em;\n  font-size: 12px;\n`\n\nconst BadgeApplied = styled(TextBold)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding:0.25em;\n  font-size: 12px;\n`\n\nconst BadgeCreatorLogo = styled(TextBold)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding:0.25em;\n  font-size: 12px;\n`\n"]},"metadata":{},"sourceType":"module"}