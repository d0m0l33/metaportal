{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Balance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { formatEther } from '@ethersproject/units';\nimport { useEtherBalance, useEthers } from '@usedapp/core';\nimport { ContainerCustom, ContentBlock, ContentRow, MainContent, Section, SectionRow } from '../components/base/base';\nimport { Label } from '../typography/Label';\nimport { TextInline } from '../typography/Text';\nimport { Title } from '../typography/Title';\nimport { AccountButton } from '../components/account/AccountButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STAKING_CONTRACT = '0x00000000219ab540356cBB839Cbe05303d7705Fa';\nexport function Balance() {\n  _s();\n\n  const {\n    account\n  } = useEthers();\n  const userBalance = useEtherBalance(account);\n  const stakingBalance = useEtherBalance(STAKING_CONTRACT);\n  return /*#__PURE__*/_jsxDEV(MainContent, {\n    children: /*#__PURE__*/_jsxDEV(ContainerCustom, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionRow, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentBlock, {\n          children: [stakingBalance && /*#__PURE__*/_jsxDEV(ContentRow, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"ETH2 staking contract holds:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextInline, {\n              children: formatEther(stakingBalance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 61\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Label, {\n              children: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), account && /*#__PURE__*/_jsxDEV(ContentRow, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextInline, {\n              children: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), userBalance && /*#__PURE__*/_jsxDEV(ContentRow, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Ether balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextInline, {\n              children: formatEther(userBalance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 47\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Label, {\n              children: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Balance, \"eVBde84uGYaSWN2yeooI2wLX5AA=\", false, function () {\n  return [useEthers, useEtherBalance, useEtherBalance];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Balance.tsx"],"names":["React","formatEther","useEtherBalance","useEthers","ContainerCustom","ContentBlock","ContentRow","MainContent","Section","SectionRow","Label","TextInline","Title","AccountButton","STAKING_CONTRACT","Balance","account","userBalance","stakingBalance"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,UAAxC,EAAoDC,WAApD,EAAiEC,OAAjE,EAA0EC,UAA1E,QAA4F,yBAA5F;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,SAASC,aAAT,QAA8B,qCAA9B;;AAEA,MAAMC,gBAAgB,GAAG,4CAAzB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcb,SAAS,EAA7B;AACA,QAAMc,WAAW,GAAGf,eAAe,CAACc,OAAD,CAAnC;AACA,QAAME,cAAc,GAAGhB,eAAe,CAACY,gBAAD,CAAtC;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,eAAD;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,YAAD;AAAA,qBACGI,cAAc,iBACb,QAAC,UAAD;AAAA,oCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,oBAC8C,QAAC,UAAD;AAAA,wBAAajB,WAAW,CAACiB,cAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAD9C,EACqG,GADrG,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAOGF,OAAO,iBACN,QAAC,UAAD;AAAA,oCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,oBAC0B,QAAC,UAAD;AAAA,wBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,oBAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,EAYGC,WAAW,iBACV,QAAC,UAAD;AAAA,oCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,oBACgC,QAAC,UAAD;AAAA,wBAAahB,WAAW,CAACgB,WAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADhC,oBACoF,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADpF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAnCeF,O;UACMZ,S,EACAD,e,EACGA,e;;;KAHTa,O","sourcesContent":["import React from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { useEtherBalance, useEthers } from '@usedapp/core'\nimport { ContainerCustom, ContentBlock, ContentRow, MainContent, Section, SectionRow } from '../components/base/base'\nimport { Label } from '../typography/Label'\nimport { TextInline } from '../typography/Text'\nimport { Title } from '../typography/Title'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\nconst STAKING_CONTRACT = '0x00000000219ab540356cBB839Cbe05303d7705Fa'\n\nexport function Balance() {\n  const { account } = useEthers()\n  const userBalance = useEtherBalance(account)\n  const stakingBalance = useEtherBalance(STAKING_CONTRACT)\n\n  return (\n    <MainContent>\n      <ContainerCustom>\n        <Section>\n          <SectionRow>\n            <Title>Balance</Title>\n            <AccountButton />\n          </SectionRow>\n          <ContentBlock>\n            {stakingBalance && (\n              <ContentRow>\n                <Label>ETH2 staking contract holds:</Label> <TextInline>{formatEther(stakingBalance)}</TextInline>{' '}\n                <Label>ETH</Label>\n              </ContentRow>\n            )}\n            {account && (\n              <ContentRow>\n                <Label>Account:</Label> <TextInline>{account}</TextInline>\n              </ContentRow>\n            )}\n            {userBalance && (\n              <ContentRow>\n                <Label>Ether balance:</Label> <TextInline>{formatEther(userBalance)}</TextInline> <Label>ETH</Label>\n              </ContentRow>\n            )}\n          </ContentBlock>\n        </Section>\n      </ContainerCustom>\n    </MainContent>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}