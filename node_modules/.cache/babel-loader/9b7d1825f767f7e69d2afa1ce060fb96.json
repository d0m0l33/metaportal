{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ContentBlock, MainContent, SectionRow, ContainerCustomTokenListSections, ItemListSection, ItemSelectionSection } from '../components/base/base';\nimport { TokensList } from '../components/TokensList/TokensList';\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection';\nimport { AccountButton } from '../components/account/AccountButton';\nimport { DomainSelectBoxContainer } from '../components/base/base';\nimport { DomainTitleContainer } from '../components/base/base';\nimport { useEthers } from '@usedapp/core';\nimport { useBadgeList } from '../portalHooks/useBadgeList';\nimport { Form } from 'react-bootstrap';\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice';\nimport { useAppDispatch } from '../hooks';\nimport { Badge } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tokens() {\n  _s();\n\n  const {\n    chainId,\n    account,\n    library\n  } = useEthers();\n  const badges = useBadgeList(account);\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar = index => {\n    dispatch(updatedSelectedItem({\n      index: index,\n      balance: 0,\n      holders: 0,\n      name: 'noname',\n      address: 'noaddress',\n      color: null\n    }));\n  };\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n  }, [account, chainId]);\n  return /*#__PURE__*/_jsxDEV(MainContent, {\n    children: /*#__PURE__*/_jsxDEV(ContainerCustomTokenListSections, {\n      children: [/*#__PURE__*/_jsxDEV(ItemListSection, {\n        children: [!account && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect your browser wallet to access the portal.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SectionRow, {\n          children: [account && /*#__PURE__*/_jsxDEV(DomainTitleContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Badges based on \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"on-chain activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              bg: \"dark\",\n              children: \"Ethereum Mainnet Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), account && /*#__PURE__*/_jsxDEV(DomainSelectBoxContainer, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Meta Portal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), account && /*#__PURE__*/_jsxDEV(ItemsContentBlock, {\n          children: /*#__PURE__*/_jsxDEV(TokensList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemSelectionSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionRow, {\n          children: [account && /*#__PURE__*/_jsxDEV(SignerXp, {\n            children: [badges ? badges.length * 10 : 0, \" XP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), account && /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), account && /*#__PURE__*/_jsxDEV(ItemsContentBlock, {\n          children: /*#__PURE__*/_jsxDEV(ItemSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tokens, \"qljtPg4p1m/2t4gcqVF80aOaCO4=\", false, function () {\n  return [useEthers, useBadgeList, useAppDispatch];\n});\n\n_c = Tokens;\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`;\n_c2 = ItemsContentBlock;\nconst SignerXp = styled.p`\n  font-size:18px;\n`;\n_c3 = SignerXp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tokens\");\n$RefreshReg$(_c2, \"ItemsContentBlock\");\n$RefreshReg$(_c3, \"SignerXp\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx"],"names":["React","useEffect","styled","ContentBlock","MainContent","SectionRow","ContainerCustomTokenListSections","ItemListSection","ItemSelectionSection","TokensList","ItemSelection","AccountButton","DomainSelectBoxContainer","DomainTitleContainer","useEthers","useBadgeList","Form","updatedSelectedItem","useAppDispatch","Badge","Tokens","chainId","account","library","badges","dispatch","handleApplyBadgeToAvatar","index","balance","holders","name","address","color","length","ItemsContentBlock","SignerXp","p"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ContainerCustom, ContentBlock, ContentBlockBackground, MainContent, Section, SectionRow, ContainerCustomTokenListSections,ItemListSection, ItemSelectionSection } from '../components/base/base'\nimport { TokensList } from '../components/TokensList/TokensList'\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection'\n\nimport { Title, DomainTitle } from '../typography/Title'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\nimport { DomainSelectBoxContainer } from '../components/base/base'\nimport { DomainTitleContainer } from '../components/base/base'\nimport { useEthers } from '@usedapp/core'\nimport { useBadgeList } from '../portalHooks/useBadgeList'\nimport { MetaBadge } from '../portalHooks/BadgeHelperTypes'\nimport {Form} from 'react-bootstrap'\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice'\nimport { useAppDispatch } from '../hooks'\nimport { RANDOM_VISOR_COLORS } from '../portalHooks/BadgeHelper'\nimport {Badge } from 'react-bootstrap'\n\nexport function Tokens() {\n  const { chainId, account, library } = useEthers();\n  const badges: MetaBadge[]| undefined = useBadgeList(account);\n\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar =(index: number) =>  {  \n    dispatch (updatedSelectedItem(\n      {\n        index: index,\n        balance: 0,\n        holders: 0,\n        name: 'noname',\n        address: 'noaddress',\n        color: null,\n      }\n    ))\n  }\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n\n  }, [account,chainId])\n\n  return (\n    <MainContent>\n      <ContainerCustomTokenListSections>\n  \n        <ItemListSection>\n        {!account && (\n            <div >\n              <p>Connect your browser wallet to access the portal.</p> <AccountButton />\n              </div>\n            )}\n          <SectionRow>\n            {account && <DomainTitleContainer>\n              <p>Badges based on <b>on-chain activity</b></p>\n              <Badge pill bg=\"dark\">Ethereum Mainnet Only</Badge>\n            </DomainTitleContainer>}\n\n            {account && <DomainSelectBoxContainer>\n              <Form.Select aria-label=\"Default select example\">\n                <option>Meta Portal</option>\n                <option value=\"1\">All</option>\n              </Form.Select>\n            </DomainSelectBoxContainer>}\n      \n          </SectionRow> \n        { account &&  <ItemsContentBlock>\n            <TokensList />\n          </ItemsContentBlock>}\n        </ItemListSection>\n        <ItemSelectionSection>\n          <SectionRow>\n           { account && <SignerXp>{badges ? (badges.length * 10): 0} XP</SignerXp>}\n          {account && <AccountButton />}\n\n          </SectionRow>\n          {account && <ItemsContentBlock>\n            <ItemSelection />\n          </ItemsContentBlock>}\n        </ItemSelectionSection>\n      </ContainerCustomTokenListSections>\n    </MainContent>\n  )\n}\n\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`\n\nconst SignerXp = styled.p`\n  font-size:18px;\n`\n"]},"metadata":{},"sourceType":"module"}