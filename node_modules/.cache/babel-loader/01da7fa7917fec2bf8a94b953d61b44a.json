{"ast":null,"code":"\"use strict\";\n/* istanbul ignore file - tricky to import some things from this module during testing */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.createSyntaxDiagramsCode = exports.clearCache = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0; // semantic version\n\nvar version_1 = require(\"./version\");\n\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function () {\n    return version_1.VERSION;\n  }\n});\n\nvar parser_1 = require(\"./parse/parser/parser\");\n\nObject.defineProperty(exports, \"CstParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.CstParser;\n  }\n});\nObject.defineProperty(exports, \"EmbeddedActionsParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EmbeddedActionsParser;\n  }\n});\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.ParserDefinitionErrorType;\n  }\n});\nObject.defineProperty(exports, \"EMPTY_ALT\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EMPTY_ALT;\n  }\n});\n\nvar lexer_public_1 = require(\"./scan/lexer_public\");\n\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.Lexer;\n  }\n});\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.LexerDefinitionErrorType;\n  }\n}); // Tokens utilities\n\nvar tokens_public_1 = require(\"./scan/tokens_public\");\n\nObject.defineProperty(exports, \"createToken\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createToken;\n  }\n});\nObject.defineProperty(exports, \"createTokenInstance\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createTokenInstance;\n  }\n});\nObject.defineProperty(exports, \"EOF\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.EOF;\n  }\n});\nObject.defineProperty(exports, \"tokenLabel\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenLabel;\n  }\n});\nObject.defineProperty(exports, \"tokenMatcher\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenMatcher;\n  }\n});\nObject.defineProperty(exports, \"tokenName\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenName;\n  }\n}); // Other Utilities\n\nvar errors_public_1 = require(\"./parse/errors_public\");\n\nObject.defineProperty(exports, \"defaultParserErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return errors_public_1.defaultParserErrorProvider;\n  }\n});\n\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\n\nObject.defineProperty(exports, \"EarlyExitException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.EarlyExitException;\n  }\n});\nObject.defineProperty(exports, \"isRecognitionException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.isRecognitionException;\n  }\n});\nObject.defineProperty(exports, \"MismatchedTokenException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.MismatchedTokenException;\n  }\n});\nObject.defineProperty(exports, \"NotAllInputParsedException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NotAllInputParsedException;\n  }\n});\nObject.defineProperty(exports, \"NoViableAltException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NoViableAltException;\n  }\n});\n\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\n\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return lexer_errors_public_1.defaultLexerErrorProvider;\n  }\n}); // grammar reflection API\n\nvar gast_public_1 = require(\"./parse/grammar/gast/gast_public\");\n\nObject.defineProperty(exports, \"Alternation\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Alternation;\n  }\n});\nObject.defineProperty(exports, \"Alternative\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Alternative;\n  }\n});\nObject.defineProperty(exports, \"NonTerminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.NonTerminal;\n  }\n});\nObject.defineProperty(exports, \"Option\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Option;\n  }\n});\nObject.defineProperty(exports, \"Repetition\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Repetition;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatory\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionMandatory;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionMandatoryWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"RepetitionWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"Rule\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Rule;\n  }\n});\nObject.defineProperty(exports, \"Terminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Terminal;\n  }\n}); // GAST Utilities\n\nvar gast_public_2 = require(\"./parse/grammar/gast/gast_public\");\n\nObject.defineProperty(exports, \"serializeGrammar\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_2.serializeGrammar;\n  }\n});\nObject.defineProperty(exports, \"serializeProduction\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_2.serializeProduction;\n  }\n});\n\nvar gast_visitor_public_1 = require(\"./parse/grammar/gast/gast_visitor_public\");\n\nObject.defineProperty(exports, \"GAstVisitor\", {\n  enumerable: true,\n  get: function () {\n    return gast_visitor_public_1.GAstVisitor;\n  }\n});\n/* istanbul ignore next */\n\nfunction clearCache() {\n  console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" + \"\\n\\t It performs no action other than printing this message.\" + \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\n\nexports.clearCache = clearCache;\n\nvar render_public_1 = require(\"./diagrams/render_public\");\n\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", {\n  enumerable: true,\n  get: function () {\n    return render_public_1.createSyntaxDiagramsCode;\n  }\n});\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser() {\n    throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" + \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n  }\n\n  return Parser;\n}();\n\nexports.Parser = Parser;","map":{"version":3,"sources":["../../src/api.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/* istanbul ignore file - tricky to import some things from this module during testing */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = exports.createSyntaxDiagramsCode = exports.clearCache = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0;\n// semantic version\nvar version_1 = require(\"./version\");\nObject.defineProperty(exports, \"VERSION\", { enumerable: true, get: function () { return version_1.VERSION; } });\nvar parser_1 = require(\"./parse/parser/parser\");\nObject.defineProperty(exports, \"CstParser\", { enumerable: true, get: function () { return parser_1.CstParser; } });\nObject.defineProperty(exports, \"EmbeddedActionsParser\", { enumerable: true, get: function () { return parser_1.EmbeddedActionsParser; } });\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", { enumerable: true, get: function () { return parser_1.ParserDefinitionErrorType; } });\nObject.defineProperty(exports, \"EMPTY_ALT\", { enumerable: true, get: function () { return parser_1.EMPTY_ALT; } });\nvar lexer_public_1 = require(\"./scan/lexer_public\");\nObject.defineProperty(exports, \"Lexer\", { enumerable: true, get: function () { return lexer_public_1.Lexer; } });\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", { enumerable: true, get: function () { return lexer_public_1.LexerDefinitionErrorType; } });\n// Tokens utilities\nvar tokens_public_1 = require(\"./scan/tokens_public\");\nObject.defineProperty(exports, \"createToken\", { enumerable: true, get: function () { return tokens_public_1.createToken; } });\nObject.defineProperty(exports, \"createTokenInstance\", { enumerable: true, get: function () { return tokens_public_1.createTokenInstance; } });\nObject.defineProperty(exports, \"EOF\", { enumerable: true, get: function () { return tokens_public_1.EOF; } });\nObject.defineProperty(exports, \"tokenLabel\", { enumerable: true, get: function () { return tokens_public_1.tokenLabel; } });\nObject.defineProperty(exports, \"tokenMatcher\", { enumerable: true, get: function () { return tokens_public_1.tokenMatcher; } });\nObject.defineProperty(exports, \"tokenName\", { enumerable: true, get: function () { return tokens_public_1.tokenName; } });\n// Other Utilities\nvar errors_public_1 = require(\"./parse/errors_public\");\nObject.defineProperty(exports, \"defaultParserErrorProvider\", { enumerable: true, get: function () { return errors_public_1.defaultParserErrorProvider; } });\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\nObject.defineProperty(exports, \"EarlyExitException\", { enumerable: true, get: function () { return exceptions_public_1.EarlyExitException; } });\nObject.defineProperty(exports, \"isRecognitionException\", { enumerable: true, get: function () { return exceptions_public_1.isRecognitionException; } });\nObject.defineProperty(exports, \"MismatchedTokenException\", { enumerable: true, get: function () { return exceptions_public_1.MismatchedTokenException; } });\nObject.defineProperty(exports, \"NotAllInputParsedException\", { enumerable: true, get: function () { return exceptions_public_1.NotAllInputParsedException; } });\nObject.defineProperty(exports, \"NoViableAltException\", { enumerable: true, get: function () { return exceptions_public_1.NoViableAltException; } });\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", { enumerable: true, get: function () { return lexer_errors_public_1.defaultLexerErrorProvider; } });\n// grammar reflection API\nvar gast_public_1 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"Alternation\", { enumerable: true, get: function () { return gast_public_1.Alternation; } });\nObject.defineProperty(exports, \"Alternative\", { enumerable: true, get: function () { return gast_public_1.Alternative; } });\nObject.defineProperty(exports, \"NonTerminal\", { enumerable: true, get: function () { return gast_public_1.NonTerminal; } });\nObject.defineProperty(exports, \"Option\", { enumerable: true, get: function () { return gast_public_1.Option; } });\nObject.defineProperty(exports, \"Repetition\", { enumerable: true, get: function () { return gast_public_1.Repetition; } });\nObject.defineProperty(exports, \"RepetitionMandatory\", { enumerable: true, get: function () { return gast_public_1.RepetitionMandatory; } });\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", { enumerable: true, get: function () { return gast_public_1.RepetitionMandatoryWithSeparator; } });\nObject.defineProperty(exports, \"RepetitionWithSeparator\", { enumerable: true, get: function () { return gast_public_1.RepetitionWithSeparator; } });\nObject.defineProperty(exports, \"Rule\", { enumerable: true, get: function () { return gast_public_1.Rule; } });\nObject.defineProperty(exports, \"Terminal\", { enumerable: true, get: function () { return gast_public_1.Terminal; } });\n// GAST Utilities\nvar gast_public_2 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"serializeGrammar\", { enumerable: true, get: function () { return gast_public_2.serializeGrammar; } });\nObject.defineProperty(exports, \"serializeProduction\", { enumerable: true, get: function () { return gast_public_2.serializeProduction; } });\nvar gast_visitor_public_1 = require(\"./parse/grammar/gast/gast_visitor_public\");\nObject.defineProperty(exports, \"GAstVisitor\", { enumerable: true, get: function () { return gast_visitor_public_1.GAstVisitor; } });\n/* istanbul ignore next */\nfunction clearCache() {\n    console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n        \"\\n\\t It performs no action other than printing this message.\" +\n        \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexports.clearCache = clearCache;\nvar render_public_1 = require(\"./diagrams/render_public\");\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", { enumerable: true, get: function () { return render_public_1.createSyntaxDiagramsCode; } });\nvar Parser = /** @class */ (function () {\n    function Parser() {\n        throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n            \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n    }\n    return Parser;\n}());\nexports.Parser = Parser;\n//# sourceMappingURL=api.js.map"]},"metadata":{},"sourceType":"script"}