{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ContentBlock } from '../components/base/base';\nimport { TokensList } from '../components/TokensList/TokensList';\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection';\nimport { AccountButton } from '../components/account/AccountButton';\nimport { CHAIN_NAMES, useEthers } from '@usedapp/core';\nimport { useBadgeList } from '../portalHooks/useBadgeList';\nimport { Form } from 'react-bootstrap';\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice';\nimport { useAppDispatch } from '../hooks';\nimport { Badge } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tokens() {\n  _s();\n\n  const {\n    chainId,\n    account,\n    library\n  } = useEthers();\n  const badges = useBadgeList(account);\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar = index => {\n    dispatch(updatedSelectedItem({\n      index: index,\n      balance: 0,\n      holders: 0,\n      name: 'noname',\n      address: 'noaddress',\n      color: null\n    }));\n  };\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n  }, [account, chainId]);\n  return (\n    /*#__PURE__*/\n    // <div style={{display: 'flex',overflow:'scroll' }}>\n    // { !account ? (\n    //   <ContainerCustom>\n    //     <Section>\n    //     <SignedOutContainer>\n    //     <Text style={{margin: '0.5em'}}> Connect browser wallet to access portal</Text>\n    //     <AccountButton />\n    //     </SignedOutContainer>\n    //     </Section>\n    //   </ContainerCustom>) :\n    //  (<ContainerCustomTokenListSections>\n    //    <ItemListSection>  \n    //      <SectionRow>\n    //        {account && <DomainTitleContainer>\n    //          <p>Badges based on <b>on-chain activity</b></p>\n    //          {chainId && <Badge pill bg=\"dark\">{CHAIN_NAMES[chainId]}</Badge>}\n    //        </DomainTitleContainer>}\n    //        {account && <DomainSelectBoxContainer>\n    //          <Form.Select aria-label=\"Default select example\">\n    //            <option>Meta Portal</option>\n    //          </Form.Select>\n    //        </DomainSelectBoxContainer>}\n    //      </SectionRow> \n    //    { account &&  <ItemsContentBlock>\n    //        <TokensList />\n    //      </ItemsContentBlock>}\n    //    </ItemListSection>\n    //    <ItemSelectionSection>\n    //      <SectionRowAvatar>\n    //       { account && <SignerXp>{badges ? (badges.length * 10): 0} XP</SignerXp>}\n    //      {account && <AccountButton />}\n    //      </SectionRowAvatar>\n    //      {account && <ItemsContentBlock>\n    //        <ItemSelection />\n    //      </ItemsContentBlock>}\n    //    </ItemSelectionSection>\n    //  </ContainerCustomTokenListSections>)\n    // }\n    // </div>\n    _jsxDEV(BadgesPageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BadgeListColumn, {\n        children: [/*#__PURE__*/_jsxDEV(BadgeListHeaderRow, {\n          children: [/*#__PURE__*/_jsxDEV(BadgeListHeaderInfoColumn, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Badges based on \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"on-chain activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), chainId && /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              bg: \"dark\",\n              children: CHAIN_NAMES[chainId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(BadgeListHeaderDropdownColumn, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Meta Portal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BadgeListRow, {\n          children: /*#__PURE__*/_jsxDEV(TokensList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AvatarColumn, {\n        children: [/*#__PURE__*/_jsxDEV(AvatarHeaderRow, {\n          children: [/*#__PURE__*/_jsxDEV(AvatarHeaderXPColumn, {\n            children: account && /*#__PURE__*/_jsxDEV(SignerXp, {\n              children: [badges ? badges.length * 10 : 0, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AvatarHeaderAccountSignInColumn, {\n            children: /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AvatarRow, {\n          children: /*#__PURE__*/_jsxDEV(ItemSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Tokens, \"qljtPg4p1m/2t4gcqVF80aOaCO4=\", false, function () {\n  return [useEthers, useBadgeList, useAppDispatch];\n});\n\n_c = Tokens;\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`;\nconst SignerXp = styled.p`\n  font-size:18px;\n`;\n_c2 = SignerXp;\nconst BadgesPageContainer = styled.div`\n  display: flex;\n  margin: 1em;\n  column-gap: 10px;\n  flex-flow: wrap-reverse;\n\n\n`;\n_c3 = BadgesPageContainer;\nconst BadgeListColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1; \n`;\n_c4 = BadgeListColumn;\nconst AvatarColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 20%;\n  flex-grow: 1; \n`;\n_c5 = AvatarColumn;\nconst BadgeListHeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1.5em;\n  min-height: 60px;\n  `;\n_c6 = BadgeListHeaderRow;\nconst BadgeListHeaderInfoColumn = styled.div`\n  flex-grow: 4; \n  `;\n_c7 = BadgeListHeaderInfoColumn;\nconst BadgeListHeaderDropdownColumn = styled.div`\n  flex-grow: 1; \n  `;\n_c8 = BadgeListHeaderDropdownColumn;\nconst BadgeListRow = styled.div`\n  background-color: aliceblue;\n  padding: 0.5em;\n  height: 500px;\n`;\n_c9 = BadgeListRow;\nconst AvatarHeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1.5em;\n  column-gap: 5px;\n  min-height: 60px;\n`;\n_c10 = AvatarHeaderRow;\nconst AvatarRow = styled.div`\n  display:flex;\n  background-color: aliceblue;\n  justify-content: center;\n  height: 500px;\n\n\n`;\n_c11 = AvatarRow;\nconst AvatarHeaderXPColumn = styled.div`\n`;\n_c12 = AvatarHeaderXPColumn;\nconst AvatarHeaderAccountSignInColumn = styled.div`\n`;\n_c13 = AvatarHeaderAccountSignInColumn;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Tokens\");\n$RefreshReg$(_c2, \"SignerXp\");\n$RefreshReg$(_c3, \"BadgesPageContainer\");\n$RefreshReg$(_c4, \"BadgeListColumn\");\n$RefreshReg$(_c5, \"AvatarColumn\");\n$RefreshReg$(_c6, \"BadgeListHeaderRow\");\n$RefreshReg$(_c7, \"BadgeListHeaderInfoColumn\");\n$RefreshReg$(_c8, \"BadgeListHeaderDropdownColumn\");\n$RefreshReg$(_c9, \"BadgeListRow\");\n$RefreshReg$(_c10, \"AvatarHeaderRow\");\n$RefreshReg$(_c11, \"AvatarRow\");\n$RefreshReg$(_c12, \"AvatarHeaderXPColumn\");\n$RefreshReg$(_c13, \"AvatarHeaderAccountSignInColumn\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx"],"names":["React","useEffect","styled","ContentBlock","TokensList","ItemSelection","AccountButton","CHAIN_NAMES","useEthers","useBadgeList","Form","updatedSelectedItem","useAppDispatch","Badge","Tokens","chainId","account","library","badges","dispatch","handleApplyBadgeToAvatar","index","balance","holders","name","address","color","length","ItemsContentBlock","SignerXp","p","BadgesPageContainer","div","BadgeListColumn","AvatarColumn","BadgeListHeaderRow","BadgeListHeaderInfoColumn","BadgeListHeaderDropdownColumn","BadgeListRow","AvatarHeaderRow","AvatarRow","AvatarHeaderXPColumn","AvatarHeaderAccountSignInColumn"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ContainerCustom, ContentBlock, SectionRowAvatar, MainContent, Section, SectionRow, SignedOutContainer,ContainerCustomTokenListSections,ItemListSection, ItemSelectionSection } from '../components/base/base'\nimport { TokensList } from '../components/TokensList/TokensList'\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection'\n\nimport { Title, DomainTitle } from '../typography/Title'\nimport { Text } from '../typography/Text'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\nimport { DomainSelectBoxContainer } from '../components/base/base'\nimport { DomainTitleContainer } from '../components/base/base'\nimport { CHAIN_NAMES, useEthers } from '@usedapp/core'\nimport { useBadgeList } from '../portalHooks/useBadgeList'\nimport { MetaBadge } from '../portalHooks/BadgeHelperTypes'\nimport {Form} from 'react-bootstrap'\nimport { updatedSelectedItem } from '../components/TokensList/SelectedItemSlice'\nimport { useAppDispatch } from '../hooks'\nimport { RANDOM_VISOR_COLORS } from '../portalHooks/BadgeHelper'\nimport {Badge } from 'react-bootstrap'\n\nexport function Tokens() {\n  const { chainId, account, library } = useEthers();\n  const badges: MetaBadge[]| undefined = useBadgeList(account);\n\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar =(index: number) =>  {  \n    dispatch (updatedSelectedItem(\n      {\n        index: index,\n        balance: 0,\n        holders: 0,\n        name: 'noname',\n        address: 'noaddress',\n        color: null,\n      }\n    ))\n  }\n\n  useEffect(() => {\n    // clearing badge selection when\n    // account ORR chainID changed\n    handleApplyBadgeToAvatar(0);\n\n  }, [account,chainId])\n\n  return (\n\n    // <div style={{display: 'flex',overflow:'scroll' }}>\n\n    // { !account ? (\n    //   <ContainerCustom>\n    //     <Section>\n    //     <SignedOutContainer>\n    //     <Text style={{margin: '0.5em'}}> Connect browser wallet to access portal</Text>\n    //     <AccountButton />\n    //     </SignedOutContainer>\n    //     </Section>\n    //   </ContainerCustom>) :\n    //  (<ContainerCustomTokenListSections>\n\n    //    <ItemListSection>  \n\n    //      <SectionRow>\n    //        {account && <DomainTitleContainer>\n    //          <p>Badges based on <b>on-chain activity</b></p>\n    //          {chainId && <Badge pill bg=\"dark\">{CHAIN_NAMES[chainId]}</Badge>}\n    //        </DomainTitleContainer>}\n\n    //        {account && <DomainSelectBoxContainer>\n    //          <Form.Select aria-label=\"Default select example\">\n    //            <option>Meta Portal</option>\n    //          </Form.Select>\n    //        </DomainSelectBoxContainer>}\n     \n    //      </SectionRow> \n\n    //    { account &&  <ItemsContentBlock>\n    //        <TokensList />\n    //      </ItemsContentBlock>}\n\n    //    </ItemListSection>\n\n    //    <ItemSelectionSection>\n    //      <SectionRowAvatar>\n    //       { account && <SignerXp>{badges ? (badges.length * 10): 0} XP</SignerXp>}\n    //      {account && <AccountButton />}\n    //      </SectionRowAvatar>\n\n      \n    //      {account && <ItemsContentBlock>\n    //        <ItemSelection />\n    //      </ItemsContentBlock>}\n    //    </ItemSelectionSection>\n    //  </ContainerCustomTokenListSections>)\n    // }\n\n    \n    // </div>\n\n    <BadgesPageContainer>\n\n      <BadgeListColumn>\n\n        <BadgeListHeaderRow>\n          <BadgeListHeaderInfoColumn>\n            <p>Badges based on <b>on-chain activity</b></p>\n            {chainId && <Badge pill bg=\"dark\">{CHAIN_NAMES[chainId]}</Badge>}          \n            </BadgeListHeaderInfoColumn>\n          <BadgeListHeaderDropdownColumn>\n            <Form.Select aria-label=\"Default select example\">\n              <option>Meta Portal</option>\n            </Form.Select>\n          </BadgeListHeaderDropdownColumn>\n        </BadgeListHeaderRow>\n        <BadgeListRow>\n          <TokensList />\n        </BadgeListRow>\n\n\n      </BadgeListColumn>\n\n\n\n      <AvatarColumn>\n\n        <AvatarHeaderRow>\n\n          <AvatarHeaderXPColumn>\n          { account && <SignerXp>{badges ? (badges.length * 10): 0} XP</SignerXp>}          \n          </AvatarHeaderXPColumn>\n\n          <AvatarHeaderAccountSignInColumn>\n              <AccountButton />\n          </AvatarHeaderAccountSignInColumn>\n\n        </AvatarHeaderRow>\n        <AvatarRow>\n          <ItemSelection />\n        </AvatarRow>\n      </AvatarColumn>\n\n    </BadgesPageContainer>\n\n  )\n}\n\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`\n\nconst SignerXp = styled.p`\n  font-size:18px;\n`\n\nconst BadgesPageContainer = styled.div `\n  display: flex;\n  margin: 1em;\n  column-gap: 10px;\n  flex-flow: wrap-reverse;\n\n\n`\nconst BadgeListColumn = styled.div `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1; \n`\n\nconst AvatarColumn = styled.div `\n  display: flex;\n  flex-direction: column;\n  flex-basis: 20%;\n  flex-grow: 1; \n`\n\nconst BadgeListHeaderRow = styled.div `\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1.5em;\n  min-height: 60px;\n  `\n  \n\n\nconst BadgeListHeaderInfoColumn = styled.div `\n  flex-grow: 4; \n  `\n\nconst BadgeListHeaderDropdownColumn = styled.div `\n  flex-grow: 1; \n  `\nconst BadgeListRow = styled.div`\n  background-color: aliceblue;\n  padding: 0.5em;\n  height: 500px;\n`\n\nconst AvatarHeaderRow = styled.div `\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1.5em;\n  column-gap: 5px;\n  min-height: 60px;\n`\n\nconst AvatarRow = styled.div`\n  display:flex;\n  background-color: aliceblue;\n  justify-content: center;\n  height: 500px;\n\n\n`\n\nconst AvatarHeaderXPColumn = styled.div `\n`\n\nconst AvatarHeaderAccountSignInColumn = styled.div `\n`\n"]},"metadata":{},"sourceType":"module"}