{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ContentBlock, MainContent, SectionRow, ContainerCustomTokenListSections, ItemListSection, ItemSelectionSection } from '../components/base/base';\nimport { TokensList } from '../components/TokensList/TokensList';\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection';\nimport { AccountButton } from '../components/account/AccountButton';\nimport { DomainSelectBoxContainer } from '../components/base/base';\nimport { DomainTitleContainer } from '../components/base/base';\nimport { useEthers } from '@usedapp/core';\nimport { useBadgeList } from '../portalHooks/useBadgeList';\nimport { Form } from 'react-bootstrap';\nimport { useAppDispatch } from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tokens() {\n  _s();\n\n  const {\n    chainId,\n    account,\n    library\n  } = useEthers();\n  const badges = useBadgeList(account);\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar = index => {\n    console.log('index : ', index);\n    dispatch(updatedSelectedItem({\n      index: index,\n      balance: 0,\n      holders: 0,\n      name: 'noname',\n      address: 'noaddress',\n      color: index >= 0 ? RANDOM_VISOR_COLORS[index] : null\n    }));\n  };\n\n  useEffect(() => {}, [account, chainId]);\n  return /*#__PURE__*/_jsxDEV(MainContent, {\n    children: /*#__PURE__*/_jsxDEV(ContainerCustomTokenListSections, {\n      children: [/*#__PURE__*/_jsxDEV(ItemListSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionRow, {\n          children: [/*#__PURE__*/_jsxDEV(DomainTitleContainer, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Badges based on \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"on-chain activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DomainSelectBoxContainer, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Meta Portal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ItemsContentBlock, {\n          children: /*#__PURE__*/_jsxDEV(TokensList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemSelectionSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionRow, {\n          children: [/*#__PURE__*/_jsxDEV(SignerXp, {\n            children: [badges ? badges.length * 10 : 0, \" XP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ItemsContentBlock, {\n          children: /*#__PURE__*/_jsxDEV(ItemSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tokens, \"brJbeeS7ZZfahcVxAt8PCX0H0gQ=\", false, function () {\n  return [useEthers, useBadgeList, useAppDispatch];\n});\n\n_c = Tokens;\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`;\n_c2 = ItemsContentBlock;\nconst SignerXp = styled.p`\n  font-size:18px;\n`;\n_c3 = SignerXp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tokens\");\n$RefreshReg$(_c2, \"ItemsContentBlock\");\n$RefreshReg$(_c3, \"SignerXp\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/pages/Tokens.tsx"],"names":["React","useEffect","styled","ContentBlock","MainContent","SectionRow","ContainerCustomTokenListSections","ItemListSection","ItemSelectionSection","TokensList","ItemSelection","AccountButton","DomainSelectBoxContainer","DomainTitleContainer","useEthers","useBadgeList","Form","useAppDispatch","Tokens","chainId","account","library","badges","dispatch","handleApplyBadgeToAvatar","index","console","log","updatedSelectedItem","balance","holders","name","address","color","RANDOM_VISOR_COLORS","length","ItemsContentBlock","SignerXp","p"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ContainerCustom, ContentBlock, ContentBlockBackground, MainContent, Section, SectionRow, ContainerCustomTokenListSections,ItemListSection, ItemSelectionSection } from '../components/base/base'\nimport { TokensList } from '../components/TokensList/TokensList'\nimport { ItemSelection } from '../components/ItemSelection/ItemSelection'\n\nimport { Title, DomainTitle } from '../typography/Title'\n\nimport { AccountButton } from '../components/account/AccountButton'\n\nimport { DomainSelectBoxContainer } from '../components/base/base'\nimport { DomainTitleContainer } from '../components/base/base'\nimport { useEthers } from '@usedapp/core'\nimport { useBadgeList } from '../portalHooks/useBadgeList'\nimport { Badge } from '../portalHooks/BadgeHelperTypes'\nimport {Form} from 'react-bootstrap'\nimport { useAppDispatch, useAppSelector } from '../../hooks'\n\n\n\nexport function Tokens() {\n  const { chainId, account, library } = useEthers();\n  const badges: Badge[]| undefined = useBadgeList(account);\n\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar =(index: number) =>  {\n    console.log('index : ',index)\n  \n    dispatch (updatedSelectedItem(\n      {\n        index: index,\n        balance: 0,\n        holders: 0,\n        name: 'noname',\n        address: 'noaddress',\n        color: index >= 0 ? RANDOM_VISOR_COLORS[index] : null,\n      }\n    ))\n\n  }\n\n  useEffect(() => {\n\n  }, [account,chainId])\n\n  return (\n    <MainContent>\n      <ContainerCustomTokenListSections>\n        <ItemListSection>\n          <SectionRow>\n            <DomainTitleContainer>\n              {/* <DomainTitle> Meta Portal </DomainTitle> */}\n              <p>Badges based on <b>on-chain activity</b></p>\n            </DomainTitleContainer>\n            <DomainSelectBoxContainer>\n              <Form.Select aria-label=\"Default select example\">\n                <option>Meta Portal</option>\n                <option value=\"1\">All</option>\n              </Form.Select>\n            </DomainSelectBoxContainer>\n     \n          </SectionRow> \n          <ItemsContentBlock>\n            <TokensList />\n          </ItemsContentBlock>\n        </ItemListSection>\n        <ItemSelectionSection>\n          <SectionRow>\n            <SignerXp>{badges ? (badges.length * 10): 0} XP</SignerXp>\n            <AccountButton />\n\n          </SectionRow>\n          <ItemsContentBlock>\n            <ItemSelection />\n          </ItemsContentBlock>\n        </ItemSelectionSection>\n      </ContainerCustomTokenListSections>\n    </MainContent>\n  )\n}\n\nconst ItemsContentBlock = styled(ContentBlock)`\n  overflow: scroll;\n`\n\nconst SignerXp = styled.p`\n  font-size:18px;\n`\n"]},"metadata":{},"sourceType":"module"}