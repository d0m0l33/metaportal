{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GAstVisitor = void 0;\n\nvar gast_public_1 = require(\"./gast_public\");\n\nvar GAstVisitor =\n/** @class */\nfunction () {\n  function GAstVisitor() {}\n\n  GAstVisitor.prototype.visit = function (node) {\n    var nodeAny = node;\n\n    switch (nodeAny.constructor) {\n      case gast_public_1.NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n\n      case gast_public_1.Alternative:\n        return this.visitAlternative(nodeAny);\n\n      case gast_public_1.Option:\n        return this.visitOption(nodeAny);\n\n      case gast_public_1.RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n\n      case gast_public_1.RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n\n      case gast_public_1.RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n\n      case gast_public_1.Repetition:\n        return this.visitRepetition(nodeAny);\n\n      case gast_public_1.Alternation:\n        return this.visitAlternation(nodeAny);\n\n      case gast_public_1.Terminal:\n        return this.visitTerminal(nodeAny);\n\n      case gast_public_1.Rule:\n        return this.visitRule(nodeAny);\n\n      /* istanbul ignore next */\n\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  };\n\n  GAstVisitor.prototype.visitNonTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitAlternative = function (node) {};\n\n  GAstVisitor.prototype.visitOption = function (node) {};\n\n  GAstVisitor.prototype.visitRepetition = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatory = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitAlternation = function (node) {};\n\n  GAstVisitor.prototype.visitTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitRule = function (node) {};\n\n  return GAstVisitor;\n}();\n\nexports.GAstVisitor = GAstVisitor;","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast_visitor_public.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAcA,IAAA,WAAA;AAAA;AAAA,YAAA;AAAA,WAAA,WAAA,GAAA,CAmDC;;AAlDQ,EAAA,WAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,IAAb,EAA8B;AAC5B,QAAM,OAAO,GAAQ,IAArB;;AACA,YAAQ,OAAO,CAAC,WAAhB;AACE,WAAK,aAAA,CAAA,WAAL;AACE,eAAO,KAAK,gBAAL,CAAsB,OAAtB,CAAP;;AACF,WAAK,aAAA,CAAA,WAAL;AACE,eAAO,KAAK,gBAAL,CAAsB,OAAtB,CAAP;;AACF,WAAK,aAAA,CAAA,MAAL;AACE,eAAO,KAAK,WAAL,CAAiB,OAAjB,CAAP;;AACF,WAAK,aAAA,CAAA,mBAAL;AACE,eAAO,KAAK,wBAAL,CAA8B,OAA9B,CAAP;;AACF,WAAK,aAAA,CAAA,gCAAL;AACE,eAAO,KAAK,qCAAL,CAA2C,OAA3C,CAAP;;AACF,WAAK,aAAA,CAAA,uBAAL;AACE,eAAO,KAAK,4BAAL,CAAkC,OAAlC,CAAP;;AACF,WAAK,aAAA,CAAA,UAAL;AACE,eAAO,KAAK,eAAL,CAAqB,OAArB,CAAP;;AACF,WAAK,aAAA,CAAA,WAAL;AACE,eAAO,KAAK,gBAAL,CAAsB,OAAtB,CAAP;;AACF,WAAK,aAAA,CAAA,QAAL;AACE,eAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;;AACF,WAAK,aAAA,CAAA,IAAL;AACE,eAAO,KAAK,SAAL,CAAe,OAAf,CAAP;;AACF;;AACA;AACE,cAAM,KAAK,CAAC,sBAAD,CAAX;AAvBJ;AAyBD,GA3BM;;AA6BA,EAAA,WAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,IAAxB,EAAyC,CAAS,CAA3C;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,IAAxB,EAAyC,CAAS,CAA3C;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAA+B,CAAS,CAAjC;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,IAAvB,EAAuC,CAAS,CAAzC;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,wBAAA,GAAP,UAAgC,IAAhC,EAAyD,CAAS,CAA3D;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,qCAAA,GAAP,UACE,IADF,EACwC,CAC/B,CAFF;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,4BAAA,GAAP,UAAoC,IAApC,EAAiE,CAAS,CAAnE;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,IAAxB,EAAyC,CAAS,CAA3C;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,IAArB,EAAmC,CAAS,CAArC;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,IAAjB,EAA2B,CAAS,CAA7B;;AACT,SAAA,WAAA;AAAC,CAnDD,EAAA;;AAAsB,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GAstVisitor = void 0;\nvar gast_public_1 = require(\"./gast_public\");\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        var nodeAny = node;\n        switch (nodeAny.constructor) {\n            case gast_public_1.NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case gast_public_1.Alternative:\n                return this.visitAlternative(nodeAny);\n            case gast_public_1.Option:\n                return this.visitOption(nodeAny);\n            case gast_public_1.RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case gast_public_1.RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case gast_public_1.RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case gast_public_1.Repetition:\n                return this.visitRepetition(nodeAny);\n            case gast_public_1.Alternation:\n                return this.visitAlternation(nodeAny);\n            case gast_public_1.Terminal:\n                return this.visitTerminal(nodeAny);\n            case gast_public_1.Rule:\n                return this.visitRule(nodeAny);\n            /* istanbul ignore next */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitAlternative = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\nexports.GAstVisitor = GAstVisitor;\n//# sourceMappingURL=gast_visitor_public.js.map"]},"metadata":{},"sourceType":"script"}