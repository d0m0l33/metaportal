{"ast":null,"code":"class ARButton {\n  static createButton(renderer) {\n    let sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const button = document.createElement('button');\n\n    function showStartAR()\n    /*device*/\n    {\n      if (sessionInit.domOverlay === undefined) {\n        var overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', 38);\n        svg.setAttribute('height', 38);\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          currentSession.end();\n        });\n        overlay.appendChild(svg);\n        var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', 2);\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/three-stdlib/webxr/ARButton.js"],"names":["ARButton","createButton","renderer","sessionInit","button","document","createElement","showStartAR","domOverlay","undefined","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"mappings":"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","sourcesContent":["class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function showStartAR()\n    /*device*/\n    {\n      if (sessionInit.domOverlay === undefined) {\n        var overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', 38);\n        svg.setAttribute('height', 38);\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          currentSession.end();\n        });\n        overlay.appendChild(svg);\n        var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', 2);\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };\n"]},"metadata":{},"sourceType":"module"}