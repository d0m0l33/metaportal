{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/badge/BadgeOverviewModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useEthers, getExplorerAddressLink, useEtherBalance, useContractFunction } from '@usedapp/core';\nimport { formatEther } from '@ethersproject/units';\nimport { BigNumber, utils } from 'ethers';\nimport { Colors, Shadows, Transitions } from '../../global/styles';\nimport { ShareIcon } from '../Transactions/Icons';\nimport { motion } from 'framer-motion';\nimport { Link } from '../base/Link';\nimport { RequirementsList } from './BadgeRequirementsList';\nimport { Contract } from '@ethersproject/contracts';\nimport { useAppDispatch } from '../../hooks';\nimport { updatedSelectedItem } from '../TokensList/SelectedItemSlice';\nimport { RANDOM_VISOR_COLORS } from '../../portalHooks/BadgeHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4\n});\n\nconst formatBalance = balance => formatter.format(parseFloat(formatEther(balance !== null && balance !== void 0 ? balance : BigNumber.from('0'))));\n\nexport const VisorsABI = [\"function requestMint(uint256 visorId) public payable\"];\nexport const BadgeOverviewModal = _ref => {\n  _s();\n\n  let {\n    setShowModal,\n    badgeParams\n  } = _ref;\n  const {\n    account,\n    chainId,\n    library\n  } = useEthers();\n  const balance = useEtherBalance(account);\n  const visorInterface = new utils.Interface(VisorsABI);\n  const signer = library === null || library === void 0 ? void 0 : library.getSigner();\n  let contract = null;\n\n  if (badgeParams.address && badgeParams.address !== undefined) {\n    contract = new Contract(badgeParams.address, visorInterface, signer);\n  } else {\n    contract = new Contract('0x0000000000000000000000000000000000000000', visorInterface, signer);\n  }\n\n  const {\n    send\n  } = useContractFunction(contract, 'requestMint', {\n    signer: signer,\n    transactionName: 'Mint'\n  });\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar = index => {\n    dispatch(updatedSelectedItem({\n      index: index,\n      balance: 0,\n      holders: 0,\n      name: 'noname',\n      address: 'noaddress',\n      color: index >= 0 ? RANDOM_VISOR_COLORS[index] : null\n    }));\n  };\n\n  const doMint = async visorId => {\n    let overrides = {\n      value: utils.parseEther('0.0001')\n    };\n    send([1], overrides);\n  };\n\n  if (account && chainId) {\n    return /*#__PURE__*/_jsxDEV(ModalBackground, {\n      onClick: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        onClick: e => e.stopPropagation(),\n        layout: true,\n        initial: {\n          opacity: 0,\n          y: -50\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(TitleRow, {\n          children: [\"Badge Details\", /*#__PURE__*/_jsxDEV(ClosingButton, {\n            onClick: () => setShowModal(false),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n          children: [badgeParams && /*#__PURE__*/_jsxDEV(AccountAddress, {\n            children: badgeParams.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }, this), badgeParams && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Portal Item : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: badgeParams.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), badgeParams.address && badgeParams.address && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mint : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: badgeParams.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 60\n          }, this), badgeParams && badgeParams.address && /*#__PURE__*/_jsxDEV(LinkWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: getExplorerAddressLink(badgeParams.address, chainId),\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [\"Show on etherscan\", /*#__PURE__*/_jsxDEV(LinkIconWrapper, {\n                children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), window.isSecureContext && /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => console.log(navigator.clipboard.writeText(badgeParams.address ? badgeParams.address : '')),\n              children: \"Copy to clipboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), badgeParams && badgeParams.address && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BalanceWrapper, {\n              children: \"Balance: 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MintButton, {\n              onClick: () => doMint(badgeParams.tokenId ? badgeParams.tokenId : 0),\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ApplyButton, {\n            onClick: () => handleApplyBadgeToAvatar(badgeParams.tokenId ? badgeParams.tokenId : 0),\n            children: \"Apply Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HistoryWrapper, {\n          children: /*#__PURE__*/_jsxDEV(RequirementsList, {\n            requirements: badgeParams.requirements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  } else {\n    setShowModal(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(BadgeOverviewModal, \"+IVeCQFkmnciwWVO6vLwM5o59TY=\", false, function () {\n  return [useEthers, useEtherBalance, useContractFunction, useAppDispatch];\n});\n\n_c = BadgeOverviewModal;\nexport const Button = styled.button`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 8px;\n  align-items: center;\n  padding: 5px;\n  width: fit-content;\n  height: 40px;\n  font-size: 14px;\n  line-height: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  color: ${Colors.Black[900]};\n  border: 1px solid ${Colors.Black[900]};\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${Colors.Black[900]};\n    color: ${Colors.Yellow[100]};\n  }\n`;\nconst MintButton = styled(Button)`\n  margin-bottom: 5px;\n  background-color: ${Colors.Yellow[100]};\n`;\n_c2 = MintButton;\nconst ApplyButton = styled(Button)`\n  margin-bottom: 5px;\n  background-color: ${Colors.Gray[300]};\n`;\n_c3 = ApplyButton;\nconst LinkWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n`;\n_c4 = LinkWrapper;\nconst LinkIconWrapper = styled.div`\n  width: 12px;\n  height: 12px;\n`;\n_c5 = LinkIconWrapper;\nconst BalanceWrapper = styled.div`\n  margin-top: 12px;\n`;\n_c6 = BalanceWrapper;\nconst HistoryWrapper = styled.div``;\n_c7 = HistoryWrapper;\nconst AccountAddress = styled.p`\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n_c8 = AccountAddress;\nconst ClosingButton = styled.button`\n  display: flex;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n  line-height: 1;\n  width: 24px;\n  height: 24px;\n  transform: rotate(45deg);\n  transition: ${Transitions.all};\n\n  &:hover {\n    color: ${Colors.Yellow[500]};\n  }\n`;\n_c9 = ClosingButton;\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 16px;\n  width: 100%;\n  font-size: 20px;\n`;\n_c10 = TitleRow;\nconst AccountInfo = styled.div`\n  display: block;\n  margin: 16px;\n  padding: 16px;\n  border-radius: 10px;\n  box-shadow: ${Shadows.main};\n  background-color: ${Colors.White};\n`;\n_c11 = AccountInfo;\nconst Modal = styled(motion.div)`\n  position: fixed;\n  width: 600px;\n\n  left: calc(50% - 300px);\n  top: 100px;\n  background-color: white;\n  box-shadow: ${Shadows.main};\n  border-radius: 10px;\n  z-index: 3;\n`;\n_c12 = Modal;\nconst ModalBackground = styled(motion.div)`\n  top: 0;\n  left: 0;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  z-index: 2;\n  background-color: rgba(235, 232, 223, 0.5);\n`;\n_c13 = ModalBackground;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"BadgeOverviewModal\");\n$RefreshReg$(_c2, \"MintButton\");\n$RefreshReg$(_c3, \"ApplyButton\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"LinkIconWrapper\");\n$RefreshReg$(_c6, \"BalanceWrapper\");\n$RefreshReg$(_c7, \"HistoryWrapper\");\n$RefreshReg$(_c8, \"AccountAddress\");\n$RefreshReg$(_c9, \"ClosingButton\");\n$RefreshReg$(_c10, \"TitleRow\");\n$RefreshReg$(_c11, \"AccountInfo\");\n$RefreshReg$(_c12, \"Modal\");\n$RefreshReg$(_c13, \"ModalBackground\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/badge/BadgeOverviewModal.tsx"],"names":["React","styled","useEthers","getExplorerAddressLink","useEtherBalance","useContractFunction","formatEther","BigNumber","utils","Colors","Shadows","Transitions","ShareIcon","motion","Link","RequirementsList","Contract","useAppDispatch","updatedSelectedItem","RANDOM_VISOR_COLORS","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","VisorsABI","BadgeOverviewModal","setShowModal","badgeParams","account","chainId","library","visorInterface","Interface","signer","getSigner","contract","address","undefined","send","transactionName","dispatch","handleApplyBadgeToAvatar","index","holders","name","color","doMint","visorId","overrides","value","parseEther","e","stopPropagation","opacity","y","description","window","isSecureContext","console","log","navigator","clipboard","writeText","tokenId","requirements","Button","button","Black","Yellow","MintButton","ApplyButton","Gray","LinkWrapper","div","LinkIconWrapper","BalanceWrapper","HistoryWrapper","AccountAddress","p","ClosingButton","all","TitleRow","AccountInfo","main","White","Modal","ModalBackground"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useEthers, getExplorerAddressLink, useEtherBalance, useContractFunction } from '@usedapp/core'\nimport { TransactionsList } from '../Transactions/History'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumber, utils } from 'ethers'\nimport { Colors, Shadows, Transitions } from '../../global/styles'\nimport { ShareIcon } from '../Transactions/Icons'\nimport { motion } from 'framer-motion'\nimport { Link } from '../base/Link'\nimport { RequirementsList } from './BadgeRequirementsList'\nimport { Contract } from '@ethersproject/contracts'\nimport { useAppDispatch, useAppSelector } from '../../hooks'\nimport { updatedSelectedItem } from '../TokensList/SelectedItemSlice'\nimport { RANDOM_VISOR_COLORS } from '../../portalHooks/BadgeHelper'\n\n\n\nexport interface BadgeParams {\n  name: string, \n  description: string,\n  requirements: string[],\n  address: string | null,\n  tokenId: number | null\n}\n\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\nexport type BadgeOverviewModalProps = {\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>,\n  badgeParams: BadgeParams\n}\n\nexport const VisorsABI = [\n  \"function requestMint(uint256 visorId) public payable\",\n];\n\n\nexport const BadgeOverviewModal = ({ setShowModal, badgeParams }: BadgeOverviewModalProps) => {\n  const { account, chainId, library } = useEthers()\n  const balance = useEtherBalance(account)\n  const visorInterface = new utils.Interface(VisorsABI)\n  const signer = library?.getSigner();\n  let contract: Contract|null = null;\n  if (badgeParams.address && badgeParams.address !== undefined) {\n    contract =  new Contract(badgeParams.address, visorInterface, signer);\n  }  \n  else {\n    contract =  new Contract('0x0000000000000000000000000000000000000000', visorInterface, signer);\n  }\n  const { send } = useContractFunction(contract, 'requestMint', { signer: signer,  transactionName: 'Mint' });\n\n  const dispatch = useAppDispatch();\n\n  const handleApplyBadgeToAvatar =(index: number) =>  {\n  \n    dispatch (updatedSelectedItem(\n      {\n        index: index,\n        balance: 0,\n        holders: 0,\n        name: 'noname',\n        address: 'noaddress',\n        color: index >= 0 ? RANDOM_VISOR_COLORS[index] : null,\n      }\n    ))\n\n  }\n\n  const doMint = async (visorId: number) => {\n    let overrides = {\n      value: utils.parseEther('0.0001')\n    };\n    send([1],overrides);\n  }  \n  if (account && chainId) {\n    return (\n      <ModalBackground onClick={() => setShowModal(false)}>\n        <Modal\n          onClick={(e) => e.stopPropagation()}\n          layout\n          initial={{ opacity: 0, y: -50 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0 }}\n        >\n          <TitleRow>\n            Badge Details\n            <ClosingButton onClick={() => setShowModal(false)}>+</ClosingButton>\n          </TitleRow>\n          <AccountInfo>\n          {badgeParams && <AccountAddress>{badgeParams.name}</AccountAddress>}\n    {badgeParams && <p>Portal Item : <b>{badgeParams.description}</b></p>}\n          {(badgeParams.address && badgeParams.address) && <p>Mint : <b>{badgeParams.address}</b></p>\n}\n          {       \n            (badgeParams && badgeParams.address) &&\n            <LinkWrapper>\n              <Link href={getExplorerAddressLink(badgeParams.address, chainId)} target=\"_blank\" rel=\"noopener noreferrer\">\n                Show on etherscan\n                <LinkIconWrapper>\n                  <ShareIcon />\n                </LinkIconWrapper>\n              </Link>\n              {window.isSecureContext && (\n                <Link onClick={() => console.log(navigator.clipboard.writeText(badgeParams.address ? badgeParams.address : ''))}>Copy to clipboard</Link>\n              )}\n            </LinkWrapper>\n            }\n        {   (badgeParams && badgeParams.address) && \n            <>\n            <BalanceWrapper>Balance: 4</BalanceWrapper> \n            <MintButton onClick={() => doMint(badgeParams.tokenId ? badgeParams.tokenId : 0)} >Mint</MintButton>   \n            </>\n            }         \n                    <ApplyButton onClick={() => handleApplyBadgeToAvatar(badgeParams.tokenId ? badgeParams.tokenId : 0)}>Apply Item</ApplyButton>\n          </AccountInfo>\n          <HistoryWrapper>\n  \n            <RequirementsList requirements={badgeParams.requirements}/>\n          </HistoryWrapper>\n        </Modal>\n      </ModalBackground>\n    )\n  } else {\n    setShowModal(false)\n    return <div />\n  }\n}\n\nexport const Button = styled.button`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 8px;\n  align-items: center;\n  padding: 5px;\n  width: fit-content;\n  height: 40px;\n  font-size: 14px;\n  line-height: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  color: ${Colors.Black[900]};\n  border: 1px solid ${Colors.Black[900]};\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${Colors.Black[900]};\n    color: ${Colors.Yellow[100]};\n  }\n`\n\nconst MintButton = styled(Button)`\n  margin-bottom: 5px;\n  background-color: ${Colors.Yellow[100]};\n`\n\nconst ApplyButton = styled(Button)`\n  margin-bottom: 5px;\n  background-color: ${Colors.Gray[300]};\n`\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n`\n\nconst LinkIconWrapper = styled.div`\n  width: 12px;\n  height: 12px;\n`\n\nconst BalanceWrapper = styled.div`\n  margin-top: 12px;\n`\n\nconst HistoryWrapper = styled.div``\n\nconst AccountAddress = styled.p`\n  font-weight: 700;\n  margin-bottom: 10px;\n`\n\nconst ClosingButton = styled.button`\n  display: flex;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n  line-height: 1;\n  width: 24px;\n  height: 24px;\n  transform: rotate(45deg);\n  transition: ${Transitions.all};\n\n  &:hover {\n    color: ${Colors.Yellow[500]};\n  }\n`\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 16px;\n  width: 100%;\n  font-size: 20px;\n`\n\nconst AccountInfo = styled.div`\n  display: block;\n  margin: 16px;\n  padding: 16px;\n  border-radius: 10px;\n  box-shadow: ${Shadows.main};\n  background-color: ${Colors.White};\n`\n\nconst Modal = styled(motion.div)`\n  position: fixed;\n  width: 600px;\n\n  left: calc(50% - 300px);\n  top: 100px;\n  background-color: white;\n  box-shadow: ${Shadows.main};\n  border-radius: 10px;\n  z-index: 3;\n`\n\nconst ModalBackground = styled(motion.div)`\n  top: 0;\n  left: 0;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  z-index: 2;\n  background-color: rgba(235, 232, 223, 0.5);\n`\n"]},"metadata":{},"sourceType":"module"}