{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three'; // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"setPolarAngle\", void 0);\n\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"getDistance\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchEnd();\n      } else {\n        onMouseUp();\n      }\n\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportalpublic/node_modules/three-stdlib/controls/OrbitControls.js"],"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","moduloWrapAround","offset","capacity","OrbitControls","constructor","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","value","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","_scope$domElement7","_scope$domElement8","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","removePointer","_scope$domElement9","_scope$domElement10","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","pointerId","i","splice","undefined","pointer","MapControls"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"setPolarAngle\", void 0);\n\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"getDistance\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchEnd();\n      } else {\n        onMouseUp();\n      }\n\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"]},"metadata":{},"sourceType":"module"}