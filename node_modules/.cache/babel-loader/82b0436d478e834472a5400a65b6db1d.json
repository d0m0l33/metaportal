{"ast":null,"code":"import { Vector2, Vector3, Triangle } from 'three'; // sets the vertices of triangle `tri` with the 3 vertices after i\n\nexport function setTriangle(tri, i, index, pos) {\n  var ta = tri.a;\n  var tb = tri.b;\n  var tc = tri.c;\n  var i0 = i;\n  var i1 = i + 1;\n  var i2 = i + 2;\n\n  if (index) {\n    i0 = index.getX(i);\n    i1 = index.getX(i + 1);\n    i2 = index.getX(i + 2);\n  }\n\n  ta.x = pos.getX(i0);\n  ta.y = pos.getY(i0);\n  ta.z = pos.getZ(i0);\n  tb.x = pos.getX(i1);\n  tb.y = pos.getY(i1);\n  tb.z = pos.getZ(i1);\n  tc.x = pos.getX(i2);\n  tc.y = pos.getY(i2);\n  tc.z = pos.getZ(i2);\n}\nexport function iterateOverTriangles(offset, count, geometry, intersectsTriangleFunc, contained, depth, triangle) {\n  var index = geometry.index;\n  var pos = geometry.attributes.position;\n\n  for (var i = offset, l = count + offset; i < l; i++) {\n    setTriangle(triangle, i * 3, index, pos);\n    triangle.needsUpdate = true;\n\n    if (intersectsTriangleFunc(triangle, i, contained, depth)) {\n      return true;\n    }\n  }\n\n  return false;\n}\nvar tempV1 = /* @__PURE__ */new Vector3();\nvar tempV2 = /* @__PURE__ */new Vector3();\nvar tempV3 = /* @__PURE__ */new Vector3();\nvar tempUV1 = /* @__PURE__ */new Vector2();\nvar tempUV2 = /* @__PURE__ */new Vector2();\nvar tempUV3 = /* @__PURE__ */new Vector2();\nexport function getTriangleHitPointInfo(point, geometry, triangleIndex, target) {\n  var indices = geometry.getIndex().array;\n  var positions = geometry.getAttribute('position');\n  var uvs = geometry.getAttribute('uv');\n  var a = indices[triangleIndex * 3];\n  var b = indices[triangleIndex * 3 + 1];\n  var c = indices[triangleIndex * 3 + 2];\n  tempV1.fromBufferAttribute(positions, a);\n  tempV2.fromBufferAttribute(positions, b);\n  tempV3.fromBufferAttribute(positions, c); // find the associated material index\n\n  var materialIndex = 0;\n  var groups = geometry.groups;\n  var firstVertexIndex = triangleIndex * 3;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    var start = group.start,\n        count = group.count;\n\n    if (firstVertexIndex >= start && firstVertexIndex < start + count) {\n      materialIndex = group.materialIndex;\n      break;\n    }\n  } // extract uvs\n\n\n  var uv = null;\n\n  if (uvs) {\n    tempUV1.fromBufferAttribute(uvs, a);\n    tempUV2.fromBufferAttribute(uvs, b);\n    tempUV3.fromBufferAttribute(uvs, c);\n    if (target && target.uv) uv = target.uv;else uv = new Vector2();\n    Triangle.getUV(point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv);\n  } // adjust the provided target or create a new one\n\n\n  if (target) {\n    if (!target.face) target.face = {};\n    target.face.a = a;\n    target.face.b = b;\n    target.face.c = c;\n    target.face.materialIndex = materialIndex;\n    if (!target.face.normal) target.face.normal = new Vector3();\n    Triangle.getNormal(tempV1, tempV2, tempV3, target.face.normal);\n    if (!target.uv) target.uv = new Vector2();\n    target.uv.copy(uv);\n    return target;\n  } else {\n    return {\n      face: {\n        a: a,\n        b: b,\n        c: c,\n        materialIndex: materialIndex,\n        normal: Triangle.getNormal(tempV1, tempV2, tempV3, new Vector3())\n      },\n      uv: uv\n    };\n  }\n}","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/three-mesh-bvh/src/utils/TriangleUtilities.js"],"names":["Vector2","Vector3","Triangle","setTriangle","tri","i","index","pos","ta","a","tb","b","tc","c","i0","i1","i2","getX","x","y","getY","z","getZ","iterateOverTriangles","offset","count","geometry","intersectsTriangleFunc","contained","depth","triangle","attributes","position","l","needsUpdate","tempV1","tempV2","tempV3","tempUV1","tempUV2","tempUV3","getTriangleHitPointInfo","point","triangleIndex","target","indices","getIndex","array","positions","getAttribute","uvs","fromBufferAttribute","materialIndex","groups","firstVertexIndex","length","group","start","uv","getUV","face","normal","getNormal","copy"],"mappings":"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","sourcesContent":["\r\nimport { Vector2, Vector3, Triangle } from 'three';\r\n\r\n// sets the vertices of triangle `tri` with the 3 vertices after i\r\nexport function setTriangle( tri, i, index, pos ) {\r\n\r\n\tconst ta = tri.a;\r\n\tconst tb = tri.b;\r\n\tconst tc = tri.c;\r\n\r\n\tlet i0 = i;\r\n\tlet i1 = i + 1;\r\n\tlet i2 = i + 2;\r\n\tif ( index ) {\r\n\r\n\t\ti0 = index.getX( i );\r\n\t\ti1 = index.getX( i + 1 );\r\n\t\ti2 = index.getX( i + 2 );\r\n\r\n\t}\r\n\r\n\tta.x = pos.getX( i0 );\r\n\tta.y = pos.getY( i0 );\r\n\tta.z = pos.getZ( i0 );\r\n\r\n\ttb.x = pos.getX( i1 );\r\n\ttb.y = pos.getY( i1 );\r\n\ttb.z = pos.getZ( i1 );\r\n\r\n\ttc.x = pos.getX( i2 );\r\n\ttc.y = pos.getY( i2 );\r\n\ttc.z = pos.getZ( i2 );\r\n\r\n}\r\n\r\nexport function iterateOverTriangles(\r\n\toffset,\r\n\tcount,\r\n\tgeometry,\r\n\tintersectsTriangleFunc,\r\n\tcontained,\r\n\tdepth,\r\n\ttriangle\r\n) {\r\n\r\n\tconst index = geometry.index;\r\n\tconst pos = geometry.attributes.position;\r\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\r\n\r\n\t\tsetTriangle( triangle, i * 3, index, pos );\r\n\t\ttriangle.needsUpdate = true;\r\n\r\n\t\tif ( intersectsTriangleFunc( triangle, i, contained, depth ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nconst tempV1 = /* @__PURE__ */ new Vector3();\r\nconst tempV2 = /* @__PURE__ */ new Vector3();\r\nconst tempV3 = /* @__PURE__ */ new Vector3();\r\nconst tempUV1 = /* @__PURE__ */ new Vector2();\r\nconst tempUV2 = /* @__PURE__ */ new Vector2();\r\nconst tempUV3 = /* @__PURE__ */ new Vector2();\r\n\r\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\r\n\r\n\tconst indices = geometry.getIndex().array;\r\n\tconst positions = geometry.getAttribute( 'position' );\r\n\tconst uvs = geometry.getAttribute( 'uv' );\r\n\r\n\tconst a = indices[ triangleIndex * 3 ];\r\n\tconst b = indices[ triangleIndex * 3 + 1 ];\r\n\tconst c = indices[ triangleIndex * 3 + 2 ];\r\n\r\n\ttempV1.fromBufferAttribute( positions, a );\r\n\ttempV2.fromBufferAttribute( positions, b );\r\n\ttempV3.fromBufferAttribute( positions, c );\r\n\r\n\t// find the associated material index\r\n\tlet materialIndex = 0;\r\n\tconst groups = geometry.groups;\r\n\tconst firstVertexIndex = triangleIndex * 3;\r\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tconst group = groups[ i ];\r\n\t\tconst { start, count } = group;\r\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\r\n\r\n\t\t\tmaterialIndex = group.materialIndex;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// extract uvs\r\n\tlet uv = null;\r\n\tif ( uvs ) {\r\n\r\n\t\ttempUV1.fromBufferAttribute( uvs, a );\r\n\t\ttempUV2.fromBufferAttribute( uvs, b );\r\n\t\ttempUV3.fromBufferAttribute( uvs, c );\r\n\r\n\t\tif ( target && target.uv ) uv = target.uv;\r\n\t\telse uv = new Vector2();\r\n\r\n\t\tTriangle.getUV( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\r\n\r\n\t}\r\n\r\n\t// adjust the provided target or create a new one\r\n\tif ( target ) {\r\n\r\n\t\tif ( ! target.face ) target.face = { };\r\n\t\ttarget.face.a = a;\r\n\t\ttarget.face.b = b;\r\n\t\ttarget.face.c = c;\r\n\t\ttarget.face.materialIndex = materialIndex;\r\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\r\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\r\n\r\n\t\tif ( ! target.uv ) target.uv = new Vector2();\r\n\t\ttarget.uv.copy( uv );\r\n\r\n\t\treturn target;\r\n\r\n\t} else {\r\n\r\n\t\treturn {\r\n\t\t\tface: {\r\n\t\t\t\ta: a,\r\n\t\t\t\tb: b,\r\n\t\t\t\tc: c,\r\n\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\r\n\t\t\t},\r\n\t\t\tuv: uv\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}