{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { useBlockNumber } from '@usedapp/core';\nimport { getCoingeckoPrice } from './simple_price';\nimport { getCoingeckoTokenPrice } from './simple_token_price';\nexport var useCoingeckoPrice = function useCoingeckoPrice(base) {\n  var quote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'usd';\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      price = _useState2[0],\n      setPrice = _useState2[1];\n\n  var blockNo = useBlockNumber();\n  useEffect(function () {\n    function getPrice() {\n      return _getPrice.apply(this, arguments);\n    }\n\n    function _getPrice() {\n      _getPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var tokenPrice;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getCoingeckoPrice(base, quote);\n\n              case 2:\n                tokenPrice = _context.sent;\n                setPrice(tokenPrice);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPrice.apply(this, arguments);\n    }\n\n    getPrice();\n  }, [base, quote, blockNo]);\n  return price;\n};\nexport var useCoingeckoTokenPrice = function useCoingeckoTokenPrice(contract) {\n  var quote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'usd';\n  var platform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ethereum';\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var blockNo = useBlockNumber();\n  useEffect(function () {\n    function getPrice() {\n      return _getPrice2.apply(this, arguments);\n    }\n\n    function _getPrice2() {\n      _getPrice2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var tokenPrice;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getCoingeckoTokenPrice(contract, quote, platform);\n\n              case 2:\n                tokenPrice = _context2.sent;\n                setPrice(tokenPrice);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getPrice2.apply(this, arguments);\n    }\n\n    getPrice();\n  }, [contract, quote, platform, blockNo]);\n  return price;\n};","map":{"version":3,"sources":["../../../src/index.ts"],"names":[],"mappings":";;;AAAA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,cAAT,QAA+B,eAA/B;AAEA,SAAS,iBAAT,QAAkC,gBAAlC;AACA,SAAS,sBAAT,QAAuC,sBAAvC;AAEA,OAAO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,IAAD,EAAoD;AAAA,MAArC,KAAqC,uEAA7B,KAA6B;;AACnF,kBAA0B,QAAQ,CAAqB,SAArB,CAAlC;AAAA;AAAA,MAAO,KAAP;AAAA,MAAc,QAAd;;AACA,MAAM,OAAO,GAAG,cAAc,EAA9B;AAEA,EAAA,SAAS,CAAC,YAAK;AAAA,aACE,QADF;AAAA;AAAA;;AAAA;AAAA,2EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2B,iBAAiB,CAAC,IAAD,EAAO,KAAP,CAD5C;;AAAA;AACQ,gBAAA,UADR;AAEE,gBAAA,QAAQ,CAAC,UAAD,CAAR;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADa;AAAA;AAAA;;AAMb,IAAA,QAAQ;AACT,GAPQ,EAON,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,CAPM,CAAT;AASA,SAAO,KAAP;AACD,CAdM;AAgBP,OAAO,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,QAAD,EAA+E;AAAA,MAA5D,KAA4D,uEAApD,KAAoD;AAAA,MAA7C,QAA6C,uEAAlC,UAAkC;;AACnH,mBAA0B,QAAQ,CAAqB,SAArB,CAAlC;AAAA;AAAA,MAAO,KAAP;AAAA,MAAc,QAAd;;AACA,MAAM,OAAO,GAAG,cAAc,EAA9B;AAEA,EAAA,SAAS,CAAC,YAAK;AAAA,aACE,QADF;AAAA;AAAA;;AAAA;AAAA,4EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2B,sBAAsB,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,CADjD;;AAAA;AACQ,gBAAA,UADR;AAEE,gBAAA,QAAQ,CAAC,UAAD,CAAR;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADa;AAAA;AAAA;;AAMb,IAAA,QAAQ;AACT,GAPQ,EAON,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,EAA4B,OAA5B,CAPM,CAAT;AASA,SAAO,KAAP;AACD,CAdM","sourceRoot":"","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useBlockNumber } from '@usedapp/core';\nimport { getCoingeckoPrice } from './simple_price';\nimport { getCoingeckoTokenPrice } from './simple_token_price';\nexport const useCoingeckoPrice = (base, quote = 'usd') => {\n    const [price, setPrice] = useState(undefined);\n    const blockNo = useBlockNumber();\n    useEffect(() => {\n        async function getPrice() {\n            const tokenPrice = await getCoingeckoPrice(base, quote);\n            setPrice(tokenPrice);\n        }\n        getPrice();\n    }, [base, quote, blockNo]);\n    return price;\n};\nexport const useCoingeckoTokenPrice = (contract, quote = 'usd', platform = 'ethereum') => {\n    const [price, setPrice] = useState(undefined);\n    const blockNo = useBlockNumber();\n    useEffect(() => {\n        async function getPrice() {\n            const tokenPrice = await getCoingeckoTokenPrice(contract, quote, platform);\n            setPrice(tokenPrice);\n        }\n        getPrice();\n    }, [contract, quote, platform, blockNo]);\n    return price;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}