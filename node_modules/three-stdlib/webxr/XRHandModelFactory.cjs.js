"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=require("./XRHandPrimitiveModel.cjs.js"),o=require("./XRHandOculusMeshModel.cjs.js");function r(t){e.Object3D.call(this),this.controller=t,this.motionController=null,this.envMap=null,this.mesh=null}require("../loaders/FBXLoader.cjs.js"),require("fflate"),require("../curves/NURBSCurve.cjs.js"),require("../curves/NURBSUtils.cjs.js"),r.prototype=Object.assign(Object.create(e.Object3D.prototype),{constructor:r,updateMatrixWorld:function(t){e.Object3D.prototype.updateMatrixWorld.call(this,t),this.motionController&&this.motionController.updateMesh()}});const n=function(){function e(){this.path=""}return e.prototype={constructor:e,setPath:function(e){return this.path=e,this},createHandModel:function(e,n,s){const i=new r(e);return e.addEventListener("connected",(r=>{const l=r.data;l.hand&&!i.motionController&&(i.visible=!0,i.xrInputSource=l,void 0===n||"spheres"===n?i.motionController=new t.XRHandPrimitiveModel(i,e,this.path,l.handedness,{primitive:"sphere"}):"boxes"===n?i.motionController=new t.XRHandPrimitiveModel(i,e,this.path,l.handedness,{primitive:"box"}):"oculus"===n&&(i.motionController=new o.XRHandOculusMeshModel(i,e,this.path,l.handedness,s)))})),e.addEventListener("disconnected",(()=>{})),i}},e}();exports.XRHandModelFactory=n;
