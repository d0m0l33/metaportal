{"ast":null,"code":"import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload(_ref) {\n  var all = _ref.all,\n      scene = _ref.scene,\n      camera = _ref.camera;\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var dCamera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var dScene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  }); // Layout effect because it must run before React commits\n\n  React.useLayoutEffect(function () {\n    var invisible = [];\n\n    if (all) {\n      (scene || dScene).traverse(function (object) {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    } // Now compile the scene\n\n\n    gl.compile(scene || dScene, camera || dCamera); // And for good measure, hit it with a cube camera\n\n    var cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    var cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose(); // Flips these objects back\n\n    invisible.forEach(function (object) {\n      return object.visible = false;\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return null;\n}\n\nexport { Preload };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/Preload.js"],"names":["WebGLCubeRenderTarget","CubeCamera","React","useThree","Preload","all","scene","camera","gl","dCamera","dScene","useLayoutEffect","invisible","traverse","object","visible","push","compile","cubeRenderTarget","cubeCamera","update","dispose","forEach"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,UAAhC,QAAkD,OAAlD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,OAAT,OAIG;AAAA,MAHDC,GAGC,QAHDA,GAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,MACC,QADDA,MACC;AACD,MAAMC,EAAE,GAAGL,QAAQ,CAAC;AAAA,QAClBK,EADkB,SAClBA,EADkB;AAAA,WAEdA,EAFc;AAAA,GAAD,CAAnB;AAGA,MAAMC,OAAO,GAAGN,QAAQ,CAAC;AAAA,QACvBI,MADuB,SACvBA,MADuB;AAAA,WAEnBA,MAFmB;AAAA,GAAD,CAAxB;AAGA,MAAMG,MAAM,GAAGP,QAAQ,CAAC;AAAA,QACtBG,KADsB,SACtBA,KADsB;AAAA,WAElBA,KAFkB;AAAA,GAAD,CAAvB,CAPC,CASa;;AAEdJ,EAAAA,KAAK,CAACS,eAAN,CAAsB,YAAM;AAC1B,QAAMC,SAAS,GAAG,EAAlB;;AAEA,QAAIP,GAAJ,EAAS;AACP,OAACC,KAAK,IAAII,MAAV,EAAkBG,QAAlB,CAA2B,UAAAC,MAAM,EAAI;AACnC,YAAIA,MAAM,CAACC,OAAP,KAAmB,KAAvB,EAA8B;AAC5BH,UAAAA,SAAS,CAACI,IAAV,CAAeF,MAAf;AACAA,UAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACD;AACF,OALD;AAMD,KAVyB,CAUxB;;;AAGFP,IAAAA,EAAE,CAACS,OAAH,CAAWX,KAAK,IAAII,MAApB,EAA4BH,MAAM,IAAIE,OAAtC,EAb0B,CAasB;;AAEhD,QAAMS,gBAAgB,GAAG,IAAIlB,qBAAJ,CAA0B,GAA1B,CAAzB;AACA,QAAMmB,UAAU,GAAG,IAAIlB,UAAJ,CAAe,IAAf,EAAqB,MAArB,EAA6BiB,gBAA7B,CAAnB;AACAC,IAAAA,UAAU,CAACC,MAAX,CAAkBZ,EAAlB,EAAsBF,KAAK,IAAII,MAA/B;AACAQ,IAAAA,gBAAgB,CAACG,OAAjB,GAlB0B,CAkBE;;AAE5BT,IAAAA,SAAS,CAACU,OAAV,CAAkB,UAAAR,MAAM;AAAA,aAAIA,MAAM,CAACC,OAAP,GAAiB,KAArB;AAAA,KAAxB,EApB0B,CAoB2B;AACtD,GArBD,EAqBG,EArBH;AAsBA,SAAO,IAAP;AACD;;AAED,SAASX,OAAT","sourcesContent":["import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload({\n  all,\n  scene,\n  camera\n}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const dCamera = useThree(({\n    camera\n  }) => camera);\n  const dScene = useThree(({\n    scene\n  }) => scene); // Layout effect because it must run before React commits\n\n  React.useLayoutEffect(() => {\n    const invisible = [];\n\n    if (all) {\n      (scene || dScene).traverse(object => {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    } // Now compile the scene\n\n\n    gl.compile(scene || dScene, camera || dCamera); // And for good measure, hit it with a cube camera\n\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose(); // Flips these objects back\n\n    invisible.forEach(object => object.visible = false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return null;\n}\n\nexport { Preload };\n"]},"metadata":{},"sourceType":"module"}