{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/Transactions/TransactionForm.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { formatEther } from '@ethersproject/units';\nimport { useEthers, transactionErrored } from '@usedapp/core';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { TextBold } from '../../typography/Text';\nimport { ContentBlock } from '../base/base';\nimport { Button } from '../base/Button';\nimport { BorderRad, Colors } from '../../global/styles';\nimport { BigNumber } from 'ethers';\nimport { SpinnerIcon, CheckIcon, ExclamationIcon } from './Icons';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4\n});\n\nconst formatBalance = balance => formatter.format(parseFloat(formatEther(balance !== null && balance !== void 0 ? balance : BigNumber.from('0'))));\n\nconst StatusBlock = _ref => {\n  let {\n    color,\n    text,\n    icon\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(InformationRow, {\n    layout: true,\n    initial: {\n      opacity: 0,\n      y: -50\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconContainer, {\n      style: {\n        fill: color\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: color,\n        textAlign: 'center'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, text, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c = StatusBlock;\nexport const StatusAnimation = _ref2 => {\n  _s();\n\n  let {\n    transaction\n  } = _ref2;\n  const [showTransactionStatus, setShowTransactionStatus] = useState(false);\n  const [timer, setTimer] = useState(setTimeout(() => {\n    void 0;\n  }, 1));\n  useEffect(() => {\n    setShowTransactionStatus(true);\n    clearTimeout(timer);\n    if (transaction.status != 'Mining') setTimer(setTimeout(() => setShowTransactionStatus(false), 5000));\n  }, [transaction]);\n  return /*#__PURE__*/_jsxDEV(AnimationWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      exitBeforeEnter: true,\n      children: [showTransactionStatus && transactionErrored(transaction) && /*#__PURE__*/_jsxDEV(StatusBlock, {\n        color: Colors.Red['400'],\n        text: (transaction === null || transaction === void 0 ? void 0 : transaction.errorMessage) || '',\n        icon: /*#__PURE__*/_jsxDEV(ExclamationIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)\n      }, (transaction === null || transaction === void 0 ? void 0 : transaction.chainId) + transaction.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), showTransactionStatus && transaction.status === 'Mining' && /*#__PURE__*/_jsxDEV(StatusBlock, {\n        color: \"black\",\n        text: \"Transaction is being mined\",\n        icon: /*#__PURE__*/_jsxDEV(SpinnerIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)\n      }, (transaction === null || transaction === void 0 ? void 0 : transaction.chainId) + transaction.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), showTransactionStatus && transaction.status === 'Success' && /*#__PURE__*/_jsxDEV(StatusBlock, {\n        color: \"green\",\n        text: \"Transaction successful\",\n        icon: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this)\n      }, (transaction === null || transaction === void 0 ? void 0 : transaction.chainId) + transaction.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatusAnimation, \"bOdlssQOyYei17tQMxq5pLpwaMw=\");\n\n_c2 = StatusAnimation;\n\nconst InputComponent = _ref3 => {\n  _s2();\n\n  let {\n    ticker,\n    transaction,\n    send\n  } = _ref3;\n  const {\n    account\n  } = useEthers();\n  const [value, setValue] = useState('0');\n  const [disabled, setDisabled] = useState(false);\n\n  const onClick = () => {\n    if (Number(value) > 0) {\n      setDisabled(true);\n      send(value);\n    }\n  };\n\n  useEffect(() => {\n    if (transaction.status != 'Mining') {\n      setDisabled(false);\n      setValue('0');\n    }\n  }, [transaction]);\n  return /*#__PURE__*/_jsxDEV(InputRow, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: `${ticker}Input`,\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      value: value,\n      onChange: e => setValue(e.currentTarget.value),\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormTicker, {\n      children: ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n      disabled: !account || disabled,\n      onClick: onClick,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(InputComponent, \"mirhoujv4g9NU/yIduswUM+dMcI=\", false, function () {\n  return [useEthers];\n});\n\n_c3 = InputComponent;\nexport const TransactionForm = _ref4 => {\n  let {\n    balance,\n    send,\n    title,\n    ticker,\n    transaction\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(SmallContentBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleRow, {\n      children: [/*#__PURE__*/_jsxDEV(CellTitle, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BalanceWrapper, {\n        children: [\"Your \", ticker, \" balance: \", formatBalance(balance)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(LabelRow, {\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: `${ticker}Input`,\n        children: \"How much?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n      ticker: ticker,\n      transaction: transaction,\n      send: send\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatusAnimation, {\n      transaction: transaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }, this);\n};\n_c4 = TransactionForm;\nconst SmallButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  min-width: 95px;\n  height: unset;\n  padding: 8px 24px;\n\n  &:disabled {\n    color: ${Colors.Gray['600']};\n    cursor: unset;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: unset;\n    color: unset;\n  }\n`;\n_c5 = SmallButton;\nconst Input = styled.input`\n  height: 100%;\n  width: 120px;\n  padding: 0 0 0 24px;\n  border: 0;\n  border-radius: ${BorderRad.m};\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:focus {\n    outline: transparent auto 1px;\n  }\n\n  &:focus-visible {\n    box-shadow: inset 0 0 0 2px ${Colors.Black['900']};\n  }\n`;\n_c6 = Input;\nconst CellTitle = styled(TextBold)`\n  font-size: 18px;\n`;\n_c7 = CellTitle;\nconst InputRow = styled.div`\n  display: flex;\n  margin: 0 auto;\n  color: ${Colors.Gray['600']};\n  align-items: center;\n  border: ${Colors.Gray['300']} 1px solid;\n  border-radius: ${BorderRad.m};\n  overflow: hidden;\n`;\n_c8 = InputRow;\nconst FormTicker = styled.div`\n  padding: 0 16px;\n`;\n_c9 = FormTicker;\nconst LabelRow = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 32px 0 24px 0;\n`;\n_c10 = LabelRow;\nconst Label = styled.label`\n  font-weight: 700;\n`;\n_c11 = Label;\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n`;\n_c12 = TitleRow;\nconst BalanceWrapper = styled.div`\n  color: ${Colors.Gray['600']};\n  font-size: 14px;\n`;\n_c13 = BalanceWrapper;\nconst SmallContentBlock = styled(ContentBlock)`\n  padding: 0;\n`;\n_c14 = SmallContentBlock;\nconst IconContainer = styled.div`\n  margin-right: 15px;\n  height: 40px;\n  width: 40px;\n  float: left;\n`;\n_c15 = IconContainer;\nconst InformationRow = styled(motion.div)`\n  height: 60px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  overflow: auto;\n`;\n_c16 = InformationRow;\nconst AnimationWrapper = styled.div`\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: auto;\n  margin: 10px;\n`;\n_c17 = AnimationWrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"StatusBlock\");\n$RefreshReg$(_c2, \"StatusAnimation\");\n$RefreshReg$(_c3, \"InputComponent\");\n$RefreshReg$(_c4, \"TransactionForm\");\n$RefreshReg$(_c5, \"SmallButton\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"CellTitle\");\n$RefreshReg$(_c8, \"InputRow\");\n$RefreshReg$(_c9, \"FormTicker\");\n$RefreshReg$(_c10, \"LabelRow\");\n$RefreshReg$(_c11, \"Label\");\n$RefreshReg$(_c12, \"TitleRow\");\n$RefreshReg$(_c13, \"BalanceWrapper\");\n$RefreshReg$(_c14, \"SmallContentBlock\");\n$RefreshReg$(_c15, \"IconContainer\");\n$RefreshReg$(_c16, \"InformationRow\");\n$RefreshReg$(_c17, \"AnimationWrapper\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/Transactions/TransactionForm.tsx"],"names":["formatEther","useEthers","transactionErrored","React","useEffect","useState","styled","TextBold","ContentBlock","Button","BorderRad","Colors","BigNumber","SpinnerIcon","CheckIcon","ExclamationIcon","AnimatePresence","motion","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","StatusBlock","color","text","icon","opacity","y","fill","textAlign","StatusAnimation","transaction","showTransactionStatus","setShowTransactionStatus","timer","setTimer","setTimeout","clearTimeout","status","Red","errorMessage","chainId","InputComponent","ticker","send","account","value","setValue","disabled","setDisabled","onClick","Number","e","currentTarget","TransactionForm","title","SmallButton","Gray","Input","input","m","Black","CellTitle","InputRow","div","FormTicker","LabelRow","Label","label","TitleRow","BalanceWrapper","SmallContentBlock","IconContainer","InformationRow","AnimationWrapper"],"mappings":"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","sourcesContent":["import { formatEther } from '@ethersproject/units'\nimport { TransactionStatus, useEthers, transactionErrored } from '@usedapp/core'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { TextBold } from '../../typography/Text'\nimport { ContentBlock } from '../base/base'\nimport { Button } from '../base/Button'\nimport { BorderRad, Colors } from '../../global/styles'\nimport { BigNumber } from 'ethers'\nimport { SpinnerIcon, CheckIcon, ExclamationIcon } from './Icons'\n\nimport { AnimatePresence, motion } from 'framer-motion'\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\ninterface StatusBlockProps {\n  color: string\n  text: string\n  icon: ReactElement\n}\n\nconst StatusBlock = ({ color, text, icon }: StatusBlockProps) => (\n  <InformationRow\n    layout\n    initial={{ opacity: 0, y: -50 }}\n    animate={{ opacity: 1, y: 0 }}\n    exit={{ opacity: 0, y: 50 }}\n    key={text}\n  >\n    <IconContainer style={{ fill: color }}>{icon}</IconContainer>\n    <div style={{ color: color, textAlign: 'center' }}>{text}</div>\n  </InformationRow>\n)\n\ninterface StatusAnimationProps {\n  transaction: TransactionStatus\n}\n\nexport const StatusAnimation = ({ transaction }: StatusAnimationProps) => {\n  const [showTransactionStatus, setShowTransactionStatus] = useState(false)\n  const [timer, setTimer] = useState(\n    setTimeout(() => {\n      void 0\n    }, 1)\n  )\n\n  useEffect(() => {\n    setShowTransactionStatus(true)\n    clearTimeout(timer)\n\n    if (transaction.status != 'Mining') setTimer(setTimeout(() => setShowTransactionStatus(false), 5000))\n  }, [transaction])\n\n  return (\n    <AnimationWrapper>\n      <AnimatePresence initial={false} exitBeforeEnter>\n        {showTransactionStatus && transactionErrored(transaction) && (\n          <StatusBlock\n            color={Colors.Red['400']}\n            text={transaction?.errorMessage || ''}\n            icon={<ExclamationIcon />}\n            key={transaction?.chainId + transaction.status}\n          />\n        )}\n        {showTransactionStatus && transaction.status === 'Mining' && (\n          <StatusBlock\n            color=\"black\"\n            text=\"Transaction is being mined\"\n            icon={<SpinnerIcon />}\n            key={transaction?.chainId + transaction.status}\n          />\n        )}\n        {showTransactionStatus && transaction.status === 'Success' && (\n          <StatusBlock\n            color=\"green\"\n            text=\"Transaction successful\"\n            icon={<CheckIcon />}\n            key={transaction?.chainId + transaction.status}\n          />\n        )}\n      </AnimatePresence>\n    </AnimationWrapper>\n  )\n}\n\ninterface InputComponentProps {\n  send: (value: string) => void\n  ticker: string\n  transaction: TransactionStatus\n}\n\nconst InputComponent = ({ ticker, transaction, send }: InputComponentProps) => {\n  const { account } = useEthers()\n  const [value, setValue] = useState('0')\n  const [disabled, setDisabled] = useState(false)\n\n  const onClick = () => {\n    if (Number(value) > 0) {\n      setDisabled(true)\n      send(value)\n    }\n  }\n\n  useEffect(() => {\n    if (transaction.status != 'Mining') {\n      setDisabled(false)\n      setValue('0')\n    }\n  }, [transaction])\n\n  return (\n    <InputRow>\n      <Input\n        id={`${ticker}Input`}\n        type=\"number\"\n        step=\"0.01\"\n        min=\"0\"\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        disabled={disabled}\n      />\n      <FormTicker>{ticker}</FormTicker>\n      <SmallButton disabled={!account || disabled} onClick={onClick}>\n        Send\n      </SmallButton>\n    </InputRow>\n  )\n}\n\ninterface TransactionFormProps {\n  balance: BigNumber | undefined\n  send: (value: string) => void\n  title: string\n  ticker: string\n  transaction: TransactionStatus\n}\n\nexport const TransactionForm = ({ balance, send, title, ticker, transaction }: TransactionFormProps) => (\n  <SmallContentBlock>\n    <TitleRow>\n      <CellTitle>{title}</CellTitle>\n      <BalanceWrapper>\n        Your {ticker} balance: {formatBalance(balance)}\n      </BalanceWrapper>\n    </TitleRow>\n    <LabelRow>\n      <Label htmlFor={`${ticker}Input`}>How much?</Label>\n    </LabelRow>\n    <InputComponent ticker={ticker} transaction={transaction} send={send} />\n    <StatusAnimation transaction={transaction} />\n  </SmallContentBlock>\n)\n\nconst SmallButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  min-width: 95px;\n  height: unset;\n  padding: 8px 24px;\n\n  &:disabled {\n    color: ${Colors.Gray['600']};\n    cursor: unset;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: unset;\n    color: unset;\n  }\n`\n\nconst Input = styled.input`\n  height: 100%;\n  width: 120px;\n  padding: 0 0 0 24px;\n  border: 0;\n  border-radius: ${BorderRad.m};\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:focus {\n    outline: transparent auto 1px;\n  }\n\n  &:focus-visible {\n    box-shadow: inset 0 0 0 2px ${Colors.Black['900']};\n  }\n`\n\nconst CellTitle = styled(TextBold)`\n  font-size: 18px;\n`\n\nconst InputRow = styled.div`\n  display: flex;\n  margin: 0 auto;\n  color: ${Colors.Gray['600']};\n  align-items: center;\n  border: ${Colors.Gray['300']} 1px solid;\n  border-radius: ${BorderRad.m};\n  overflow: hidden;\n`\n\nconst FormTicker = styled.div`\n  padding: 0 16px;\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 32px 0 24px 0;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n`\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n`\n\nconst BalanceWrapper = styled.div`\n  color: ${Colors.Gray['600']};\n  font-size: 14px;\n`\n\nconst SmallContentBlock = styled(ContentBlock)`\n  padding: 0;\n`\n\nconst IconContainer = styled.div`\n  margin-right: 15px;\n  height: 40px;\n  width: 40px;\n  float: left;\n`\n\nconst InformationRow = styled(motion.div)`\n  height: 60px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  overflow: auto;\n`\n\nconst AnimationWrapper = styled.div`\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: auto;\n  margin: 10px;\n`\n"]},"metadata":{},"sourceType":"module"}