{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var getCoingeckoSimplePriceUri = function getCoingeckoSimplePriceUri(baseId, quoteId) {\n  return \"https://api.coingecko.com/api/v3/simple/price?ids=\".concat(baseId, \"&vs_currencies=\").concat(quoteId);\n};\nexport var fetchCoingeckoPrice = function fetchCoingeckoPrice(fetchFunction) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(base, quote) {\n      var baseId, quoteId, url, data, result, price;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              baseId = base.toLowerCase();\n              quoteId = quote.toLowerCase();\n              url = getCoingeckoSimplePriceUri(baseId, quoteId);\n              _context.next = 6;\n              return fetchFunction(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 6:\n              data = _context.sent;\n              _context.next = 9;\n              return data.json();\n\n            case 9:\n              result = _context.sent;\n              price = result[baseId][quoteId];\n              return _context.abrupt(\"return\", price ? price + '' : undefined);\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", undefined);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getCoingeckoPrice = fetchCoingeckoPrice(typeof window !== 'undefined' && window.fetch);","map":{"version":3,"sources":["../../../src/simple_price.ts"],"names":[],"mappings":";;AAAA,OAAO,IAAM,0BAA0B,GAAG,SAA7B,0BAA6B,CAAC,MAAD,EAAiB,OAAjB;AAAA,qEACa,MADb,4BACqC,OADrC;AAAA,CAAnC;AAGP,OAAO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,aAAD;AAAA;AAAA,wEAAwB,iBAAO,IAAP,EAAqB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjD,cAAA,MAFiD,GAExC,IAAI,CAAC,WAAL,EAFwC;AAGjD,cAAA,OAHiD,GAGvC,KAAK,CAAC,WAAN,EAHuC;AAIjD,cAAA,GAJiD,GAI3C,0BAA0B,CAAC,MAAD,EAAS,OAAT,CAJiB;AAAA;AAAA,qBAKpC,aAAa,CAAC,GAAD,EAAM;AACpC,gBAAA,MAAM,EAAE,KAD4B;AAEpC,gBAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAF2B,eAAN,CALuB;;AAAA;AAKjD,cAAA,IALiD;AAAA;AAAA,qBAWlC,IAAI,CAAC,IAAL,EAXkC;;AAAA;AAWjD,cAAA,MAXiD;AAYjD,cAAA,KAZiD,GAYzC,MAAM,CAAC,MAAD,CAAN,CAAe,OAAf,CAZyC;AAAA,+CAahD,KAAK,GAAG,KAAK,GAAG,EAAX,GAAgB,SAb2B;;AAAA;AAAA;AAAA;AAAA,+CAehD,SAfgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAmBP,OAAO,IAAM,iBAAiB,GAAG,mBAAmB,CAAC,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,KAAzC,CAA7C","sourceRoot":"","sourcesContent":["export const getCoingeckoSimplePriceUri = (baseId, quoteId) => `https://api.coingecko.com/api/v3/simple/price?ids=${baseId}&vs_currencies=${quoteId}`;\nexport const fetchCoingeckoPrice = (fetchFunction) => async (base, quote) => {\n    try {\n        const baseId = base.toLowerCase();\n        const quoteId = quote.toLowerCase();\n        const url = getCoingeckoSimplePriceUri(baseId, quoteId);\n        const data = await fetchFunction(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        const result = await data.json();\n        const price = result[baseId][quoteId];\n        return price ? price + '' : undefined;\n    }\n    catch (_) {\n        return undefined;\n    }\n};\nexport const getCoingeckoPrice = fetchCoingeckoPrice(typeof window !== 'undefined' && window.fetch);\n//# sourceMappingURL=simple_price.js.map"]},"metadata":{},"sourceType":"module"}