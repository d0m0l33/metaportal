{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/Transactions/Forms.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Contract } from '@ethersproject/contracts';\nimport { utils } from 'ethers';\nimport React from 'react';\nimport { useContractFunction, useEtherBalance, useEthers, useTokenBalance } from '@usedapp/core';\nimport { TransactionForm } from './TransactionForm';\nimport WethAbi from '../../abi/Weth10.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wethInterface = new utils.Interface(WethAbi);\nconst wethContractAddress = '0xA243FEB70BaCF6cD77431269e68135cf470051b4';\nconst contract = new Contract(wethContractAddress, wethInterface);\nexport const DepositEth = () => {\n  _s();\n\n  const {\n    account\n  } = useEthers();\n  const etherBalance = useEtherBalance(account);\n  const {\n    state,\n    send\n  } = useContractFunction(contract, 'deposit', {\n    transactionName: 'Wrap'\n  });\n\n  const depositEther = etherAmount => {\n    send({\n      value: utils.parseEther(etherAmount)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionForm, {\n    balance: etherBalance,\n    send: depositEther,\n    title: \"Wrap Ether\",\n    ticker: \"ETH\",\n    transaction: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DepositEth, \"7XkY5zvlK4GrP1K/EeHGSHft+eY=\", false, function () {\n  return [useEthers, useEtherBalance, useContractFunction];\n});\n\n_c = DepositEth;\nexport const WithdrawEth = () => {\n  _s2();\n\n  const {\n    account\n  } = useEthers();\n  const wethBalance = useTokenBalance(wethContractAddress, account);\n  const {\n    state,\n    send\n  } = useContractFunction(contract, 'withdraw', {\n    transactionName: 'Unwrap'\n  });\n\n  const withdrawEther = wethAmount => {\n    send(utils.parseEther(wethAmount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionForm, {\n    balance: wethBalance,\n    send: withdrawEther,\n    title: \"Unwrap Ether\",\n    ticker: \"WETH\",\n    transaction: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(WithdrawEth, \"3YKM48Gz82DsL0m0lcQ/g0t0XZM=\", false, function () {\n  return [useEthers, useTokenBalance, useContractFunction];\n});\n\n_c2 = WithdrawEth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DepositEth\");\n$RefreshReg$(_c2, \"WithdrawEth\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/Transactions/Forms.tsx"],"names":["Contract","utils","React","useContractFunction","useEtherBalance","useEthers","useTokenBalance","TransactionForm","WethAbi","wethInterface","Interface","wethContractAddress","contract","DepositEth","account","etherBalance","state","send","transactionName","depositEther","etherAmount","value","parseEther","WithdrawEth","wethBalance","withdrawEther","wethAmount"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,EAA+CC,SAA/C,EAA0DC,eAA1D,QAAiF,eAAjF;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,aAAa,GAAG,IAAIR,KAAK,CAACS,SAAV,CAAoBF,OAApB,CAAtB;AACA,MAAMG,mBAAmB,GAAG,4CAA5B;AACA,MAAMC,QAAQ,GAAG,IAAIZ,QAAJ,CAAaW,mBAAb,EAAkCF,aAAlC,CAAjB;AAEA,OAAO,MAAMI,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMU,YAAY,GAAGX,eAAe,CAACU,OAAD,CAApC;AAEA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBd,mBAAmB,CAACS,QAAD,EAAW,SAAX,EAAsB;AAAEM,IAAAA,eAAe,EAAE;AAAnB,GAAtB,CAA3C;;AAEA,QAAMC,YAAY,GAAIC,WAAD,IAAyB;AAC5CH,IAAAA,IAAI,CAAC;AAAEI,MAAAA,KAAK,EAAEpB,KAAK,CAACqB,UAAN,CAAiBF,WAAjB;AAAT,KAAD,CAAJ;AACD,GAFD;;AAIA,sBACE,QAAC,eAAD;AAAiB,IAAA,OAAO,EAAEL,YAA1B;AAAwC,IAAA,IAAI,EAAEI,YAA9C;AAA4D,IAAA,KAAK,EAAC,YAAlE;AAA+E,IAAA,MAAM,EAAC,KAAtF;AAA4F,IAAA,WAAW,EAAEH;AAAzG;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAbM;;GAAMH,U;UACSR,S,EACCD,e,EAEGD,mB;;;KAJbU,U;AAeb,OAAO,MAAMU,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAET,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMmB,WAAW,GAAGlB,eAAe,CAACK,mBAAD,EAAsBG,OAAtB,CAAnC;AAEA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBd,mBAAmB,CAACS,QAAD,EAAW,UAAX,EAAuB;AAAEM,IAAAA,eAAe,EAAE;AAAnB,GAAvB,CAA3C;;AAEA,QAAMO,aAAa,GAAIC,UAAD,IAAwB;AAC5CT,IAAAA,IAAI,CAAChB,KAAK,CAACqB,UAAN,CAAiBI,UAAjB,CAAD,CAAJ;AACD,GAFD;;AAIA,sBACE,QAAC,eAAD;AACE,IAAA,OAAO,EAAEF,WADX;AAEE,IAAA,IAAI,EAAEC,aAFR;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,WAAW,EAAET;AALf;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBM;;IAAMO,W;UACSlB,S,EACAC,e,EAEIH,mB;;;MAJboB,W","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { utils } from 'ethers'\nimport React from 'react'\nimport { useContractFunction, useEtherBalance, useEthers, useTokenBalance } from '@usedapp/core'\n\nimport { TransactionForm } from './TransactionForm'\n\nimport WethAbi from '../../abi/Weth10.json'\n\nconst wethInterface = new utils.Interface(WethAbi)\nconst wethContractAddress = '0xA243FEB70BaCF6cD77431269e68135cf470051b4'\nconst contract = new Contract(wethContractAddress, wethInterface)\n\nexport const DepositEth = () => {\n  const { account } = useEthers()\n  const etherBalance = useEtherBalance(account)\n\n  const { state, send } = useContractFunction(contract, 'deposit', { transactionName: 'Wrap' })\n\n  const depositEther = (etherAmount: string) => {\n    send({ value: utils.parseEther(etherAmount) })\n  }\n\n  return (\n    <TransactionForm balance={etherBalance} send={depositEther} title=\"Wrap Ether\" ticker=\"ETH\" transaction={state} />\n  )\n}\n\nexport const WithdrawEth = () => {\n  const { account } = useEthers()\n  const wethBalance = useTokenBalance(wethContractAddress, account)\n\n  const { state, send } = useContractFunction(contract, 'withdraw', { transactionName: 'Unwrap' })\n\n  const withdrawEther = (wethAmount: string) => {\n    send(utils.parseEther(wethAmount))\n  }\n\n  return (\n    <TransactionForm\n      balance={wethBalance}\n      send={withdrawEther}\n      title=\"Unwrap Ether\"\n      ticker=\"WETH\"\n      transaction={state}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}