{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// get price from token contract\nexport var getCoingeckoSimpleTokenPriceUri = function getCoingeckoSimpleTokenPriceUri(contract, quoteId, platformId) {\n  return \"https://api.coingecko.com/api/v3/simple/token_price/\".concat(platformId, \"?contract_addresses=\").concat(contract, \"&vs_currencies=\").concat(quoteId);\n};\nexport var fetchCoingeckoTokenPrice = function fetchCoingeckoTokenPrice(fetchFunction) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contract, quote, platform) {\n      var addr, quoteId, platformId, url, data, result, price;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              addr = contract.toLowerCase();\n              quoteId = quote.toLowerCase();\n              platformId = platform.toLowerCase();\n              url = getCoingeckoSimpleTokenPriceUri(addr, quoteId, platformId);\n              _context.next = 7;\n              return fetchFunction(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 7:\n              data = _context.sent;\n              _context.next = 10;\n              return data.json();\n\n            case 10:\n              result = _context.sent;\n              price = result[addr][quoteId];\n              return _context.abrupt(\"return\", price ? price + '' : undefined);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", undefined);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15]]);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getCoingeckoTokenPrice = fetchCoingeckoTokenPrice(typeof window !== 'undefined' && window.fetch);","map":{"version":3,"sources":["../../../src/simple_token_price.ts"],"names":[],"mappings":";;AAAA;AACA,OAAO,IAAM,+BAA+B,GAAG,SAAlC,+BAAkC,CAAC,QAAD,EAAmB,OAAnB,EAAoC,UAApC;AAAA,uEACU,UADV,iCAC2C,QAD3C,4BACqE,OADrE;AAAA,CAAxC;AAGP,OAAO,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,aAAD;AAAA;AAAA,wEAAwB,iBAC9D,QAD8D,EAE9D,KAF8D,EAG9D,QAH8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtD,cAAA,IANsD,GAM/C,QAAQ,CAAC,WAAT,EAN+C;AAOtD,cAAA,OAPsD,GAO5C,KAAK,CAAC,WAAN,EAP4C;AAQtD,cAAA,UARsD,GAQzC,QAAQ,CAAC,WAAT,EARyC;AAStD,cAAA,GATsD,GAShD,+BAA+B,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,CATiB;AAAA;AAAA,qBAUzC,aAAa,CAAC,GAAD,EAAM;AACpC,gBAAA,MAAM,EAAE,KAD4B;AAEpC,gBAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAF2B,eAAN,CAV4B;;AAAA;AAUtD,cAAA,IAVsD;AAAA;AAAA,qBAgBvC,IAAI,CAAC,IAAL,EAhBuC;;AAAA;AAgBtD,cAAA,MAhBsD;AAiBtD,cAAA,KAjBsD,GAiB9C,MAAM,CAAC,IAAD,CAAN,CAAa,OAAb,CAjB8C;AAAA,+CAkBrD,KAAK,GAAG,KAAK,GAAG,EAAX,GAAgB,SAlBgC;;AAAA;AAAA;AAAA;AAAA,+CAoBrD,SApBqD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;AAwBP,OAAO,IAAM,sBAAsB,GAAG,wBAAwB,CAAC,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,KAAzC,CAAvD","sourceRoot":"","sourcesContent":["// get price from token contract\nexport const getCoingeckoSimpleTokenPriceUri = (contract, quoteId, platformId) => `https://api.coingecko.com/api/v3/simple/token_price/${platformId}?contract_addresses=${contract}&vs_currencies=${quoteId}`;\nexport const fetchCoingeckoTokenPrice = (fetchFunction) => async (contract, quote, platform) => {\n    try {\n        const addr = contract.toLowerCase();\n        const quoteId = quote.toLowerCase();\n        const platformId = platform.toLowerCase();\n        const url = getCoingeckoSimpleTokenPriceUri(addr, quoteId, platformId);\n        const data = await fetchFunction(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        const result = await data.json();\n        const price = result[addr][quoteId];\n        return price ? price + '' : undefined;\n    }\n    catch (_) {\n        return undefined;\n    }\n};\nexport const getCoingeckoTokenPrice = fetchCoingeckoTokenPrice(typeof window !== 'undefined' && window.fetch);\n//# sourceMappingURL=simple_token_price.js.map"]},"metadata":{},"sourceType":"module"}