{"ast":null,"code":"import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\n\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n\n    frustumLines.visible = displayFrustum;\n  }\n\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute('position');\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n      const planeMat = new MeshBasicMaterial({\n        transparent: true,\n        opacity: 0.1,\n        depthWrite: false,\n        side: DoubleSide\n      });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 0xffff00);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts[2]);\n      cascadeLine.box.max.copy(farVerts[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts[0], farVerts[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts[0], farVerts[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n\n}\n\nexport { CSMHelper };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/three-stdlib/csm/CSMHelper.js"],"names":["Group","BufferGeometry","BufferAttribute","LineSegments","LineBasicMaterial","Box3Helper","Box3","MeshBasicMaterial","DoubleSide","Mesh","PlaneGeometry","CSMHelper","constructor","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","setIndex","setAttribute","frustumLines","add","cascadeLines","cascadePlanes","shadowLines","updateVisibility","i","l","length","cascadeLine","cascadePlane","shadowLineGroup","visible","update","camera","cascades","mainFrustum","frustums","lights","frustumLinePositions","geometry","getAttribute","position","copy","quaternion","scale","updateMatrixWorld","remove","pop","planeMat","transparent","opacity","depthWrite","side","shadowLine","push","frustum","light","shadowCam","shadow","farVerts","vertices","far","children","box","min","max","z","addVectors","multiplyScalar","subVectors","attach","set","bottom","left","top","right","near","nearVerts","setXYZ","x","y","needsUpdate"],"mappings":"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","sourcesContent":["import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\n\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n\n    frustumLines.visible = displayFrustum;\n  }\n\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute('position');\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n      const planeMat = new MeshBasicMaterial({\n        transparent: true,\n        opacity: 0.1,\n        depthWrite: false,\n        side: DoubleSide\n      });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 0xffff00);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts[2]);\n      cascadeLine.box.max.copy(farVerts[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts[0], farVerts[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts[0], farVerts[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n\n}\n\nexport { CSMHelper };\n"]},"metadata":{},"sourceType":"module"}