{"ast":null,"code":"var _jsxFileName = \"/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/SendEthForm/SendEthForm.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { formatEther } from '@ethersproject/units';\nimport { BigNumber } from 'ethers';\nimport { TextBold } from '../../typography/Text';\nimport { Colors, BorderRad, Transitions } from '../../global/styles';\nimport styled from 'styled-components';\nimport { useEtherBalance, useEthers } from '@usedapp/core';\nimport { Button } from '../base/Button';\nimport { useSendTransaction } from '@usedapp/core';\nimport { utils } from 'ethers';\nimport { StatusAnimation } from '../Transactions/TransactionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4\n});\n\nconst formatBalance = balance => formatter.format(parseFloat(formatEther(balance !== null && balance !== void 0 ? balance : BigNumber.from('0'))));\n\nconst InputComponent = () => {\n  _s();\n\n  const {\n    account\n  } = useEthers();\n  const [amount, setAmount] = useState('0');\n  const [address, setAddress] = useState('');\n  const [disabled, setDisabled] = useState(false);\n  const {\n    sendTransaction,\n    state\n  } = useSendTransaction({\n    transactionName: 'Send Ethereum'\n  });\n\n  const handleClick = () => {\n    setDisabled(true);\n    sendTransaction({\n      to: address,\n      value: utils.parseEther(amount)\n    });\n  };\n\n  useEffect(() => {\n    if (state.status != 'Mining') {\n      setDisabled(false);\n      setAmount('0');\n      setAddress('');\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputRow, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: `EthInput`,\n        type: \"number\",\n        step: \"0.01\",\n        value: amount,\n        onChange: e => setAmount(e.currentTarget.value),\n        min: \"0\",\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormTicker, {\n        children: \"ETH to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n        id: `AddressInput`,\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.currentTarget.value),\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n        disabled: !account || disabled,\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusAnimation, {\n      transaction: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputComponent, \"UPELQx/8o4wXQWqvqtKQVyQbd24=\", false, function () {\n  return [useEthers, useSendTransaction];\n});\n\n_c = InputComponent;\nexport const SendEthForm = () => {\n  _s2();\n\n  const {\n    account\n  } = useEthers();\n  const balance = useEtherBalance(account);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleRow, {\n      children: [/*#__PURE__*/_jsxDEV(CellTitle, {\n        children: \"Send transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BalanceWrapper, {\n        children: [\"Your ETH balance: \", formatBalance(balance)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SendEthForm, \"ryISu9PZE1HVNw5oH7caKoVDBc4=\", false, function () {\n  return [useEthers, useEtherBalance];\n});\n\n_c2 = SendEthForm;\nconst CellTitle = styled(TextBold)`\n  font-size: 18px;\n`;\n_c3 = CellTitle;\nconst LabelRow = styled.div`\n  display: flex;\n  margin: 32px 0 24px 0;\n`;\nconst Label = styled.label`\n  font-weight: 700;\n  cursor: pointer;\n  transition: ${Transitions.all};\n\n  &:hover,\n  &:focus-within {\n    color: ${Colors.Yellow[500]};\n  }\n`;\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n`;\n_c4 = TitleRow;\nconst BalanceWrapper = styled.div`\n  color: ${Colors.Gray['600']};\n  font-size: 14px;\n`;\n_c5 = BalanceWrapper;\nconst Input = styled.input`\n  width: 120px;\n  padding: 0 0 0 24px;\n  border: 0;\n  border-radius: ${BorderRad.m};\n  -moz-appearance: textfield;\n  outline: none;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-background-clip: text;\n  }\n`;\n_c6 = Input;\nconst AddressInput = styled(Input)`\n  width: 100%;\n  padding: 0 0 0 38px;\n`;\n_c7 = AddressInput;\nconst InputRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${Colors.Gray['600']};\n  border: ${Colors.Gray['300']} 1px solid;\n  border-radius: ${BorderRad.m};\n  overflow: hidden;\n  transition: ${Transitions.all};\n  padding:10px;\n\n  &:hover,\n  &:focus-within {\n    border-color: ${Colors.Black[900]};\n  }\n`;\n_c8 = InputRow;\nconst FormTicker = styled.div`\n  padding: 0 8px;\n`;\n_c9 = FormTicker;\nconst SmallButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  height: 100%;\n  padding: 8px 24px;\n  margin-top:10px;\n\n  &:disabled {\n    color: ${Colors.Gray['600']};\n    cursor: unset;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: unset;\n    color: unset;\n  }\n`;\n_c10 = SmallButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"SendEthForm\");\n$RefreshReg$(_c3, \"CellTitle\");\n$RefreshReg$(_c4, \"TitleRow\");\n$RefreshReg$(_c5, \"BalanceWrapper\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"AddressInput\");\n$RefreshReg$(_c8, \"InputRow\");\n$RefreshReg$(_c9, \"FormTicker\");\n$RefreshReg$(_c10, \"SmallButton\");","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/components/SendEthForm/SendEthForm.tsx"],"names":["React","useEffect","useState","formatEther","BigNumber","TextBold","Colors","BorderRad","Transitions","styled","useEtherBalance","useEthers","Button","useSendTransaction","utils","StatusAnimation","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatBalance","balance","format","parseFloat","from","InputComponent","account","amount","setAmount","address","setAddress","disabled","setDisabled","sendTransaction","state","transactionName","handleClick","to","value","parseEther","status","display","flexDirection","e","currentTarget","SendEthForm","CellTitle","LabelRow","div","Label","label","all","Yellow","TitleRow","Gray","BalanceWrapper","Input","input","m","AddressInput","InputRow","Black","FormTicker","SmallButton"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,qBAA/C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,EAAAA,qBAAqB,EAAE,CADwB;AAE/CC,EAAAA,qBAAqB,EAAE;AAFwB,CAA/B,CAAlB;;AAKA,MAAMC,aAAa,GAAIC,OAAD,IACpBN,SAAS,CAACO,MAAV,CAAiBC,UAAU,CAACrB,WAAW,CAACmB,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYlB,SAAS,CAACqB,IAAV,CAAe,GAAf,CAAZ,CAAZ,CAA3B,CADF;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAchB,SAAS,EAA7B;AAEA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM;AAAEgC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA6BtB,kBAAkB,CAAC;AAAEuB,IAAAA,eAAe,EAAE;AAAnB,GAAD,CAArD;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,IAAAA,eAAe,CAAC;AAAEI,MAAAA,EAAE,EAAER,OAAN;AAAeS,MAAAA,KAAK,EAAEzB,KAAK,CAAC0B,UAAN,CAAiBZ,MAAjB;AAAtB,KAAD,CAAf;AACD,GAHD;;AAKA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkC,KAAK,CAACM,MAAN,IAAgB,QAApB,EAA8B;AAC5BR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,SAAS,CAAC,GAAD,CAAT;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GANQ,EAMN,CAACI,KAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAZ;AAAA,4BACE,QAAC,QAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,EAAE,EAAG,UADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEf,MAJT;AAKE,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,SAAS,CAACe,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAL5B;AAME,QAAA,GAAG,EAAC,GANN;AAOE,QAAA,QAAQ,EAAEP;AAPZ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,YAAD;AACE,QAAA,EAAE,EAAG,cADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEF,OAHT;AAIE,QAAA,QAAQ,EAAGc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAJ7B;AAKE,QAAA,QAAQ,EAAEP;AALZ;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,CAACL,OAAD,IAAYK,QAAnC;AAA6C,QAAA,OAAO,EAAEK,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,eAAD;AAAiB,MAAA,WAAW,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAjDD;;GAAMT,c;UACgBf,S,EAMeE,kB;;;KAP/Ba,c;AAmDN,OAAO,MAAMoB,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEnB,IAAAA;AAAF,MAAchB,SAAS,EAA7B;AACA,QAAMW,OAAO,GAAGZ,eAAe,CAACiB,OAAD,CAA/B;AACA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,yCAAmCN,aAAa,CAACC,OAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApBM;;IAAMwB,W;UACSnC,S,EACJD,e;;;MAFLoC,W;AAsBb,MAAMC,SAAS,GAAGtC,MAAM,CAACJ,QAAD,CAAW;AACnC;AACA,CAFA;MAAM0C,S;AAIN,MAAMC,QAAQ,GAAGvC,MAAM,CAACwC,GAAI;AAC5B;AACA;AACA,CAHA;AAKA,MAAMC,KAAK,GAAGzC,MAAM,CAAC0C,KAAM;AAC3B;AACA;AACA,gBAAgB3C,WAAW,CAAC4C,GAAI;AAChC;AACA;AACA;AACA,aAAa9C,MAAM,CAAC+C,MAAP,CAAc,GAAd,CAAmB;AAChC;AACA,CATA;AAWA,MAAMC,QAAQ,GAAG7C,MAAM,CAACwC,GAAI;AAC5B;AACA;AACA;AACA,mBAAmB3C,MAAM,CAACiD,IAAP,CAAY,KAAZ,CAAmB;AACtC;AACA,CANA;MAAMD,Q;AAQN,MAAME,cAAc,GAAG/C,MAAM,CAACwC,GAAI;AAClC,WAAW3C,MAAM,CAACiD,IAAP,CAAY,KAAZ,CAAmB;AAC9B;AACA,CAHA;MAAMC,c;AAKN,MAAMC,KAAK,GAAGhD,MAAM,CAACiD,KAAM;AAC3B;AACA;AACA;AACA,mBAAmBnD,SAAS,CAACoD,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMF,K;AAsBN,MAAMG,YAAY,GAAGnD,MAAM,CAACgD,KAAD,CAAQ;AACnC;AACA;AACA,CAHA;MAAMG,Y;AAKN,MAAMC,QAAQ,GAAGpD,MAAM,CAACwC,GAAI;AAC5B;AACA;AACA,WAAW3C,MAAM,CAACiD,IAAP,CAAY,KAAZ,CAAmB;AAC9B,YAAYjD,MAAM,CAACiD,IAAP,CAAY,KAAZ,CAAmB;AAC/B,mBAAmBhD,SAAS,CAACoD,CAAE;AAC/B;AACA,gBAAgBnD,WAAW,CAAC4C,GAAI;AAChC;AACA;AACA;AACA;AACA,oBAAoB9C,MAAM,CAACwD,KAAP,CAAa,GAAb,CAAkB;AACtC;AACA,CAdA;MAAMD,Q;AAgBN,MAAME,UAAU,GAAGtD,MAAM,CAACwC,GAAI;AAC9B;AACA,CAFA;MAAMc,U;AAIN,MAAMC,WAAW,GAAGvD,MAAM,CAACG,MAAD,CAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaN,MAAM,CAACiD,IAAP,CAAY,KAAZ,CAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;OAAMS,W","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumber } from 'ethers'\nimport { ContentBlock } from '../base/base'\nimport { TextBold } from '../../typography/Text'\nimport { Colors, BorderRad, Transitions } from '../../global/styles'\nimport styled from 'styled-components'\nimport { useEtherBalance, useEthers } from '@usedapp/core'\nimport { Button } from '../base/Button'\nimport { useSendTransaction } from '@usedapp/core'\nimport { utils } from 'ethers'\nimport { StatusAnimation } from '../Transactions/TransactionForm'\n\nconst formatter = new Intl.NumberFormat('en-us', {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n})\n\nconst formatBalance = (balance: BigNumber | undefined) =>\n  formatter.format(parseFloat(formatEther(balance ?? BigNumber.from('0'))))\n\nconst InputComponent = () => {\n  const { account } = useEthers()\n\n  const [amount, setAmount] = useState('0')\n  const [address, setAddress] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const { sendTransaction, state } = useSendTransaction({ transactionName: 'Send Ethereum' })\n\n  const handleClick = () => {\n    setDisabled(true)\n    sendTransaction({ to: address, value: utils.parseEther(amount) })\n  }\n\n  useEffect(() => {\n    if (state.status != 'Mining') {\n      setDisabled(false)\n      setAmount('0')\n      setAddress('')\n    }\n  }, [state])\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <InputRow>\n        <Input\n          id={`EthInput`}\n          type=\"number\"\n          step=\"0.01\"\n          value={amount}\n          onChange={(e) => setAmount(e.currentTarget.value)}\n          min=\"0\"\n          disabled={disabled}\n        />\n        <FormTicker>ETH to:</FormTicker>\n        <AddressInput\n          id={`AddressInput`}\n          type=\"text\"\n          value={address}\n          onChange={(e) => setAddress(e.currentTarget.value)}\n          disabled={disabled}\n        />\n        <SmallButton disabled={!account || disabled} onClick={handleClick}>\n          Send\n        </SmallButton>\n      </InputRow>\n      <StatusAnimation transaction={state} />\n    </div>\n  )\n}\n\nexport const SendEthForm = () => {\n  const { account } = useEthers()\n  const balance = useEtherBalance(account)\n  return (\n    <div>\n      <TitleRow>\n        <CellTitle>Send transaction</CellTitle>\n        <BalanceWrapper>Your ETH balance: {formatBalance(balance)}</BalanceWrapper>\n      </TitleRow>\n      {/* <LabelRow>\n        <Label style={{ marginLeft: '58px' }} htmlFor={'EthInput'}>\n          How much?\n        </Label>\n        <Label style={{ marginLeft: '240px' }} htmlFor={'AddressInput'}>\n          To whom?\n        </Label>\n      </LabelRow> */}\n      <InputComponent />\n      </div>\n  )\n}\n\nconst CellTitle = styled(TextBold)`\n  font-size: 18px;\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  margin: 32px 0 24px 0;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n  cursor: pointer;\n  transition: ${Transitions.all};\n\n  &:hover,\n  &:focus-within {\n    color: ${Colors.Yellow[500]};\n  }\n`\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border-bottom: ${Colors.Gray['300']} 1px solid;\n  padding: 16px;\n`\n\nconst BalanceWrapper = styled.div`\n  color: ${Colors.Gray['600']};\n  font-size: 14px;\n`\n\nconst Input = styled.input`\n  width: 120px;\n  padding: 0 0 0 24px;\n  border: 0;\n  border-radius: ${BorderRad.m};\n  -moz-appearance: textfield;\n  outline: none;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-background-clip: text;\n  }\n`\n\nconst AddressInput = styled(Input)`\n  width: 100%;\n  padding: 0 0 0 38px;\n`\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${Colors.Gray['600']};\n  border: ${Colors.Gray['300']} 1px solid;\n  border-radius: ${BorderRad.m};\n  overflow: hidden;\n  transition: ${Transitions.all};\n  padding:10px;\n\n  &:hover,\n  &:focus-within {\n    border-color: ${Colors.Black[900]};\n  }\n`\n\nconst FormTicker = styled.div`\n  padding: 0 8px;\n`\n\nconst SmallButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  height: 100%;\n  padding: 8px 24px;\n  margin-top:10px;\n\n  &:disabled {\n    color: ${Colors.Gray['600']};\n    cursor: unset;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: unset;\n    color: unset;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}