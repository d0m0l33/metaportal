{"ast":null,"code":"import _classCallCheck from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _toConsumableArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"limit\", \"lineWidth\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useFrame, extend } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\nvar context = /*#__PURE__*/React.createContext(null);\n\nvar arrColor = function arrColor(color) {\n  return color instanceof THREE.Color ? color.toArray() : color;\n};\n\nvar arrPos = function arrPos(pos) {\n  return pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n};\n\nvar Segments = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var _props$limit = props.limit,\n      limit = _props$limit === void 0 ? 1000 : _props$limit,\n      _props$lineWidth = props.lineWidth,\n      lineWidth = _props$lineWidth === void 0 ? 1.0 : _props$lineWidth,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      segments = _React$useState2[0],\n      setSegments = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    return new Line2();\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      line = _React$useState4[0];\n\n  var _React$useState5 = React.useState(function () {\n    return new LineMaterial();\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      material = _React$useState6[0];\n\n  var _React$useState7 = React.useState(function () {\n    return new LineSegmentsGeometry();\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      geometry = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    return new THREE.Vector2(512, 512);\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      resolution = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return Array(limit * 6).fill(0);\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      positions = _React$useState12[0];\n\n  var _React$useState13 = React.useState(function () {\n    return Array(limit * 6).fill(0);\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 1),\n      colors = _React$useState14[0];\n\n  var api = React.useMemo(function () {\n    return {\n      subscribe: function subscribe(ref) {\n        setSegments(function (segments) {\n          return [].concat(_toConsumableArray(segments), [ref]);\n        });\n        return function () {\n          return setSegments(function (segments) {\n            return segments.filter(function (item) {\n              return item.current !== ref.current;\n            });\n          });\n        };\n      }\n    };\n  }, []);\n  useFrame(function () {\n    for (var i = 0; i < limit; i++) {\n      var _segments$i;\n\n      var segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      var segmentStart = segment ? arrPos(segment.start) : [0, 0, 0];\n      var segmentEnd = segment ? arrPos(segment.end) : [0, 0, 0];\n      var segmentColor = segment ? arrColor(segment.color) : [1, 1, 1]; //console.log(segmentStart, segmentEnd, segmentColor)\n\n      for (var j = 0; j < 3; j++) {\n        positions[i * 6 + j] = segmentStart[j];\n        positions[i * 6 + j + 3] = segmentEnd[j];\n        colors[i * 6 + j] = segmentColor[j];\n        colors[i * 6 + j + 3] = segmentColor[j];\n      }\n    }\n\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\n\nvar SegmentObject = function SegmentObject() {\n  _classCallCheck(this, SegmentObject);\n\n  this.color = new THREE.Color('white');\n  this.start = new THREE.Vector3(0, 0, 0);\n  this.end = new THREE.Vector3(0, 0, 0);\n};\n\nvar Segment = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  var ref = React.useRef();\n  React.useMemo(function () {\n    return extend({\n      SegmentObject: SegmentObject\n    });\n  }, []);\n  React.useLayoutEffect(function () {\n    return api.subscribe(ref);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", _extends({\n    ref: mergeRefs([ref, forwardedRef])\n  }, props));\n});\nexport { Segment, Segments };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/Segments.js"],"names":["_extends","THREE","React","mergeRefs","useFrame","extend","Line2","LineMaterial","LineSegmentsGeometry","context","createContext","arrColor","color","Color","toArray","arrPos","pos","Vector3","Segments","forwardRef","props","forwardedRef","limit","lineWidth","children","rest","useState","segments","setSegments","line","material","geometry","Vector2","resolution","Array","fill","positions","colors","api","useMemo","subscribe","ref","filter","item","current","i","_segments$i","segment","segmentStart","start","segmentEnd","end","segmentColor","j","setColors","setPositions","computeLineDistances","createElement","object","attach","vertexColors","linewidth","Provider","value","SegmentObject","Segment","useContext","useRef","useLayoutEffect"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useFrame, extend } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst arrColor = color => color instanceof THREE.Color ? color.toArray() : color;\n\nconst arrPos = pos => pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    for (let i = 0; i < limit; i++) {\n      var _segments$i;\n\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      const segmentStart = segment ? arrPos(segment.start) : [0, 0, 0];\n      const segmentEnd = segment ? arrPos(segment.end) : [0, 0, 0];\n      const segmentColor = segment ? arrColor(segment.color) : [1, 1, 1]; //console.log(segmentStart, segmentEnd, segmentColor)\n\n      for (var j = 0; j < 3; j++) {\n        positions[i * 6 + j] = segmentStart[j];\n        positions[i * 6 + j + 3] = segmentEnd[j];\n        colors[i * 6 + j] = segmentColor[j];\n        colors[i * 6 + j + 3] = segmentColor[j];\n      }\n    }\n\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\n\nclass SegmentObject {\n  constructor() {\n    this.color = new THREE.Color('white');\n    this.start = new THREE.Vector3(0, 0, 0);\n    this.end = new THREE.Vector3(0, 0, 0);\n  }\n\n}\n\nconst Segment = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef();\n  React.useMemo(() => extend({\n    SegmentObject\n  }), []);\n  React.useLayoutEffect(() => api.subscribe(ref), []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", _extends({\n    ref: mergeRefs([ref, forwardedRef])\n  }, props));\n});\n\nexport { Segment, Segments };\n"]},"metadata":{},"sourceType":"module"}