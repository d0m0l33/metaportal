{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\nconst MapControls = /*#__PURE__*/React.forwardRef(function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    enableDamping: true\n  };\n  let ref = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    camera,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(_ref => {\n    let {\n      invalidate\n    } = _ref;\n    return invalidate;\n  });\n  const defaultCamera = useThree(_ref2 => {\n    let {\n      camera\n    } = _ref2;\n    return camera;\n  });\n  const domElement = useThree(_ref3 => {\n    let {\n      gl\n    } = _ref3;\n    return gl.domElement;\n  });\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(domElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, domElement]);\n  useFrame(() => controls.update());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\nexport { MapControls };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/MapControls.js"],"names":["_extends","useThree","useFrame","React","MapControls","MapControls$1","forwardRef","props","enableDamping","ref","camera","onChange","onStart","onEnd","rest","invalidate","defaultCamera","domElement","gl","explCamera","controls","useMemo","useEffect","connect","callback","e","addEventListener","dispose","removeEventListener","update","createElement","undefined","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,cAA7C;AAEA,MAAMD,WAAW,GAAG,aAAaD,KAAK,CAACG,UAAN,CAAiB,YAEvC;AAAA,MAFwCC,KAExC,uEAFgD;AACzDC,IAAAA,aAAa,EAAE;AAD0C,GAEhD;AAAA,MAARC,GAAQ;AACT,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJ,OAAGC;AALC,MAMFP,KANJ;AAOA,QAAMQ,UAAU,GAAGd,QAAQ,CAAC;AAAA,QAAC;AAC3Bc,MAAAA;AAD2B,KAAD;AAAA,WAEtBA,UAFsB;AAAA,GAAD,CAA3B;AAGA,QAAMC,aAAa,GAAGf,QAAQ,CAAC;AAAA,QAAC;AAC9BS,MAAAA;AAD8B,KAAD;AAAA,WAEzBA,MAFyB;AAAA,GAAD,CAA9B;AAGA,QAAMO,UAAU,GAAGhB,QAAQ,CAAC;AAAA,QAAC;AAC3BiB,MAAAA;AAD2B,KAAD;AAAA,WAEtBA,EAAE,CAACD,UAFmB;AAAA,GAAD,CAA3B;AAGA,QAAME,UAAU,GAAGT,MAAM,IAAIM,aAA7B;AACA,QAAMI,QAAQ,GAAGjB,KAAK,CAACkB,OAAN,CAAc,MAAM,IAAIhB,aAAJ,CAAkBc,UAAlB,CAApB,EAAmD,CAACA,UAAD,CAAnD,CAAjB;AACAhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBF,IAAAA,QAAQ,CAACG,OAAT,CAAiBN,UAAjB;;AAEA,UAAMO,QAAQ,GAAGC,CAAC,IAAI;AACpBV,MAAAA,UAAU;AACV,UAAIJ,QAAJ,EAAcA,QAAQ,CAACc,CAAD,CAAR;AACf,KAHD;;AAKAL,IAAAA,QAAQ,CAACM,gBAAT,CAA0B,QAA1B,EAAoCF,QAApC;AACA,QAAIZ,OAAJ,EAAaQ,QAAQ,CAACM,gBAAT,CAA0B,OAA1B,EAAmCd,OAAnC;AACb,QAAIC,KAAJ,EAAWO,QAAQ,CAACM,gBAAT,CAA0B,KAA1B,EAAiCb,KAAjC;AACX,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACO,OAAT;AACAP,MAAAA,QAAQ,CAACQ,mBAAT,CAA6B,QAA7B,EAAuCJ,QAAvC;AACA,UAAIZ,OAAJ,EAAaQ,QAAQ,CAACQ,mBAAT,CAA6B,OAA7B,EAAsChB,OAAtC;AACb,UAAIC,KAAJ,EAAWO,QAAQ,CAACQ,mBAAT,CAA6B,KAA7B,EAAoCf,KAApC;AACZ,KALD;AAMD,GAjBD,EAiBG,CAACF,QAAD,EAAWC,OAAX,EAAoBC,KAApB,EAA2BO,QAA3B,EAAqCL,UAArC,EAAiDE,UAAjD,CAjBH;AAkBAf,EAAAA,QAAQ,CAAC,MAAMkB,QAAQ,CAACS,MAAT,EAAP,CAAR;AACA,SAAO,aAAa1B,KAAK,CAAC2B,aAAN,CAAoB,WAApB,EAAiC9B,QAAQ,CAAC;AAC5DS,IAAAA,GAAG,EAAEA,GADuD;AAE5DkB,IAAAA,OAAO,EAAEI,SAFmD;AAG5DC,IAAAA,MAAM,EAAEZ,QAHoD;AAI5DZ,IAAAA,aAAa,EAAE;AAJ6C,GAAD,EAK1DM,IAL0D,CAAzC,CAApB;AAMD,CA9CgC,CAAjC;AAgDA,SAASV,WAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    camera,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const domElement = useThree(({\n    gl\n  }) => gl.domElement);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(domElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, domElement]);\n  useFrame(() => controls.update());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n"]},"metadata":{},"sourceType":"module"}