{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Plane, Raycaster, Vector2, Vector3, Matrix4 } from 'three';\n\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"transformGroup\", false);\n\n    _defineProperty(this, \"_objects\", void 0);\n\n    _defineProperty(this, \"_camera\", void 0);\n\n    _defineProperty(this, \"_domElement\", void 0);\n\n    _defineProperty(this, \"_plane\", new Plane());\n\n    _defineProperty(this, \"_raycaster\", new Raycaster());\n\n    _defineProperty(this, \"_mouse\", new Vector2());\n\n    _defineProperty(this, \"_offset\", new Vector3());\n\n    _defineProperty(this, \"_intersection\", new Vector3());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_inverseMatrix\", new Matrix4());\n\n    _defineProperty(this, \"_intersections\", []);\n\n    _defineProperty(this, \"_selected\", null);\n\n    _defineProperty(this, \"_hovered\", null);\n\n    _defineProperty(this, \"activate\", () => {\n      this._domElement.addEventListener('pointermove', this.onPointerMove);\n\n      this._domElement.addEventListener('pointerdown', this.onPointerDown);\n\n      this._domElement.addEventListener('pointerup', this.onPointerCancel);\n\n      this._domElement.addEventListener('pointerleave', this.onPointerCancel);\n\n      this._domElement.addEventListener('touchmove', this.onTouchMove);\n\n      this._domElement.addEventListener('touchstart', this.onTouchStart);\n\n      this._domElement.addEventListener('touchend', this.onTouchEnd);\n    });\n\n    _defineProperty(this, \"deactivate\", () => {\n      this._domElement.removeEventListener('pointermove', this.onPointerMove);\n\n      this._domElement.removeEventListener('pointerdown', this.onPointerDown);\n\n      this._domElement.removeEventListener('pointerup', this.onPointerCancel);\n\n      this._domElement.removeEventListener('pointerleave', this.onPointerCancel);\n\n      this._domElement.removeEventListener('touchmove', this.onTouchMove);\n\n      this._domElement.removeEventListener('touchstart', this.onTouchStart);\n\n      this._domElement.removeEventListener('touchend', this.onTouchEnd);\n\n      this._domElement.style.cursor = '';\n    });\n\n    _defineProperty(this, \"dispose\", () => this.deactivate());\n\n    _defineProperty(this, \"getObjects\", () => this._objects);\n\n    _defineProperty(this, \"onMouseMove\", event => {\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: 'drag',\n          object: this._selected\n        });\n        return;\n      }\n\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        const object = this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n        if (this._hovered !== object) {\n          this.dispatchEvent({\n            type: 'hoveron',\n            object\n          });\n          this._domElement.style.cursor = 'pointer';\n          this._hovered = object;\n        }\n      } else {\n        if (this._hovered !== null) {\n          this.dispatchEvent({\n            type: 'hoveroff',\n            object: this._hovered\n          });\n          this._domElement.style.cursor = 'auto';\n          this._hovered = null;\n        }\n      }\n    });\n\n    _defineProperty(this, \"onMouseDown\", () => {\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = 'move';\n        this.dispatchEvent({\n          type: 'dragstart',\n          object: this._selected\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMouseCancel\", () => {\n      if (this._selected) {\n        this.dispatchEvent({\n          type: 'dragend',\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = this._hovered ? 'pointer' : 'auto';\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseDown();\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onPointerCancel\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseCancel();\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onTouchMove\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: 'drag',\n          object: this._selected\n        });\n        return;\n      }\n    });\n\n    _defineProperty(this, \"onTouchStart\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = 'move';\n        this.dispatchEvent({\n          type: 'dragstart',\n          object: this._selected\n        });\n      }\n    });\n\n    _defineProperty(this, \"onTouchEnd\", event => {\n      event.preventDefault();\n\n      if (this._selected) {\n        this.dispatchEvent({\n          type: 'dragend',\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = 'auto';\n    });\n\n    this._objects = _objects;\n    this._camera = _camera;\n    this._domElement = _domElement;\n    this.activate();\n  }\n\n}\n\nexport { DragControls };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportalpublic/node_modules/three-stdlib/controls/DragControls.js"],"names":["_defineProperty","EventDispatcher","Plane","Raycaster","Vector2","Vector3","Matrix4","DragControls","constructor","_objects","_camera","_domElement","addEventListener","onPointerMove","onPointerDown","onPointerCancel","onTouchMove","onTouchStart","onTouchEnd","removeEventListener","style","cursor","deactivate","event","rect","getBoundingClientRect","_mouse","x","clientX","left","width","y","clientY","top","height","_raycaster","setFromCamera","_selected","enabled","ray","intersectPlane","_plane","_intersection","position","copy","sub","_offset","applyMatrix4","_inverseMatrix","dispatchEvent","type","object","_intersections","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","_worldPosition","setFromMatrixPosition","matrixWorld","_hovered","transformGroup","parent","invert","pointerType","onMouseMove","onMouseDown","onMouseCancel","preventDefault","newEvent","changedTouches","activate"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Plane, Raycaster, Vector2, Vector3, Matrix4 } from 'three';\n\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"transformGroup\", false);\n\n    _defineProperty(this, \"_objects\", void 0);\n\n    _defineProperty(this, \"_camera\", void 0);\n\n    _defineProperty(this, \"_domElement\", void 0);\n\n    _defineProperty(this, \"_plane\", new Plane());\n\n    _defineProperty(this, \"_raycaster\", new Raycaster());\n\n    _defineProperty(this, \"_mouse\", new Vector2());\n\n    _defineProperty(this, \"_offset\", new Vector3());\n\n    _defineProperty(this, \"_intersection\", new Vector3());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_inverseMatrix\", new Matrix4());\n\n    _defineProperty(this, \"_intersections\", []);\n\n    _defineProperty(this, \"_selected\", null);\n\n    _defineProperty(this, \"_hovered\", null);\n\n    _defineProperty(this, \"activate\", () => {\n      this._domElement.addEventListener('pointermove', this.onPointerMove);\n\n      this._domElement.addEventListener('pointerdown', this.onPointerDown);\n\n      this._domElement.addEventListener('pointerup', this.onPointerCancel);\n\n      this._domElement.addEventListener('pointerleave', this.onPointerCancel);\n\n      this._domElement.addEventListener('touchmove', this.onTouchMove);\n\n      this._domElement.addEventListener('touchstart', this.onTouchStart);\n\n      this._domElement.addEventListener('touchend', this.onTouchEnd);\n    });\n\n    _defineProperty(this, \"deactivate\", () => {\n      this._domElement.removeEventListener('pointermove', this.onPointerMove);\n\n      this._domElement.removeEventListener('pointerdown', this.onPointerDown);\n\n      this._domElement.removeEventListener('pointerup', this.onPointerCancel);\n\n      this._domElement.removeEventListener('pointerleave', this.onPointerCancel);\n\n      this._domElement.removeEventListener('touchmove', this.onTouchMove);\n\n      this._domElement.removeEventListener('touchstart', this.onTouchStart);\n\n      this._domElement.removeEventListener('touchend', this.onTouchEnd);\n\n      this._domElement.style.cursor = '';\n    });\n\n    _defineProperty(this, \"dispose\", () => this.deactivate());\n\n    _defineProperty(this, \"getObjects\", () => this._objects);\n\n    _defineProperty(this, \"onMouseMove\", event => {\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: 'drag',\n          object: this._selected\n        });\n        return;\n      }\n\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        const object = this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n        if (this._hovered !== object) {\n          this.dispatchEvent({\n            type: 'hoveron',\n            object\n          });\n          this._domElement.style.cursor = 'pointer';\n          this._hovered = object;\n        }\n      } else {\n        if (this._hovered !== null) {\n          this.dispatchEvent({\n            type: 'hoveroff',\n            object: this._hovered\n          });\n          this._domElement.style.cursor = 'auto';\n          this._hovered = null;\n        }\n      }\n    });\n\n    _defineProperty(this, \"onMouseDown\", () => {\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = 'move';\n        this.dispatchEvent({\n          type: 'dragstart',\n          object: this._selected\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMouseCancel\", () => {\n      if (this._selected) {\n        this.dispatchEvent({\n          type: 'dragend',\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = this._hovered ? 'pointer' : 'auto';\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseDown();\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onPointerCancel\", event => {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.onMouseCancel();\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(this, \"onTouchMove\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: 'drag',\n          object: this._selected\n        });\n        return;\n      }\n    });\n\n    _defineProperty(this, \"onTouchStart\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = 'move';\n        this.dispatchEvent({\n          type: 'dragstart',\n          object: this._selected\n        });\n      }\n    });\n\n    _defineProperty(this, \"onTouchEnd\", event => {\n      event.preventDefault();\n\n      if (this._selected) {\n        this.dispatchEvent({\n          type: 'dragend',\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = 'auto';\n    });\n\n    this._objects = _objects;\n    this._camera = _camera;\n    this._domElement = _domElement;\n    this.activate();\n  }\n\n}\n\nexport { DragControls };\n"]},"metadata":{},"sourceType":"module"}