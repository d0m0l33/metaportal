{"ast":null,"code":"import _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { ERC20Interface } from '../constants';\nimport { useContractCalls } from './useContractCall';\nexport function useToken(tokenAddress) {\n  var _a, _b;\n\n  var partialCall = {\n    abi: ERC20Interface,\n    address: tokenAddress || '',\n    args: []\n  };\n  var args = ['name', 'symbol', 'decimals', 'totalSupply'].map(function (method) {\n    return Object.assign(Object.assign({}, partialCall), {\n      method: method\n    });\n  });\n\n  var _useContractCalls = useContractCalls(args),\n      _useContractCalls2 = _slicedToArray(_useContractCalls, 4),\n      name = _useContractCalls2[0],\n      symbol = _useContractCalls2[1],\n      decimals = _useContractCalls2[2],\n      totalSupply = _useContractCalls2[3];\n\n  if (!name && !symbol && !decimals && !totalSupply) {\n    return undefined;\n  }\n\n  return {\n    name: (_a = name === null || name === void 0 ? void 0 : name[0]) !== null && _a !== void 0 ? _a : '',\n    symbol: (_b = symbol === null || symbol === void 0 ? void 0 : symbol[0]) !== null && _b !== void 0 ? _b : '',\n    decimals: decimals === null || decimals === void 0 ? void 0 : decimals[0],\n    totalSupply: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply[0]\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useToken.ts"],"names":[],"mappings":";AAAA,SAAS,cAAT,QAA+B,cAA/B;AAEA,SAAuB,gBAAvB,QAA+C,mBAA/C;AAGA,OAAM,SAAU,QAAV,CAAmB,YAAnB,EAA+C;;;AACnD,MAAM,WAAW,GAAG;AAClB,IAAA,GAAG,EAAE,cADa;AAElB,IAAA,OAAO,EAAE,YAAY,IAAI,EAFP;AAGlB,IAAA,IAAI,EAAE;AAHY,GAApB;AAKA,MAAM,IAAI,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,aAA/B,EAA8C,GAA9C,CAAkD,UAAC,MAAD;AAAA,WAA0B,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,WAAN,CAAA,EAAiB;AAAE,MAAA,MAAM,EAAN;AAAF,KAAjB,CAA1B;AAAA,GAAlD,CAAb;;AACA,0BAA8C,gBAAgB,CAAC,IAAD,CAA9D;AAAA;AAAA,MAAO,IAAP;AAAA,MAAa,MAAb;AAAA,MAAqB,QAArB;AAAA,MAA+B,WAA/B;;AAEA,MAAI,CAAC,IAAD,IAAS,CAAC,MAAV,IAAoB,CAAC,QAArB,IAAiC,CAAC,WAAtC,EAAmD;AACjD,WAAO,SAAP;AACD;;AAED,SAAO;AACL,IAAA,IAAI,EAAA,CAAA,EAAA,GAAE,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAG,CAAH,CAAN,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,EAAV,GAAe,EADd;AAEL,IAAA,MAAM,EAAA,CAAA,EAAA,GAAE,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAG,CAAH,CAAR,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,EAAZ,GAAiB,EAFlB;AAGL,IAAA,QAAQ,EAAE,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAG,CAAH,CAHb;AAIL,IAAA,WAAW,EAAE,WAAW,KAAA,IAAX,IAAA,WAAW,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAA,WAAW,CAAG,CAAH;AAJnB,GAAP;AAMD","sourceRoot":"","sourcesContent":["import { ERC20Interface } from '../constants';\nimport { useContractCalls } from './useContractCall';\nexport function useToken(tokenAddress) {\n    var _a, _b;\n    const partialCall = {\n        abi: ERC20Interface,\n        address: tokenAddress || '',\n        args: [],\n    };\n    const args = ['name', 'symbol', 'decimals', 'totalSupply'].map((method) => (Object.assign(Object.assign({}, partialCall), { method })));\n    const [name, symbol, decimals, totalSupply] = useContractCalls(args);\n    if (!name && !symbol && !decimals && !totalSupply) {\n        return undefined;\n    }\n    return {\n        name: (_a = name === null || name === void 0 ? void 0 : name[0]) !== null && _a !== void 0 ? _a : '',\n        symbol: (_b = symbol === null || symbol === void 0 ? void 0 : symbol[0]) !== null && _b !== void 0 ? _b : '',\n        decimals: decimals === null || decimals === void 0 ? void 0 : decimals[0],\n        totalSupply: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply[0],\n    };\n}\n//# sourceMappingURL=useToken.js.map"]},"metadata":{},"sourceType":"module"}