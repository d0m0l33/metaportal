{"ast":null,"code":"export var TransactionLevel;(function(TransactionLevel){TransactionLevel[TransactionLevel[\"Root\"]=0]=\"Root\";TransactionLevel[TransactionLevel[\"LogEvents\"]=1]=\"LogEvents\";})(TransactionLevel||(TransactionLevel={}));export var CriteriaComparions;(function(CriteriaComparions){CriteriaComparions[CriteriaComparions[\"GT\"]=0]=\"GT\";CriteriaComparions[CriteriaComparions[\"LT\"]=1]=\"LT\";})(CriteriaComparions||(CriteriaComparions={}));","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/portalHooks/BadgeHelperTypes.ts"],"names":["TransactionLevel","CriteriaComparions"],"mappings":"AAEA,UAAYA,CAAAA,gBAAZ,C,UAAYA,gB,EAAAA,gB,CAAAA,gB,mBAAAA,gB,CAAAA,gB,gCAAAA,gB,GAAAA,gB,MAKV,UAAYC,CAAAA,kBAAZ,C,UAAYA,kB,EAAAA,kB,CAAAA,kB,eAAAA,kB,CAAAA,kB,kBAAAA,kB,GAAAA,kB","sourcesContent":["import { ChainId } from \"@usedapp/core\";\n\nexport enum TransactionLevel {\n    Root = 0,\n    LogEvents\n  }\n  \n  export enum CriteriaComparions {\n    GT = 0,\n    LT\n  }\n  \n  export interface UIMetadata {\n    domainId: number,\n    name: string,\n    balance: number,\n    imageUri: string| null,\n    description: string,\n    requirements: string[]\n    onChain: OnChainEntity| null;\n  }\n\n  export interface OnChainEntity {\n    chainId: ChainId,\n    address: string,\n    tokenId: number,\n  }\n  \n  export interface MetaBadge {\n    ui : UIMetadata| null;\n    parseRules: ParseParams,\n  }\n  \n  export interface RequirementsCriteria {\n    comparison : CriteriaComparions,\n    value: number\n  }\n  \n  export interface ParseParams {\n    level: TransactionLevel,\n    keyValueObject: KeyValueObject,\n    useKeyValueMatching: boolean,\n    criteria: RequirementsCriteria\n  }\n  \n  export interface KeyValueObject {\n    name: string,\n    value?: boolean|string|number;\n  }"]},"metadata":{},"sourceType":"module"}