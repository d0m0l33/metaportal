{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";export var getTransactionsFor=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(signerAddress,chainId){var COVALENT_API_KEY,COVALENT,transactionsForAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!signerAddress||signerAddress===undefined)){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:console.log('signer address : ',signerAddress);COVALENT_API_KEY=\"ckey_4aed01d0d6e248a7a4ab27acb8a\";COVALENT={url:\"https://api.covalenthq.com/v1/\"};transactionsForAddress=\"\".concat(COVALENT.url).concat(chainId,\"/address/\").concat(signerAddress,\"/transactions_v2/?key=\").concat(COVALENT_API_KEY);// Make a request for a user with a given ID\nreturn _context.abrupt(\"return\",axios.get(transactionsForAddress).then(function(response){// handle success\nreturn response;}).catch(function(error){// handle error\nconsole.log(error);return null;}));case 7:case\"end\":return _context.stop();}}},_callee);}));return function getTransactionsFor(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/src/portalHooks/TransactionsAPI.ts"],"names":["axios","getTransactionsFor","signerAddress","chainId","undefined","console","log","COVALENT_API_KEY","COVALENT","url","transactionsForAddress","get","then","response","catch","error"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,0FAAG,iBAAOC,aAAP,CAA6CC,OAA7C,4KAC7B,CAACD,aAAD,EAAkBA,aAAa,GAAKE,SADP,0DAErB,IAFqB,SAIhCC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAgCJ,aAAhC,EACMK,gBAL0B,CAKP,kCALO,CAM1BC,QAN0B,CAMf,CACfC,GAAG,CAAE,gCADU,CANe,CAU1BC,sBAV0B,WAW7BF,QAAQ,CAACC,GAXoB,SAWdN,OAXc,qBAWKD,aAXL,kCAW2CK,gBAX3C,EAahC;AAbgC,gCAczBP,KAAK,CAACW,GAAN,CAAUD,sBAAV,EACJE,IADI,CACC,SAAUC,QAAV,CAAoB,CACxB;AACA,MAAOA,CAAAA,QAAP,CACD,CAJI,EAKJC,KALI,CAKE,SAAUC,KAAV,CAAiB,CACtB;AACAV,OAAO,CAACC,GAAR,CAAYS,KAAZ,EAEA,MAAO,KAAP,CACD,CAVI,CAdyB,wDAAH,kBAAlBd,CAAAA,kBAAkB,gDAAxB","sourcesContent":["import axios, { AxiosResponse } from \"axios\"\n\nexport const getTransactionsFor = async (signerAddress: string|null|undefined, chainId:  number|null|undefined): Promise<AxiosResponse|null>=> {\n  if(!signerAddress || signerAddress === undefined){\n      return null;\n  }\n  console.log('signer address : ',signerAddress)\n  const COVALENT_API_KEY = \"ckey_4aed01d0d6e248a7a4ab27acb8a\"\n  const COVALENT = {\n    url: \"https://api.covalenthq.com/v1/\", \n  }\n\n  const transactionsForAddress = \n  `${COVALENT.url}${chainId}/address/${signerAddress}/transactions_v2/?key=${COVALENT_API_KEY}`\n\n  // Make a request for a user with a given ID\n  return axios.get(transactionsForAddress)\n    .then(function (response) {\n      // handle success\n      return response\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n\n      return null;\n    });\n}"]},"metadata":{},"sourceType":"module"}