{"ast":null,"code":"import _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  var ref = React.useRef();\n\n  var _React$useState = React.useState(function () {\n    return root ? root instanceof Object3D ? {\n      current: root\n    } : root : ref;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      actualRef = _React$useState2[0]; // eslint-disable-next-line prettier/prettier\n\n\n  var _React$useState3 = React.useState(function () {\n    return new AnimationMixer(undefined);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      mixer = _React$useState4[0];\n\n  var lazyActions = React.useRef({});\n\n  var _React$useState5 = React.useState(function () {\n    var actions = {};\n    clips.forEach(function (clip) {\n      return Object.defineProperty(actions, clip.name, {\n        enumerable: true,\n        get: function get() {\n          if (actualRef.current) {\n            return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n          }\n        }\n      });\n    });\n    return {\n      ref: actualRef,\n      clips: clips,\n      actions: actions,\n      names: clips.map(function (c) {\n        return c.name;\n      }),\n      mixer: mixer\n    };\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      api = _React$useState6[0];\n\n  useFrame(function (state, delta) {\n    return mixer.update(delta);\n  });\n  React.useEffect(function () {\n    var currentRoot = actualRef.current;\n    return function () {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(function (action) {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/useAnimations.js"],"names":["React","Object3D","AnimationMixer","useFrame","useAnimations","clips","root","ref","useRef","useState","current","actualRef","undefined","mixer","lazyActions","actions","forEach","clip","Object","defineProperty","name","enumerable","get","clipAction","names","map","c","api","state","delta","update","useEffect","currentRoot","values","action","uncacheAction"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,EAAZ;;AACA,wBAAoBR,KAAK,CAACS,QAAN,CAAe;AAAA,WAAMH,IAAI,GAAGA,IAAI,YAAYL,QAAhB,GAA2B;AACzES,MAAAA,OAAO,EAAEJ;AADgE,KAA3B,GAE5CA,IAFyC,GAElCC,GAFwB;AAAA,GAAf,CAApB;AAAA;AAAA,MAAOI,SAAP,uBAFkC,CAIjB;;;AAEjB,yBAAgBX,KAAK,CAACS,QAAN,CAAe;AAAA,WAAM,IAAIP,cAAJ,CAAmBU,SAAnB,CAAN;AAAA,GAAf,CAAhB;AAAA;AAAA,MAAOC,KAAP;;AACA,MAAMC,WAAW,GAAGd,KAAK,CAACQ,MAAN,CAAa,EAAb,CAApB;;AACA,yBAAcR,KAAK,CAACS,QAAN,CAAe,YAAM;AACjC,QAAMM,OAAO,GAAG,EAAhB;AACAV,IAAAA,KAAK,CAACW,OAAN,CAAc,UAAAC,IAAI;AAAA,aAAIC,MAAM,CAACC,cAAP,CAAsBJ,OAAtB,EAA+BE,IAAI,CAACG,IAApC,EAA0C;AAC9DC,QAAAA,UAAU,EAAE,IADkD;AAG9DC,QAAAA,GAH8D,iBAGxD;AACJ,cAAIX,SAAS,CAACD,OAAd,EAAuB;AACrB,mBAAOI,WAAW,CAACJ,OAAZ,CAAoBO,IAAI,CAACG,IAAzB,MAAmCN,WAAW,CAACJ,OAAZ,CAAoBO,IAAI,CAACG,IAAzB,IAAiCP,KAAK,CAACU,UAAN,CAAiBN,IAAjB,EAAuBN,SAAS,CAACD,OAAjC,CAApE,CAAP;AACD;AACF;AAP6D,OAA1C,CAAJ;AAAA,KAAlB;AAUA,WAAO;AACLH,MAAAA,GAAG,EAAEI,SADA;AAELN,MAAAA,KAAK,EAALA,KAFK;AAGLU,MAAAA,OAAO,EAAPA,OAHK;AAILS,MAAAA,KAAK,EAAEnB,KAAK,CAACoB,GAAN,CAAU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACN,IAAN;AAAA,OAAX,CAJF;AAKLP,MAAAA,KAAK,EAALA;AALK,KAAP;AAOD,GAnBa,CAAd;AAAA;AAAA,MAAOc,GAAP;;AAoBAxB,EAAAA,QAAQ,CAAC,UAACyB,KAAD,EAAQC,KAAR;AAAA,WAAkBhB,KAAK,CAACiB,MAAN,CAAaD,KAAb,CAAlB;AAAA,GAAD,CAAR;AACA7B,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,YAAM;AACpB,QAAMC,WAAW,GAAGrB,SAAS,CAACD,OAA9B;AACA,WAAO,YAAM;AACX;AACAI,MAAAA,WAAW,CAACJ,OAAZ,GAAsB,EAAtB;AACAQ,MAAAA,MAAM,CAACe,MAAP,CAAcN,GAAG,CAACZ,OAAlB,EAA2BC,OAA3B,CAAmC,UAAAkB,MAAM,EAAI;AAC3C,YAAIF,WAAJ,EAAiB;AACfnB,UAAAA,KAAK,CAACsB,aAAN,CAAoBD,MAApB,EAA4BF,WAA5B;AACD;AACF,OAJD;AAKD,KARD,CAFoB,CAUjB;AACJ,GAXD,EAWG,CAAC3B,KAAD,CAXH;AAYA,SAAOsB,GAAP;AACD;;AAED,SAASvB,aAAT","sourcesContent":["import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };\n"]},"metadata":{},"sourceType":"module"}