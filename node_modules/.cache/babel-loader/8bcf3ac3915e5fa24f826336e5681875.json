{"ast":null,"code":"import _slicedToArray from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nvar PointMaterialImpl = /*#__PURE__*/function (_THREE$ShaderMaterial) {\n  _inherits(PointMaterialImpl, _THREE$ShaderMaterial);\n\n  var _super = _createSuper(PointMaterialImpl);\n\n  function PointMaterialImpl() {\n    _classCallCheck(this, PointMaterialImpl);\n\n    return _super.call(this, {\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: \"\\n      varying vec3 vColor;\\n      void main() {\\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n        float r = dot(cxy, cxy);\\n        float delta = fwidth(r);\\n        vec3 color = vColor;\\n        #ifdef TONE_MAPPING\\n          color = toneMapping(color);\\n        #endif\\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\\n      }\",\n      vertexColors: true\n    });\n  }\n\n  _createClass(PointMaterialImpl, [{\n    key: \"scale\",\n    get: function get() {\n      return this.uniforms.size.value;\n    },\n    set: function set(v) {\n      this.uniforms.size.value = v;\n    }\n  }]);\n\n  return PointMaterialImpl;\n}(THREE.ShaderMaterial);\n\nvar PointMaterial = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useState = React.useState(function () {\n    return new PointMaterialImpl();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      material = _React$useState2[0];\n\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { PointMaterial, PointMaterialImpl };","map":{"version":3,"sources":["/Users/dominiclee/Desktop/ethprojs/metaportal/node_modules/@react-three/drei/core/PointMaterial.js"],"names":["_extends","THREE","React","PointMaterialImpl","transparent","uniforms","size","value","vertexShader","ShaderLib","points","fragmentShader","vertexColors","v","ShaderMaterial","PointMaterial","forwardRef","props","ref","useState","material","createElement","object","attach"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,iB;;;;;AACJ,+BAAc;AAAA;;AAAA,6BACN;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE;AADH;AADE,OAFN;AAOJC,MAAAA,YAAY,EAAEP,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,CAAuBF,YAPjC;AAQJG,MAAAA,cAAc,4YARV;AAoBJC,MAAAA,YAAY,EAAE;AApBV,KADM;AAuBb;;;;SAED,eAAY;AACV,aAAO,KAAKP,QAAL,CAAcC,IAAd,CAAmBC,KAA1B;AACD,K;SAED,aAAUM,CAAV,EAAa;AACX,WAAKR,QAAL,CAAcC,IAAd,CAAmBC,KAAnB,GAA2BM,CAA3B;AACD;;;;EAhC6BZ,KAAK,CAACa,c;;AAmCtC,IAAMC,aAAa,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAClE,wBAAmBhB,KAAK,CAACiB,QAAN,CAAe;AAAA,WAAM,IAAIhB,iBAAJ,EAAN;AAAA,GAAf,CAAnB;AAAA;AAAA,MAAOiB,QAAP;;AACA,SAAO,aAAalB,KAAK,CAACmB,aAAN,CAAoB,WAApB,EAAiCrB,QAAQ,CAAC;AAC5DsB,IAAAA,MAAM,EAAEF,QADoD;AAE5DF,IAAAA,GAAG,EAAEA,GAFuD;AAG5DK,IAAAA,MAAM,EAAE;AAHoD,GAAD,EAI1DN,KAJ0D,CAAzC,CAApB;AAKD,CAPkC,CAAnC;AASA,SAASF,aAAT,EAAwBZ,iBAAxB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: `\n      varying vec3 vColor;\n      void main() {\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n        float r = dot(cxy, cxy);\n        float delta = fwidth(r);\n        vec3 color = vColor;\n        #ifdef TONE_MAPPING\n          color = toneMapping(color);\n        #endif\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\n      }`,\n      vertexColors: true\n    });\n  }\n\n  get scale() {\n    return this.uniforms.size.value;\n  }\n\n  set scale(v) {\n    this.uniforms.size.value = v;\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n"]},"metadata":{},"sourceType":"module"}